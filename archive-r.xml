<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Jan Vanhove :: Blog</title>
<link>https://janhove.github.io/archive.html#category=R</link>
<atom:link href="https://janhove.github.io/archive-r.xml" rel="self" type="application/rss+xml"/>
<description>I blog about statistics and research design with an audience consisting of researchers in bilingualism, multilingualism, and applied linguistics in mind.</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Wed, 16 Feb 2022 23:00:00 GMT</lastBuildDate>
<item>
  <title>An R function for computing Levenshtein distances between texts using the word as the unit of comparison</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2022-02-17-levenshtein/index.html</link>
  <description><![CDATA[ 



<p>For a new research project, we needed a way to tabulate the changes that were made to a text when correcting it. Since we couldn’t find a suitable tool, I wrote an R function that uses the Levenshtein algorithm to determine both the smallest number of words that need to be changed to transform one version of a text into another and what these changes are.</p>
<p>You can download the <code>obtain_edits()</code> function from https://janhove.github.io/RCode/obtainEdits.R or source it directly:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://janhove.github.io/RCode/obtainEdits.R"</span>)</span></code></pre></div>
</div>
<p>The function recognises words that were deleted or inserted, words that were substituted for other words, and cases where one word was split into two words or where two words were merged to one word. All these changes count as one operation. The algorithm determines both the smallest number of operations needed to transform one version of the text into the other and outputs a data frame that lists what these operations are.</p>
<p>Here’s an example:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">original  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check howmany changes need be made in order to change the first tekst in to the second one."</span></span>
<span id="cb2-2">corrected <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check how many changes need to be made in order to change the first text into the second one."</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obtain_edits</span>(original, corrected)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 4

[[2]]
  change_position  change_type change_from change_to
1              14       merger       in to      into
2              13 substitution       tekst      text
3               5    insertion                    to
4               2        split     howmany  how many</code></pre>
</div>
</div>
<p>Note that while the minimal operation count is uniquely determined, the list of changes that were made isn’t. Consider this example:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">textA <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first secondthird"</span></span>
<span id="cb4-2">textB <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"second third"</span></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">obtain_edits</span>(textA, textB)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 2

[[2]]
  change_position change_type change_from    change_to
1               2       split secondthird second third
2               1    deletion       first             </code></pre>
</div>
</div>
<p>The algorithm identifies the difference from <code>textA</code> to <code>textB</code> as a matter of deleting ‘first’ and splitting up ‘secondthird’. But we could also consider it a matter of substituting ‘second’ for ‘first’ and ‘third’ for ‘secondthird’.</p>
<p>Nothing about stats or research design in this post, but perhaps this function is useful to someone somewhere!</p>



 ]]></description>
  <category>R</category>
  <guid>https://janhove.github.io/posts/2022-02-17-levenshtein/index.html</guid>
  <pubDate>Wed, 16 Feb 2022 23:00:00 GMT</pubDate>
</item>
<item>
  <title>The consequences of controlling for a post-treatment variable</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2021-06-29-posttreatment/index.html</link>
  <description><![CDATA[ 



<p>Let’s say you want to find out if a pedagogical intervention boosts learners’ conversational skills in L2 French. You’ve learnt that including a well-chosen control variable in your analysis can work <a href="../2017-10-24-increasing-power-precision">wonders</a> in terms of statistical power and precision, so you decide to administer a French vocabulary test to your participants in order to include their score on this test in your analyses as a covariate. But if you administer the vocabulary test <em>after</em> the intervention, it’s possible that the vocabulary scores are themselves affected by the intervention as well. If this is indeed the case, you may end up doing more harm than good. In this blog post, I will take a closer look at five general cases where controlling for such a ‘post-treatment’ variable is harmful.</p>
<p>In the following, <code>x</code> and <code>y</code> refer to the independent and dependent variable of interest, respectively, i.e., <code>x</code> would correspond to the intervention and <code>y</code> to the L2 French conversational skills in our example. <code>z</code> refers to the post-treatment variable, i.e., the French vocabulary scores in our example. <code>x</code> is a binary variable, <code>y</code> and <code>z</code> are continuous. Since <code>z</code> is a post-treatment variable, it’s possible that it is itself influenced directly or indirectly by <code>x</code>. In the five cases examined below, this is indeed the case.</p>
<p>I’ve included all R code as I think running simulations like the ones below are a useful way to learn research design and statistics. If you’re just interested in the upshot, just ignore the code snippets :)</p>
<section id="case-1-x-affects-both-y-and-z-y-and-z-dont-affect-each-other." class="level2">
<h2 class="anchored" data-anchor-id="case-1-x-affects-both-y-and-z-y-and-z-dont-affect-each-other.">Case 1: <code>x</code> affects both <code>y</code> and <code>z</code>; <code>y</code> and <code>z</code> don’t affect each other.</h2>
<p>In the first case, <code>x</code> affects both <code>y</code> and <code>z</code>, but <code>z</code> and <code>y</code> don’t influence each other.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="144"></p>
<figcaption class="figure-caption"><strong>Figure 1.1.</strong> The causal links between <code>x</code>, <code>y</code> and <code>z</code> in Case 1.</figcaption>
</figure>
</div>
</div>
</div>
<p>In this case, controlling for <code>z</code> doesn’t bias the estimate for the causal influence of <code>x</code> on <code>y</code>. It does, however, reduce the precision of these estimates. To appreciate this, let’s simulate some data. The function <code>case1()</code> defined in the next code snippet generates a dataset corersponding to Case 1. The parameter <code>beta_xy</code> specifies the coefficient of the influence of <code>x</code> on <code>y</code>; the goal of the analysis is to estimate the value of this parameter from the data. The parameter <code>beta_xz</code> similarly specifies the coefficient of the influence of <code>x</code> on <code>z</code>. Estimating the latter coefficient isn’t a goal of the analysis, since <code>z</code> is merely a control variable.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">case1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(n_per_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xz =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>) {</span>
<span id="cb1-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create x (n_per_group 0s and n_per_group 1s)</span></span>
<span id="cb1-3">  x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> n_per_group)</span>
<span id="cb1-4">  </span>
<span id="cb1-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x affects y; 'rnorm' just adds some random noise to the observations.</span></span>
<span id="cb1-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In a DAG, this noise corresponds to the influence of other variables that</span></span>
<span id="cb1-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># didn't need to be plotted.</span></span>
<span id="cb1-8">  y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> beta_xy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)</span>
<span id="cb1-9">  </span>
<span id="cb1-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x affects z</span></span>
<span id="cb1-11">  z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> beta_xz<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)</span>
<span id="cb1-12">  </span>
<span id="cb1-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create data frame</span></span>
<span id="cb1-14">  dfr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(x), y, z)</span>
<span id="cb1-15">  </span>
<span id="cb1-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add info: z above or below median?</span></span>
<span id="cb1-17">  dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z_split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"above"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"below"</span>))</span>
<span id="cb1-18">  </span>
<span id="cb1-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return data frame</span></span>
<span id="cb1-20">  dfr</span>
<span id="cb1-21">}</span></code></pre></div>
</div>
<p>Use this function to create a dataset with 100 participants per group:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">df_case1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case1</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Type 'df_case1' to inspect.</span></span></code></pre></div>
</div>
<p>A graphical analysis that doesn’t take the control variable <code>z</code> into account reveals a roughly one-point difference between the two conditions, which is as it should be.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_case1,</span>
<span id="cb3-3">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 1.2.</strong> Graphical analysis without the covariate for Case 1.</figcaption>
</figure>
</div>
</div>
</div>
<p>A linear model is able to retrieve the <code>beta_xy</code> coefficient, which was set at 1, well enough (<img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta_%7Bxy%7D%7D%20=%201.03%20%5Cpm%200.13">).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, df_case1))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficient</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)  -0.0333     0.0932  -0.357 7.21e-01
x1            1.0432     0.1319   7.911 1.77e-13</code></pre>
</div>
</div>
<p>Alternatively, we could analyse these data while taking the control variable into account. The graphical analysis in Figure 3 achieves this by splitting up the control variable at its median and plotting the two subset separately. This is statistically suboptimal, but it makes the visualisation easier to grok. Here we also find a roughly one-point difference between the two conditions in each panel, which suggests that controlling for <code>z</code> won’t induce any bias.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_case1,</span>
<span id="cb6-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> z_split)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 1.3.</strong> Graphical analysis with the covariate (median split) for Case 1.</figcaption>
</figure>
</div>
</div>
</div>
<p>The linear model is again able to retrieve the coefficient of interest well enough (<img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta_%7Bxy%7D%7D%20=%201.04%20%5Cpm%200.16">), though with a slightly wider standard error.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, df_case1))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficient</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)  -0.0346     0.0935  -0.371 7.11e-01
x1            1.0866     0.1698   6.398 1.12e-09
z            -0.0254     0.0625  -0.407 6.85e-01</code></pre>
</div>
</div>
<p>Of course, it’s difficult to draw any firm conclusions about the analysis of a single simulated dataset. To see that in this general case, the coefficient of interest is indeed estimated without bias but with decreased precision, let’s generate 5,000 such datasets and analyse them with and without taking the control variable into account. The function <code>sim_case1()</code> defined below runs these analyses; the ggplot call plots the estimates for the <img src="https://latex.codecogs.com/png.latex?%5Cbeta_%7Bxy%7D"> parameter. As the caption to Figure 4 explains, this simulation confirms what we observed above.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Another function. This one takes the function case1(),</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># runs it nruns (here: 1000) times and extracts estimates</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from two analyses per generated dataset.</span></span>
<span id="cb9-4">sim_case1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nruns =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xz =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>) {</span>
<span id="cb9-5">  est_without <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> nruns)</span>
<span id="cb9-6">  est_with <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> nruns)</span>
<span id="cb9-7">  </span>
<span id="cb9-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nruns) {</span>
<span id="cb9-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate data</span></span>
<span id="cb9-10">    d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case1</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> n_per_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> beta_xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xz =</span> beta_xz)</span>
<span id="cb9-11">    </span>
<span id="cb9-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Analyse (in regression model) without covariate and extract estimate</span></span>
<span id="cb9-13">    est_without[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb9-14">    </span>
<span id="cb9-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Analyse with covariate, extract estimate</span></span>
<span id="cb9-16">    est_with[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb9-17">  }</span>
<span id="cb9-18">  </span>
<span id="cb9-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output data frame with results</span></span>
<span id="cb9-20">  results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb9-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simulation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nruns, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb9-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">covariate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"with covariate"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"without covariate"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> nruns),</span>
<span id="cb9-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(est_with, est_without)</span>
<span id="cb9-24">  )</span>
<span id="cb9-25">}</span>
<span id="cb9-26"></span>
<span id="cb9-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run function and plot results</span></span>
<span id="cb9-28">results_sim_case1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_case1</span>()</span>
<span id="cb9-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> results_sim_case1,</span>
<span id="cb9-30">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> covariate)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 1.4.</strong> In Case 1, the distribution of the parameter estimates is centred around the correct value both when the control variable is taken into account and when it isn’t. The distribution is wider when taking the control variable into account, however, i.e., the estimates are less precise when taking the control variable into account than when not taking it into account.</figcaption>
</figure>
</div>
</div>
</div>
<p>The estimate for the <img src="https://latex.codecogs.com/png.latex?%5Cbeta_%7Bxy%7D"> parameter is unbiased in both analyses, but the analysis with the covariate offers <em>less</em> rather than more precision: The standard deviation of the distribution of parameter estimates increases from 0.14 to 0.18:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">results_sim_case1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(covariate) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(estimate),</span>
<span id="cb10-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(estimate))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 3
  covariate         mean_est sd_est
  &lt;chr&gt;                &lt;dbl&gt;  &lt;dbl&gt;
1 with covariate       0.999  0.176
2 without covariate    0.998  0.140</code></pre>
</div>
</div>
</section>
<section id="case-2-x-affects-y-which-in-turn-affects-z." class="level2">
<h2 class="anchored" data-anchor-id="case-2-x-affects-y-which-in-turn-affects-z.">Case 2: <code>x</code> affects <code>y</code>, which in turn affects <code>z</code>.</h2>
<p>In the second case, <code>x</code> affects <code>y</code> directly, and <code>y</code> in turns affects <code>z</code>.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid figure-img" width="144"></p>
<figcaption class="figure-caption"><strong>Figure 2.1.</strong> The causal links between <code>x</code>, <code>y</code> and <code>z</code> in Case 2.</figcaption>
</figure>
</div>
</div>
</div>
<p>This time, controlling for <code>z</code> biases the estimates for the <img src="https://latex.codecogs.com/png.latex?%5Cbeta_%7Bxy%7D"> parameter. To see this, let’s again simulate and analyse some data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">case2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(n_per_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_yz =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>) {</span>
<span id="cb12-2">  x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> n_per_group)</span>
<span id="cb12-3">  y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> beta_xy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)</span>
<span id="cb12-4">  </span>
<span id="cb12-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># y affects z</span></span>
<span id="cb12-6">  z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> beta_yz<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)</span>
<span id="cb12-7">  </span>
<span id="cb12-8">  dfr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(x), y, z)</span>
<span id="cb12-9">  dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z_split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"above"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"below"</span>))</span>
<span id="cb12-10">  </span>
<span id="cb12-11">  dfr</span>
<span id="cb12-12">}</span>
<span id="cb12-13"></span>
<span id="cb12-14">df_case2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>
</div>
<p>When the data are analyses without taking the control variable into account, we obtain the following result:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_case2,</span>
<span id="cb13-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 2.2.</strong> Graphical analysis without the covariate for Case 2.</figcaption>
</figure>
</div>
</div>
</div>
<p>This isn’t quite as close to a one-point difference as in the previous example, but as we’ll see below that’s merely due to the randomness inherent in these simulations. The linear model yields a parameter estimate of <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta_%7Bxy%7D%7D%20=%200.76%20%5Cpm%200.14">.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, df_case2))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficient</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)    0.295      0.095    3.11 2.15e-03
x1             0.684      0.134    5.09 8.33e-07</code></pre>
</div>
</div>
<p>When we take the control variable into account, however, the difference between the two groups defined by <code>x</code> becomes smaller:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_case2,</span>
<span id="cb16-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> z_split)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 2.3.</strong> Graphical analysis with the covariate for Case 2.</figcaption>
</figure>
</div>
</div>
</div>
<p>The linear model now yields a parameter estimate of <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta_%7Bxy%7D%7D%20=%200.18%20%5Cpm%200.08">, which is considerably farther from the actual parameter value of 1.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, df_case2))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficient</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)   0.0653     0.0540    1.21 2.28e-01
x1            0.1638     0.0788    2.08 3.89e-02
z             0.4642     0.0221   21.03 3.05e-52</code></pre>
</div>
</div>
<p>The larger-scale simulation shows that the analysis with the covariate is indeed biased if you want to estimate the causal influence of <code>x</code> on <code>y</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change beta_xz to beta_xy compared to the previous case</span></span>
<span id="cb19-2">sim_case2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nruns =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_yz =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>) {</span>
<span id="cb19-3">  est_without <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> nruns)</span>
<span id="cb19-4">  est_with <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> nruns)</span>
<span id="cb19-5">  </span>
<span id="cb19-6">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nruns) {</span>
<span id="cb19-7">    d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> n_per_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> beta_xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_yz =</span> beta_yz)</span>
<span id="cb19-8">    est_without[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb19-9">    est_with[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb19-10">  }</span>
<span id="cb19-11">  </span>
<span id="cb19-12">  results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb19-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simulation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nruns, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb19-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">covariate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"with covariate"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"without covariate"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> nruns),</span>
<span id="cb19-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(est_with, est_without)</span>
<span id="cb19-16">  )</span>
<span id="cb19-17">}</span>
<span id="cb19-18"></span>
<span id="cb19-19">results_sim_case2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_case2</span>()</span>
<span id="cb19-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> results_sim_case2,</span>
<span id="cb19-21">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> covariate)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 2.4.</strong> In Case 2, the distribution of the parameter estimates is centred around the correct value both when the control variable isn’t taken into account but it is strongly biased when this control variable <em>is</em> taken into account, i.e., the analysis with the covariate yields biased estimates.</figcaption>
</figure>
</div>
</div>
</div>
<p>The fact that the distribution of the parameter estimates is narrower when taking the covariate into account is completely immaterial, since these estimates are estimating the wrong quantity.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">results_sim_case2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(covariate) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(estimate),</span>
<span id="cb20-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(estimate))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 3
  covariate         mean_est sd_est
  &lt;chr&gt;                &lt;dbl&gt;  &lt;dbl&gt;
1 with covariate       0.309 0.0851
2 without covariate    1.00  0.143 </code></pre>
</div>
</div>
</section>
<section id="case-3-x-and-y-both-affect-z.-x-also-affects-y." class="level2">
<h2 class="anchored" data-anchor-id="case-3-x-and-y-both-affect-z.-x-also-affects-y.">Case 3: <code>x</code> and <code>y</code> both affect <code>z</code>. <code>x</code> also affects <code>y</code>.</h2>
<p>Now <code>z</code> is affected by both <code>x</code> and <code>y</code>. <code>x</code> still affects <code>y</code>, though. Taking the covariate into account again yields biased estimates.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-19-1.png" class="img-fluid figure-img" width="144"></p>
<figcaption class="figure-caption"><strong>Figure 3.1.</strong> The causal links between <code>x</code>, <code>y</code> and <code>z</code> in Case 3.</figcaption>
</figure>
</div>
</div>
</div>
<p>Same procedure as last year, James.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">case3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(n_per_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xz =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_yz =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>) {</span>
<span id="cb22-2">  x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> n_per_group)</span>
<span id="cb22-3">  y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> beta_xy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)</span>
<span id="cb22-4">  </span>
<span id="cb22-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x and y affect z</span></span>
<span id="cb22-6">  z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> beta_xz<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta_yz<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)</span>
<span id="cb22-7">  </span>
<span id="cb22-8">  dfr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(x), y, z)</span>
<span id="cb22-9">  dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z_split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"above"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"below"</span>))</span>
<span id="cb22-10"></span>
<span id="cb22-11">  dfr</span>
<span id="cb22-12">}</span>
<span id="cb22-13"></span>
<span id="cb22-14">df_case3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case3</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_case3,</span>
<span id="cb23-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 3.2.</strong> Graphical analysis without the covariate for Case 3.</figcaption>
</figure>
</div>
</div>
</div>
<p>Again, the analysis without the control variable yields a reasonably accurate estimate of the true parameter value of 1 (<img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta_%7Bxy%7D%7D%20=%201.07%20%5Cpm%200.15">).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, df_case3))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficient</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)   -0.101      0.106  -0.953 3.42e-01
x1             1.047      0.150   6.992 4.07e-11</code></pre>
</div>
</div>
<p>When we take the control variable into account, however, the difference between the two groups defined by <code>x</code> becomes smaller:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_case3,</span>
<span id="cb26-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb26-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb26-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb26-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> z_split)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 3.3.</strong> Graphical analysis with the covariate for Case 3.</figcaption>
</figure>
</div>
</div>
</div>
<p>The linear model now yields a parameter estimate of <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta_%7Bxy%7D%7D%20=%20-0.31%20%5Cpm%200.11">, which is considerably farther from the actual parameter value of 1 and even has the wrong sign.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, df_case3))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficient</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)  0.00596     0.0580   0.103 9.18e-01
x1          -0.31746     0.1033  -3.074 2.41e-03
z            0.46047     0.0213  21.629 6.28e-54</code></pre>
</div>
</div>
<p>For the sake of completeness, let’s run this simulation 5,000 times, too.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">sim_case3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nruns =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xz =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_yz =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>) {</span>
<span id="cb29-2">  est_without <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> nruns)</span>
<span id="cb29-3">  est_with <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> nruns)</span>
<span id="cb29-4">  </span>
<span id="cb29-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nruns) {</span>
<span id="cb29-6">    d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case3</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> n_per_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> beta_xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xz =</span> beta_xz, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_yz =</span> beta_yz)</span>
<span id="cb29-7">    est_without[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb29-8">    est_with[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb29-9">  }</span>
<span id="cb29-10"></span>
<span id="cb29-11">  results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb29-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simulation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nruns, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb29-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">covariate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"with covariate"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"without covariate"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> nruns),</span>
<span id="cb29-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(est_with, est_without)</span>
<span id="cb29-15">  )</span>
<span id="cb29-16">}</span>
<span id="cb29-17"></span>
<span id="cb29-18">results_sim_case3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_case3</span>()</span>
<span id="cb29-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> results_sim_case3,</span>
<span id="cb29-20">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> covariate)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-25-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 3.4.</strong> In Case 3, too, the distribution of the parameter estimates is centred around the correct value when the control variable isn’t taken into account but it is strongly biased when this control variable <em>is</em> taken into account, i.e., the analysis with the covariate yields biased estimates.</figcaption>
</figure>
</div>
</div>
</div>
<p>The fact that the distribution of the parameter estimates is narrower when taking the covariate into account is completely immaterial, since these estimates are estimating the wrong quantity.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">results_sim_case3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb30-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(covariate) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb30-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(estimate),</span>
<span id="cb30-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(estimate))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 3
  covariate         mean_est sd_est
  &lt;chr&gt;                &lt;dbl&gt;  &lt;dbl&gt;
1 with covariate      -0.382  0.105
2 without covariate    1.00   0.145</code></pre>
</div>
</div>
</section>
<section id="case-4-x-affects-z-both-x-and-z-influence-y." class="level2">
<h2 class="anchored" data-anchor-id="case-4-x-affects-z-both-x-and-z-influence-y.">Case 4: <code>x</code> affects <code>z</code>; both <code>x</code> and <code>z</code> influence <code>y</code>.</h2>
<p>That is, <code>x</code> influences both <code>y</code> and <code>z</code>, but <code>z</code> also influences <code>y</code>. Let <img src="https://latex.codecogs.com/png.latex?%5Cbeta_%7Bxy%7D"> be the direct effect of <code>x</code> on <code>y</code>, <img src="https://latex.codecogs.com/png.latex?%5Cbeta_%7Bxz%7D"> the effect of <code>x</code> on <code>z</code> and <img src="https://latex.codecogs.com/png.latex?%5Cbeta_%7Bzy%7D"> the effect of <code>z</code> on <code>y</code>. Then the <em>total</em> effect of <code>x</code> on <code>y</code> is <img src="https://latex.codecogs.com/png.latex?%5Cbeta_%7Bxy%7D%20+%20%5Cbeta_%7Bxz%7D%5Ctimes%5Cbeta_%7Bzy%7D">.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-27-1.png" class="img-fluid figure-img" width="144"></p>
<figcaption class="figure-caption"><strong>Figure 4.1.</strong> The causal links between <code>x</code>, <code>y</code> and <code>z</code> in Case 4.</figcaption>
</figure>
</div>
</div>
</div>
<p>Using the defaults in the following function, the total effect of <code>x</code> on <code>y</code> is <img src="https://latex.codecogs.com/png.latex?1%20+%201.5%5Ctimes%200.5%20=%201.75">. If this doesn’t make immediate sense, consider what a change of one unit in <code>x</code> causes downstream: A one-unit increase in <code>x</code> directly increases <code>y</code> by 1. It also increases <code>z</code> by 1.5. But a one-unit increase <em>in <code>z</code></em> causes an increase of 0.5 in <code>y</code> as well, so a 1.5-unit increase in <code>z</code> causes an additional increase of 0.75 in <code>y</code>. So in total, a one-unit increase in <code>x</code> causes a 1.75-point increase in <code>y</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1">case4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(n_per_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xz =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_zy =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) {</span>
<span id="cb32-2">  x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> n_per_group)</span>
<span id="cb32-3">  </span>
<span id="cb32-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x affects z</span></span>
<span id="cb32-5">  z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> beta_xz<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)</span>
<span id="cb32-6">  </span>
<span id="cb32-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x and z affect y</span></span>
<span id="cb32-8">  y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> beta_xy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta_zy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)</span>
<span id="cb32-9">  </span>
<span id="cb32-10">  dfr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(x), y, z)</span>
<span id="cb32-11">  </span>
<span id="cb32-12">  dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z_split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"above"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"below"</span>))</span>
<span id="cb32-13">  </span>
<span id="cb32-14">  dfr</span>
<span id="cb32-15">}</span>
<span id="cb32-16"></span>
<span id="cb32-17">df_case4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case4</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_case4,</span>
<span id="cb33-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-29-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 4.2.</strong> Graphical analysis without the covariate for Case 4.</figcaption>
</figure>
</div>
</div>
</div>
<p>Again, the analysis without the control variable yields a reasonably accurate estimate of the true <em>total</em> influence of <code>x</code> on <code>y</code> of 1.75 (!) (<img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta_%7Bxy%7D%7D%20=%201.67%20%5Cpm%200.16">).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, df_case4))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficient</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)     0.19      0.114    1.66 9.79e-02
x1              1.49      0.161    9.21 4.69e-17</code></pre>
</div>
</div>
<p>When we take the control variable into account, however, the difference between the two groups defined by <code>x</code> becomes smaller:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_case4,</span>
<span id="cb36-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb36-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb36-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb36-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> z_split)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-31-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 4.3.</strong> Graphical analysis with the covariate for Case 4.</figcaption>
</figure>
</div>
</div>
</div>
<p>The linear model now yields a parameter estimate of <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta_%7Bxy%7D%7D%20=%201.11%20%5Cpm%200.17">. This analysis correctly estimates the <em>direct</em> effect of <code>x</code> on <code>y</code> (i.e., without the additional causal link between <code>x</code> on <code>y</code> through <code>z</code>). This may be interesting in its own right, but the analysis addresses a question different from `<code>What's the causal influence of</code>x<code>on</code>y`?’’</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, df_case4))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficient</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)   0.0464     0.1077   0.431 6.67e-01
x1            0.9863     0.1702   5.797 2.65e-08
z             0.4694     0.0777   6.041 7.52e-09</code></pre>
</div>
</div>
<p>For the sake of completeness, let’s run this simulation 5,000 times, too.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1">sim_case4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nruns =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xz =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_zy =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) {</span>
<span id="cb39-2">  est_without <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> nruns)</span>
<span id="cb39-3">  est_with <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> nruns)</span>
<span id="cb39-4">  </span>
<span id="cb39-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nruns) {</span>
<span id="cb39-6">    d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case4</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> n_per_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> beta_xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xz =</span> beta_xz, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_zy =</span> beta_zy)</span>
<span id="cb39-7">    est_without[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb39-8">    est_with[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb39-9">  }</span>
<span id="cb39-10">  </span>
<span id="cb39-11">  results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb39-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simulation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nruns, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb39-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">covariate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"with covariate"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"without covariate"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> nruns),</span>
<span id="cb39-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(est_with, est_without)</span>
<span id="cb39-15">  )</span>
<span id="cb39-16">}</span>
<span id="cb39-17"></span>
<span id="cb39-18">results_sim_case4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_case4</span>()</span>
<span id="cb39-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> results_sim_case4,</span>
<span id="cb39-20">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.75</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> covariate)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-33-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 4.4.</strong> In Case 4, the analysis without the covariate correctly estimates the <em>total</em> causal influence that <code>x</code> has on <code>y</code>, while the analysis with the covariate correctly estimates the <em>direct</em> causal effect of <code>x</code> on <code>y</code>. Either may be relevant, but you have to know which!</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1">results_sim_case4 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb40-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(covariate) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb40-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(estimate),</span>
<span id="cb40-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(estimate))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 3
  covariate         mean_est sd_est
  &lt;chr&gt;                &lt;dbl&gt;  &lt;dbl&gt;
1 with covariate       0.998  0.177
2 without covariate    1.75   0.157</code></pre>
</div>
</div>
</section>
<section id="case-5-x-and-z-affect-y-x-and-z-dont-affect-each-other." class="level2">
<h2 class="anchored" data-anchor-id="case-5-x-and-z-affect-y-x-and-z-dont-affect-each-other.">Case 5: <code>x</code> and <code>z</code> affect <code>y</code>; <code>x</code> and <code>z</code> don’t affect each other.</h2>
<p>In the final general case, <code>x</code> and <code>z</code> both affect <code>y</code>, but <code>x</code> and <code>z</code> don’t affect each other. That is, <code>z</code> isn’t affected by the intervention in any way and so functions like a pre-treatment control variable would. The result is an increase in statistical precision. This is the only of the five cases examined in which the control variable has added value for the purposes of estimated the causal influence of <code>x</code> on <code>y</code>.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-35-1.png" class="img-fluid figure-img" width="144"></p>
<figcaption class="figure-caption"><strong>Figure 5.1.</strong> The causal links between <code>x</code>, <code>y</code> and <code>z</code> in Case 5.</figcaption>
</figure>
</div>
</div>
</div>
<p>Using the defaults in the following function, the total effect of <code>x</code> on <code>y</code> is <img src="https://latex.codecogs.com/png.latex?1%20+%201.5%5Ctimes%200.5%20=%201.75">. If this doesn’t make immediate sense, consider what a change of one unit in <code>x</code> causes downstream: A one-unit increase in <code>x</code> directly increases <code>y</code> by 1. It also increases <code>z</code> by 1.5. But a one-unit increase <em>in <code>z</code></em> causes an increase of 0.5 in <code>y</code> as well, so a 1.5-unit increase in <code>z</code> causes an additional increase of 0.75 in <code>y</code>. So in total, a one-unit increase in <code>x</code> causes a 1.75-point increase in <code>y</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1">case5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(n_per_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_zy =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>) {</span>
<span id="cb42-2">  x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> n_per_group)</span>
<span id="cb42-3">  </span>
<span id="cb42-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create z</span></span>
<span id="cb42-5">  z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)</span>
<span id="cb42-6">  </span>
<span id="cb42-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x and z affect y</span></span>
<span id="cb42-8">  y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> beta_xy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> beta_zy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_per_group)</span>
<span id="cb42-9">  </span>
<span id="cb42-10">  dfr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(x), y, z)</span>
<span id="cb42-11">  dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z_split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(dfr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>z), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"above"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"below"</span>))</span>
<span id="cb42-12">  </span>
<span id="cb42-13">  dfr</span>
<span id="cb42-14">}</span>
<span id="cb42-15"></span>
<span id="cb42-16">df_case5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case5</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_case5,</span>
<span id="cb43-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb43-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb43-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-37-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 5.2.</strong> Graphical analysis without the covariate for Case 5.</figcaption>
</figure>
</div>
</div>
</div>
<p>Again, the analysis without the control variable yields an estimate within one standard error of the true parameter value of 1 (<img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta_%7Bxy%7D%7D%20=%200.76%20%5Cpm%200.24">).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, df_case5))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficient</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)   0.0201      0.172   0.117   0.9068
x1            0.6818      0.243   2.807   0.0055</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_case5,</span>
<span id="cb46-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb46-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb46-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb46-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> z_split)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-39-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 5.3.</strong> Graphical analysis with the covariate for Case 5.</figcaption>
</figure>
</div>
</div>
</div>
<p>The linear model now yields a parameter estimate of <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta_%7Bxy%7D%7D%20=%201.08%20%5Cpm%200.15">, with is also a reasonable estimate but with a smaller standard error.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb47-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, df_case5))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficient</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept) -0.00183     0.1022 -0.0179 9.86e-01
x1           1.05971     0.1459  7.2626 8.62e-12
z            1.44502     0.0759 19.0298 1.67e-46</code></pre>
</div>
</div>
<p>For the sake of completeness, let’s run this simulation 5,000 times, too.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb49-1">sim_case5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nruns =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_zy =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>) {</span>
<span id="cb49-2">  est_without <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> nruns)</span>
<span id="cb49-3">  est_with <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> nruns)</span>
<span id="cb49-4">  </span>
<span id="cb49-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nruns) {</span>
<span id="cb49-6">    d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case5</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_group =</span> n_per_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_xy =</span> beta_xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">beta_zy =</span> beta_zy)</span>
<span id="cb49-7">    est_without[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb49-8">    est_with[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> z, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d))[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb49-9">  }</span>
<span id="cb49-10"></span>
<span id="cb49-11">  results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb49-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simulation =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>nruns, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb49-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">covariate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"with covariate"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"without covariate"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> nruns),</span>
<span id="cb49-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(est_with, est_without)</span>
<span id="cb49-15">  )</span>
<span id="cb49-16">}</span>
<span id="cb49-17"></span>
<span id="cb49-18">results_sim_case5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_case5</span>()</span>
<span id="cb49-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> results_sim_case5,</span>
<span id="cb49-20">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb49-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb49-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb49-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> covariate)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2021-06-29-posttreatment/index_files/figure-html/unnamed-chunk-41-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 5.4.</strong> In Case 5, both analyses are centred around the correct value, i.e., both are unbiased. The analysis with the control variable yields a narrower distribution of estimates, however, i.e., it is more precise.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb50-1">results_sim_case5 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb50-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(covariate) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb50-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(estimate),</span>
<span id="cb50-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(estimate))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 3
  covariate         mean_est sd_est
  &lt;chr&gt;                &lt;dbl&gt;  &lt;dbl&gt;
1 with covariate       1.00   0.139
2 without covariate    0.995  0.249</code></pre>
</div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>When a control variable is collected <em>after</em> the intervention took place, it is possible that it is directly or indirectly affected by the intervention. If this is indeed the case, including the control variable in the analysis may yield biased estimates or decrease rather than increase the precision of the estimates. In designed experiments, the solution to this problem is evident: collect the control variable before the intervention takes place. If this isn’t possible, you had better be pretty sure that the control variable isn’t a post-treatment variable. More generally, throwing predictor variables into a statistical model in the hopes that this will improve the analysis is a dreadful idea.</p>
<!-- ## Reference -->
<!-- Zimmerman, Donald W. 1998. [Invalidation of parametric and nonparametric statistical tests by concurrent violation of two assumptions](https://doi.org/10.1080/00220979809598344). _Journal of Experimental Education_ 67(1). 55-68. -->
</section>
<section id="software-versions" class="level2">
<h2 class="anchored" data-anchor-id="software-versions">Software versions</h2>
<p>Please note that I reran the code on this page on August 6, 2023.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb52-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.3 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-27
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package        * version date (UTC) lib source
 abind            1.4-5   2016-07-21 [1] CRAN (R 4.3.1)
 backports        1.4.1   2021-12-13 [1] CRAN (R 4.3.0)
 boot             1.3-28  2021-05-03 [4] CRAN (R 4.2.0)
 cachem           1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr            3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 checkmate        2.2.0   2023-04-27 [1] CRAN (R 4.3.1)
 cli              3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 cmdstanr       * 0.6.0   2023-08-02 [1] local
 coda             0.19-4  2020-09-30 [1] CRAN (R 4.3.1)
 codetools        0.2-19  2023-02-01 [4] CRAN (R 4.2.2)
 colorspace       2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 crayon           1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 curl             5.0.1   2023-06-07 [1] CRAN (R 4.3.1)
 dagitty        * 0.3-1   2021-01-21 [1] CRAN (R 4.3.1)
 devtools         2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest           0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 distributional   0.3.2   2023-03-22 [1] CRAN (R 4.3.1)
 dplyr          * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 ellipsis         0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate         0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi            1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 farver           2.1.1   2022-07-06 [1] CRAN (R 4.3.0)
 fastmap          1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 forcats        * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)
 fs               1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics         0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2        * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue             1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gridExtra        2.3     2017-09-09 [1] CRAN (R 4.3.0)
 gtable           0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 hms              1.1.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools        0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets      1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv           1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 inline           0.3.19  2021-05-31 [1] CRAN (R 4.3.1)
 jsonlite         1.8.7   2023-06-29 [1] CRAN (R 4.3.1)
 knitr            1.39    2022-04-26 [2] CRAN (R 4.2.0)
 labeling         0.4.2   2020-10-20 [1] CRAN (R 4.3.0)
 later            1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lattice          0.21-8  2023-04-05 [4] CRAN (R 4.3.0)
 lifecycle        1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 loo              2.6.0   2023-03-31 [1] CRAN (R 4.3.1)
 lubridate      * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)
 magrittr         2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 MASS             7.3-60  2023-05-04 [4] CRAN (R 4.3.1)
 matrixStats      1.0.0   2023-06-02 [1] CRAN (R 4.3.1)
 memoise          2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mime             0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI           0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 munsell          0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 mvtnorm          1.2-2   2023-06-08 [1] CRAN (R 4.3.1)
 pillar           1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild         1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig        2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload          1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 posterior        1.4.1   2023-03-14 [1] CRAN (R 4.3.1)
 prettyunits      1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx         3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis          0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises         1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps               1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr          * 1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6               2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 Rcpp             1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 RcppParallel     5.1.7   2023-02-27 [1] CRAN (R 4.3.1)
 readr          * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)
 remotes          2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 rethinking     * 2.31    2023-08-02 [1] Github (rmcelreath/rethinking@2f01a9c)
 rlang            1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown        2.21    2023-03-26 [1] CRAN (R 4.3.0)
 rstan          * 2.26.22 2023-08-01 [1] local
 rstudioapi       0.14    2022-08-22 [1] CRAN (R 4.3.0)
 scales           1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo      1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shape            1.4.6   2021-05-19 [1] CRAN (R 4.3.1)
 shiny            1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 StanHeaders    * 2.26.27 2023-06-14 [1] CRAN (R 4.3.1)
 stringi          1.7.12  2023-01-11 [1] CRAN (R 4.3.1)
 stringr        * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 tensorA          0.36.2  2020-11-19 [1] CRAN (R 4.3.1)
 tibble         * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyr          * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)
 tidyselect       1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 tidyverse      * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)
 timechange       0.2.0   2023-01-11 [1] CRAN (R 4.3.0)
 tzdb             0.4.0   2023-05-12 [1] CRAN (R 4.3.0)
 urlchecker       1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis          2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8             1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 V8               4.3.0   2023-04-08 [1] CRAN (R 4.3.0)
 vctrs            0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 withr            2.5.0   2022-03-03 [2] CRAN (R 4.2.0)
 xfun             0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xtable           1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 yaml             2.3.5   2022-02-21 [2] CRAN (R 4.2.0)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>multiple regression</category>
  <guid>https://janhove.github.io/posts/2021-06-29-posttreatment/index.html</guid>
  <pubDate>Mon, 28 Jun 2021 22:00:00 GMT</pubDate>
  <media:content url="https://janhove.github.io/posts/2021-06-29-posttreatment/image.png" medium="image" type="image/png" height="115" width="144"/>
</item>
<item>
  <title>Capitalising on covariates in cluster-randomised experiments</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2020-09-02-cluster-covar-sim/index.html</link>
  <description><![CDATA[ 



<p>In cluster-randomised experiments, participants are assigned to the conditions randomly but not on an individual basis. Instead, entire batches (‘clusters’) of participants are assigned in such a way that each participant in the same cluster is assigned to the same condition. A typical example would be an educational experiment in which all pupils in the same class get assigned to the same experimental condition. Crucially, the analysis should take into account the fact that the random assignment took place at the cluster level rather than at the individual level.</p>
<p>Also typically in educational experiments, researchers have some information about the participants’ performance before the intervention took place. This information can come in the form of a covariate, for instance the participants’ performance on a pretest or some self-assessment of their skills. Even in experiments that use random assignment, including such covariates in the analysis is useful as they help to reduce the error variance. Lots of different methods for including covariates in the analysis of cluster-randomised experiments are discussed in the literature, but I couldn’t find any discussion about the merits and drawbacks of these different methods.</p>
<p>In order to provide such discussion, I ran a series of simulations to compare 25 (!) different ways of including a covariate in the analysis of a cluster-randomised experiment in terms of their Type-I error and their power. The <strong>article</strong> outlining these simulations and the findings is available from <a href="https://doi.org/10.31234/osf.io/ef4zc">PsyArXiv</a>; the <strong>R code</strong> used for the simulations as well as its output is available from the <a href="https://osf.io/wzjra/">Open Science Framework</a>. In the remainder of this post, I’ll discuss how these simulations may be useful to you if you’re planning to run a cluster-randomised experiment.</p>
<section id="so-whats-the-upshot" class="level2">
<h2 class="anchored" data-anchor-id="so-whats-the-upshot">So what’s the upshot?</h2>
<p>Please read pages 1–3 and pages 40–42 of the <a href="https://doi.org/10.31234/osf.io/ef4zc">article</a> :)</p>
</section>
<section id="i-know-of-some-analytical-method-that-you-didnt-consider." class="level2">
<h2 class="anchored" data-anchor-id="i-know-of-some-analytical-method-that-you-didnt-consider.">I know of some analytical method that you didn’t consider.</h2>
<p>Ah, interesting! It took a long time to run these simulations (about 36 hours), during which I couldn’t use my computer for anything else, so I’m not exactly gung-ho about rerunning them just to include one additional analytic method.</p>
<p>But here’s what you can do. Go to the <a href="https://osf.io/wzjra/">OSF page</a> and download the files <code>functions/generate_clustered_data.R</code> and <code>scripts/additional_simulations.Rmd</code>. The latter file contains some smaller-scale simulations that don’t take as long to run. Adapt the simulations there and check if the analytical method you know of has an acceptable Type-I error rate for a variety of parameter settings. (Two examples are available, but if you can’t make sense of them, let me know.) If its Type-I error rate is acceptable, run another batch of simulations to assess its power and compare it to the power for the best-performing methods in my simulation.</p>
<p>If your method compares well to these best-performing methods in terms of both its Type-I error rate and its power, drop me a line, and perhaps I’ll get round to rerunning the large-scale simulations. Better still, download the other functions and scripts, include your method in <code>functions/analyse_clustered_data.R</code>, and adjust the other files accordingly. Then run the simulation yourself :)</p>
</section>
<section id="i-dont-think-your-parameter-choices-are-relevant-for-my-study." class="level2">
<h2 class="anchored" data-anchor-id="i-dont-think-your-parameter-choices-are-relevant-for-my-study.">I don’t think your parameter choices are relevant for my study.</h2>
<p>Perhaps your study will feature clusters that vary more strongly in size than was the case in my simulations. Or perhaps you suspect that the intracluster correlation will be quite different from the ones that I considered. Or perhaps etc., etc., etc. It’d be better if the results of the simulations were more directly relevant to what you suspect your study will look like.</p>
<p>But here’s the beauty. You can go to the <a href="https://osf.io/wzjra/">OSF page</a>, download all the functions and scripts, and tailor the simulation parameters to your liking. In <code>script/simulation_type_I_error.R</code> and <code>script/simulation_power.R</code>, you can change the cluster sizes, the number of clusters, the strength of the covariate, the ICC, the effect, and the randomisation scheme. Then run these scripts and figure out which analysis method will likely retain its nominal Type-I error while maximising power.</p>
</section>
<section id="when-generating-the-data-youre-making-some-assumptions-im-not-willing-to-make." class="level2">
<h2 class="anchored" data-anchor-id="when-generating-the-data-youre-making-some-assumptions-im-not-willing-to-make.">When generating the data, you’re making some assumptions I’m not willing to make.</h2>
<p>The assumptions are outlined in the article on pp.&nbsp;23–24, and they are made more explicit in the function that generates the data (<code>functions/generate_clustered_data.R</code>). Perhaps they’re unrealistic. For instance, the data are all drawn from normal distributions, the covariate is linearly related to the outcome, etc. If you want to revise these assumptions, you’ll have to edit this function. (Test the function extensively afterwards!) Then re-run the simulations, with the simulation parameters tailored to your study.</p>
</section>
<section id="which-journal-will-this-article-be-published-in" class="level2">
<h2 class="anchored" data-anchor-id="which-journal-will-this-article-be-published-in">Which journal will this article be published in?</h2>
<p>At the moment, I don’t intend to submit this article to any journal. The main reason is that anyone who may be interested in it already has free access to it. If anyone has any feedback, I’d be happy to hear it, but I don’t currently feel like jumping through a series of hoops in some drawn-out reviewing process.</p>


</section>

 ]]></description>
  <category>R</category>
  <category>power</category>
  <category>significance</category>
  <category>design features</category>
  <category>cluster-randomised experiments</category>
  <category>preprint</category>
  <guid>https://janhove.github.io/posts/2020-09-02-cluster-covar-sim/index.html</guid>
  <pubDate>Tue, 01 Sep 2020 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Tutorial: Visualising statistical uncertainty using model-based graphs</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2020-06-29-visualise-uncertainty/index.html</link>
  <description><![CDATA[ 



<p>I wrote a tutorial about visualising the statistical uncertainty in statistical models for a conference that took place a couple of months ago, and I’ve just realised that I’ve never advertised this tutorial in this blog. You can find the tutorial here: <a href="https://janhove.github.io/visualise_uncertainty">Visualising statistical uncertainty using model-based graphs</a>.</p>
<p>Contents:</p>
<ol type="1">
<li>Why plot models, and why visualise uncertainty?</li>
<li>The principle: An example with simple linear regression
<ul>
<li>Step 1: Fit the model</li>
<li>Step 2: Compute the conditional means and confidence intervals</li>
<li>Step 3: Plot!</li>
</ul></li>
<li>Predictions about individual cases vs.&nbsp;conditional means</li>
<li>More examples
<ul>
<li>Several continuous predictors</li>
<li>Dealing with categorical predictors</li>
<li>t-tests are models, too</li>
<li>Dealing with interactions</li>
<li>Ordinary logistic regression</li>
<li>Mixed-effects models</li>
<li>Logistic mixed effects models</li>
</ul></li>
<li>Caveats
<ul>
<li>Other things may not be equal</li>
<li>Your model may be misspecified</li>
<li>Other models may yield different pictures</li>
</ul></li>
</ol>



 ]]></description>
  <category>R</category>
  <category>graphs</category>
  <category>logistic regression</category>
  <category>mixed-effects models</category>
  <category>multiple regression</category>
  <category>Bayesian statistics</category>
  <category>brms</category>
  <guid>https://janhove.github.io/posts/2020-06-29-visualise-uncertainty/index.html</guid>
  <pubDate>Sun, 28 Jun 2020 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Tutorial: Obtaining directly interpretable regression coefficients by recoding categorical predictors</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2020-05-05-contrast-coding/index.html</link>
  <description><![CDATA[ 



<p>The output of regression models is often difficult to parse, especially when categorical predictors and interactions between them are being modelled. The goal of this tutorial is to show you how you can obtain estimated coefficients that you can interpret directly in terms of your research question. I’ve learnt about this technique thanks to Schad et al.&nbsp;(2020), and I refer to them for a more detailed discussion. What I will do is go through three examples of increasing complexity that should enable you to apply the technique in your own analyses.</p>
<!--more-->
<section id="example-1-no-interactions-no-random-effects" class="level2">
<h2 class="anchored" data-anchor-id="example-1-no-interactions-no-random-effects">Example 1: No interactions, no random effects</h2>
<p>Let’s start off nice but not too easy by analysing an experiment with three conditions and only one observation per participant.</p>
<p>This dataset we’ll work with comes from a study by Vanhove (2019) and is available <a href="http://homeweb.unifr.ch/VanhoveJ/Pub/Data/Vanhove2018.csv">here</a>. The details hardly matter, but there were three experimental conditions: <code>information</code>, <code>no information</code> and <code>strategy</code>. The <code>no information</code> condition serves as the baseline control condition, and the <code>information</code> and <code>strategy</code> conditions serve as the treatment conditions. The expectation was that the treatment conditions would outperform the control condition on the outcome variable (here: <code>ProportionCongruent</code>), and I was also interested in seeing if the <code>strategy</code> condition outperformed the <code>information</code> condition.</p>
<p>The condition means already show that the participants in the <code>information</code> condition did not in fact outperform those in the <code>no information</code> condition, but neither that nor the small sample size should keep us from using these data for our example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://homeweb.unifr.ch/VanhoveJ/Pub/Data/Vanhove2018.csv"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Condition)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
   information no information       strategy 
            15             14             16 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tapply</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ProportionCongruent, d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Condition, mean)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   information no information       strategy 
         0.517          0.554          0.627 </code></pre>
</div>
</div>
<p>If we fit the model directly, R will apply the default coding scheme to the categorical predictor (viz., treatment coding):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The newest version of R doesn't recode strings as factors automatically,</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># so code Condition as a factor for good measure.</span></span>
<span id="cb5-3">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Condition <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Condition)</span>
<span id="cb5-4">m_default <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(ProportionCongruent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Condition, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m_default)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                        Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)               0.5172     0.0512  10.101 8.31e-13
Conditionno information   0.0369     0.0737   0.501 6.19e-01
Conditionstrategy         0.1099     0.0713   1.542 1.31e-01</code></pre>
</div>
</div>
<p>By default, the <code>information</code> condition is chosen as the reference level because it’s first in the alphabet. That is, the 0.52 is the estimated mean for the <code>information</code> condition. The second estimate (0.04) is the difference between the mean for the <code>no information</code> condition and that of the reference level (<code>information</code>). Similarly, the third estimate (0.11) is the difference between the mean for the <code>strategy</code> condition and that of the reference level (<code>information</code>). These estimates are all correct, and they’re fairly easy to interpret once you’ve figured out what the reference level is. But if we want to, we can obtain estimated coefficients that map more directly onto the research questions by recoding the <code>Condition</code> variable manually.</p>
<p><code>Condition</code> has three levels, and this means that we can obtain at most three estimated coefficients for it. It’s also possible to obtain fewer than the maximum, but this is not something I will go into here.</p>
<p>The first step is to <strong>write out what you want the model’s intercept to represent</strong> as a null hypothesis. In this example, it makes sense that the intercept should the mean performance in the <code>no information</code> condition. Written as a null hypothesis, this becomes <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7B%5Ctextrm%7Bno%20info%7D%7D%20=%200">. This null hypothesis is a bit silly, but that’s not important here, just go with it; the equation is easy enough. Then, <strong>rearrange the equation such that the right-hand side reads 0.</strong> This is already the case here. Finally, <strong>add the factor’s remaining levels to the left-hand side of the equation, but multiplied by 0</strong>. You’re just adding 0s to the left-hand side of the equation, which doesn’t affect it. For clarity, I’ve made it clear that <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7B%5Ctextrm%7Bno%20info%7D%7D%20=%201%5Cmu_%7B%5Ctextrm%7Bno%20info%7D%7D">. The result looks like this:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_%7B%5Ctextrm%7Bno%20info%7D%7D%20=%200%20%5C%5C%20%5CLeftrightarrow%200%5Cmu_%7B%5Ctextrm%7Binfo%7D%7D%20+%201%5Cmu_%7B%5Ctextrm%7Bno%20info%7D%7D%20+%200%5Cmu_%7B%5Ctextrm%7Bstrategy%7D%7D%20=%200%0A"></p>
<p>Make sure that in the rearranged equation, the levels appear <em>in the same order</em> as they do in R. You can check the order of the levels using <code>levels()</code>. By default, the order is alphabetical. You can change the order of the factor levels, but then you’ll also need to change the order in which the coefficients appear in the rearranged equation:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Condition)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "information"    "no information" "strategy"      </code></pre>
</div>
</div>
<p>The second step is to <strong>write out null hypotheses for the comparisons that you want the remaining coefficients to estimate</strong>. For the sake of the exercise, let’s say that I want the first remaining coefficient to estimate the difference between the mean of the control group (<img src="https://latex.codecogs.com/png.latex?%5Cmu_%7B%5Ctextrm%7Bno%20info%7D%7D">) and the <em>mean of the means</em> of the two other groups (i.e., <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B2%7D(%5Cmu_%7B%5Ctextrm%7Binfo%7D%7D%20+%20%5Cmu_%7B%5Ctextrm%7Bstrategy%7D%7D)">). First write this as a null hypothesis:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B1%7D%7B2%7D(%5Cmu_%7B%5Ctextrm%7Binfo%7D%7D%20+%20%5Cmu_%7B%5Ctextrm%7Bstrategy%7D%7D)%20=%20%5Cmu_%7B%5Ctextrm%7Bno%20info%7D%7D%0A"></p>
<p>Note that I write the ‘focus’ of the comparison on the left-hand side and what it’s being compared to on the right-hand side. This will make the signs of the coefficients we later get easier to interpret. Then, bring all <img src="https://latex.codecogs.com/png.latex?%5Cmu"> terms to the left-hand side:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B1%7D%7B2%7D(%5Cmu_%7B%5Ctextrm%7Binfo%7D%7D%20+%20%5Cmu_%7B%5Ctextrm%7Bstrategy%7D%7D)%20=%20%5Cmu_%7B%5Ctextrm%7Bno%20info%7D%7D%20%5C%5C%20%5CLeftrightarrow%20%5Cfrac%7B1%7D%7B2%7D%5Cmu_%7B%5Ctextrm%7Binfo%7D%7D%20+%20-1%5Cmu_%7B%5Ctextrm%7Bno%20info%7D%7D%20+%20%5Cfrac%7B1%7D%7B2%7D%5Cmu_%7B%5Ctextrm%7Bstrategy%7D%7D%20=%200%0A"></p>
<p>Do not multiply any terms in the equation, i.e., do <em>not</em> write <img src="https://latex.codecogs.com/png.latex?1%5Cmu_%7B%5Crm%7Binfo%7D%7D%20+%20-2%5Cmu_%7B%5Crm%7Bno%5C%20info%7D%7D%20+%201%5Cmu_%7B%5Crm%7Bstrategy%7D%7D%20=%200"> so that you don’t have to work with fractions. The hypotheses you’ll test will be the same, but the output will be more confusing than if you just rearrange the coefficients but keep the fractions.</p>
<p>For the final coefficient, let’s say that I want to estimate the difference in means between the <code>info</code> and <code>strategy</code> condition. Again, start from the corresponding null hypothesis (i.e., that these means are the same), and then bring all <img src="https://latex.codecogs.com/png.latex?%5Cmu">s to the left-hand side while adding the missing factor levels:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_%7B%5Ctextrm%7Bstrategy%7D%7D%20=%20%5Cmu_%7B%5Ctextrm%7Binfo%7D%7D%20%5C%5C%5CLeftrightarrow%20-1%5Cmu_%7B%5Ctextrm%7Binfo%7D%7D%20+%200%5Cmu_%7B%5Ctextrm%7Bno%20info%7D%7D%20+%201%5Cmu_%7B%5Ctextrm%7Bstrategy%7D%7D%20=%200%0A"></p>
<p>The third step is to put the coefficients of the rearranged equations into a <strong>hypothesis matrix</strong>. As you can see, each line in this matrix contains the coefficients belonging to the <img src="https://latex.codecogs.com/png.latex?%5Cmu"> terms in the three equations above:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">Hm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(</span>
<span id="cb9-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H00 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">info =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">no_info =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strategy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb9-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H01 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">info =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">no_info =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strategy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb9-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H02 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">info =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">no_info =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strategy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-5">)</span></code></pre></div>
</div>
<p>Fourth, convert this hypothesis matrix into a <strong>contrast matrix</strong> using the <code>ginv2()</code> function that Schad et al.&nbsp;(2020) provide:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">ginv2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {</span>
<span id="cb10-2">    MASS<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fractions</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">provideDimnames</span>(MASS<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ginv</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dimnames</span>(x)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span>
<span id="cb10-3">}</span>
<span id="cb10-4"></span>
<span id="cb10-5">Cm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ginv2</span>(Hm)</span></code></pre></div>
</div>
<p>Fifth, apply this contrast matrix, minus the first column (hence <code>-1</code>), as the coding scheme for <code>Condition</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Condition) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Cm[, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
<p>And finally, fit the model:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">m_manual <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(ProportionCongruent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Condition, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m_manual)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>             Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)     0.554     0.0530  10.455 2.92e-13
ConditionH01    0.018     0.0639   0.282 7.79e-01
ConditionH02    0.110     0.0713   1.542 1.31e-01</code></pre>
</div>
</div>
<p>You can check this yourselves, but the intercept now shows the mean of the <code>no information</code> condition, the first term (<code>ConditionH01</code>) estimates the difference between the <code>no information</code> mean and the mean of the means of the other two condidition, and the second term (<code>ConditionH02</code>) estimates the difference between the <code>strategy</code> mean and the <code>information</code> mean.</p>
</section>
<section id="example-2-no-interactions-but-random-effects" class="level2">
<h2 class="anchored" data-anchor-id="example-2-no-interactions-but-random-effects">Example 2: No interactions, but random effects</h2>
<p>For the second and third example, I’ll use data from Pestana et al.&nbsp;(2018), who measured the Portuguese reading skills of Portuguese children in Portugal, French-speaking Switzerland, and German-speaking Switzerland at three points in time. The data are available as part of the <a href="https://github.com/janhove/helascot"><code>helascot</code> package</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(helascot)</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb14-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lme4)</span>
<span id="cb14-4"></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine data and only retain Portuguese test data</span></span>
<span id="cb14-6">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> skills <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(background, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Subject"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(LanguageTested <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Portuguese"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Reading))</span>
<span id="cb14-10"></span>
<span id="cb14-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Code Time and LanguageGroup as factors</span></span>
<span id="cb14-12">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time)</span>
<span id="cb14-13">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>LanguageGroup <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>LanguageGroup)</span>
<span id="cb14-14"></span>
<span id="cb14-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw graph</span></span>
<span id="cb14-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d,</span>
<span id="cb14-17">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Time, </span>
<span id="cb14-18">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Reading,</span>
<span id="cb14-19">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> LanguageGroup)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2020-05-05-contrast-coding/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>There are up to three observations per child (Time 1, 2 and 3), and the children are clustered in classes. We will take this into account during the analysis using random effects by child and by class.</p>
<p>For the sake of this example, let’s say we’re interested in estimating the development of reading skills through time. The following model estimates the effect of <code>Time</code> and allows for this effect to vary between classes. Since there is only one data point per <code>Subject</code> per <code>Time</code>, no by-subject random slope for <code>Time</code> was estimated.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">m_default <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reading <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>Time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m_default)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value
(Intercept)    0.532     0.0239   22.25
Time2          0.104     0.0111    9.38
Time3          0.194     0.0161   12.08</code></pre>
</div>
</div>
<p>When using R’s default coding, the <code>(Intercept)</code> represents the average reading skill score at Time 1, the next coefficient estimates the different in reading skill scores between Time 2 and Time 1, and the third coefficient estimates the difference between Time 3 and Time 1. This is fine, but let’s say we wanted to estimate the difference between Time 3 and Time 2 directly. We can obtain this estimate by coding the predictors ourselves.</p>
<p>In the equations below, the <img src="https://latex.codecogs.com/png.latex?%5Cmu">’s are in the same order as R knows them:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "1" "2" "3"</code></pre>
</div>
</div>
<p>The average performance at Time 1 is a reasonable choice for the intercept, so let’s stick with that. The silly null hypothesis is that <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7BT1%7D%20=%200">, which we can elaborate with <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7BT2%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7BT3%7D"> as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_%7BT1%7D%20=%200%20%5C%5C%20%5CLeftrightarrow%201%5Cmu_%7BT1%7D%20+%200%5Cmu_%7BT2%7D%20+%200%5Cmu_%7BT3%7D%20=%200%0A"></p>
<p>If we want the next coefficient to estimate the difference between the average reading skill scores at Time 2 and Time 1, we need the null hypothesis that these average reading skill scores are the same, i.e., <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7BT2%7D%20=%20%5Cmu_%7BT1%7D">. (Remember to put the ‘focus’ of the comparison on the left.) From there:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_%7BT2%7D%20=%20%5Cmu_%7BT1%7D%20%5C%5C%20%5CLeftrightarrow%20-1%5Cmu_%7BT1%7D%20+%201%5Cmu_%7BT2%7D%20+%200%5Cmu_%7BT3%7D%20=%200%0A"></p>
<p>Similarly, if we want the third coefficient to estimate the difference between the average reading skill scores at Time 3 and Time 2, we need the null hypothesis that these average reading skill scores are the same, i.e., <img src="https://latex.codecogs.com/png.latex?%5Cmu_%7BT3%7D%20=%20%5Cmu_%7BT2%7D">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_%7BT3%7D%20=%20%5Cmu_%7BT2%7D%20%5C%5C%20%5CLeftrightarrow%200%5Cmu_%7BT1%7D%20+%20-1%5Cmu_%7BT2%7D%20+%201%5Cmu_%7BT3%7D%20=%200%0A"></p>
<p>Put the coefficients in the hypothesis matrix, convert this hypothesis matrix to a contrast matrix, apply this contrast matrix to the factor <code>Time</code>, and refit the model.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Put coefficients in hypothesis matrix</span></span>
<span id="cb19-2">Hm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H00 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb19-3">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H01 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T1 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb19-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H02 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T2 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb19-5"></span>
<span id="cb19-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to contrast matrix</span></span>
<span id="cb19-7">Cm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ginv2</span>(Hm)</span>
<span id="cb19-8"></span>
<span id="cb19-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I'm going to copy Time so we can reuse it in example 3:</span></span>
<span id="cb19-10">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time</span>
<span id="cb19-11"></span>
<span id="cb19-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply contrast matrix to factor</span></span>
<span id="cb19-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time2) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Cm[, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb19-14"></span>
<span id="cb19-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Refit model</span></span>
<span id="cb19-16">m_manual <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reading <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Time2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>Time2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span>
<span id="cb19-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m_manual)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value
(Intercept)   0.5317     0.0239   22.25
Time2H01      0.1040     0.0111    9.38
Time2H02      0.0904     0.0137    6.59</code></pre>
</div>
</div>
<p>As you can see, the third coefficient now estimates the difference between the average reading skill score at T3 and at T2. Compared to manually computing this difference from the first model’s output, the main advantage of coding the predictors yourself is that you also obtain a measure of the uncertainty about the estimate of interest (e.g., the standard error, or a confidence interval).</p>
</section>
<section id="example-3-interactions-and-random-effects" class="level2">
<h2 class="anchored" data-anchor-id="example-3-interactions-and-random-effects">Example 3: Interactions and random effects</h2>
<p>Finally, let’s take a look at interactions. Still working with the dataset from the second example, we can fit a model that contains an interaction between <code>Time</code> and <code>LanguageGroup</code>, i.e., that allows the effect of <code>Time</code> to differ between the three language groups. Since <code>Time</code> varies within <code>Class</code>, but <code>LanguageGroup</code> doesn’t, we can’t estimate a by-class random slope for <code>Language Group</code>. I’m going to ignore the warning about the singular fit here, because it isn’t related to the topic of the tutorial and I don’t have too many other datasets where interactions need to be modelled.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">m_default <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reading <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>LanguageGroup <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>Time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>boundary (singular) fit: see help('isSingular')</code></pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m_default)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                                            Estimate Std. Error t value
(Intercept)                                   0.5422     0.0233  23.281
Time2                                         0.1159     0.0198   5.850
Time3                                         0.1915     0.0279   6.859
LanguageGroupBilingual group German          -0.0893     0.0316  -2.822
LanguageGroupControl group Portuguese         0.1316     0.0373   3.532
Time2:LanguageGroupBilingual group German    -0.0196     0.0272  -0.720
Time3:LanguageGroupBilingual group German     0.0164     0.0373   0.440
Time2:LanguageGroupControl group Portuguese  -0.0121     0.0309  -0.390
Time3:LanguageGroupControl group Portuguese  -0.0287     0.0451  -0.636</code></pre>
</div>
</div>
<p>I’m not going to go over the interpretation of all of these coefficients; the point is that they’re not too informative, but that we can obtain more useful estimates by recoding the predictors. To do that, I prefer to <strong>combine the combinations of the factors involved in the interaction into a single variable</strong>, which I’ll call <code>Cell</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine combinations of Time and Language group into 1 factor</span></span>
<span id="cb25-2">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Cell <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time, d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>LanguageGroup))</span>
<span id="cb25-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Cell)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
  1 Bilingual group French   1 Bilingual group German 
                       104                        104 
1 Control group Portuguese   2 Bilingual group French 
                        74                        105 
  2 Bilingual group German 2 Control group Portuguese 
                        97                         75 
  3 Bilingual group French   3 Bilingual group German 
                       105                         93 
3 Control group Portuguese 
                        69 </code></pre>
</div>
</div>
<p>We will eventually need to refer to these cells in the same order as they’re known in R:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Order of the factor levels</span></span>
<span id="cb27-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Cell)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "1 Bilingual group French"   "1 Bilingual group German"  
[3] "1 Control group Portuguese" "2 Bilingual group French"  
[5] "2 Bilingual group German"   "2 Control group Portuguese"
[7] "3 Bilingual group French"   "3 Bilingual group German"  
[9] "3 Control group Portuguese"</code></pre>
</div>
</div>
<p>Let’s think about what we want our estimates to mean. I think it would make sense for the intercept to represent the mean reading skill score at Time 1 across the three language groups. Then, I’d like for the next coefficients to express the average progress (across language groups) from Time 1 to Time 2 and from Time 2 to Time 3. Next, I’d like to know, at each time point, what the average difference between the Portuguese and the bilingual (Swiss) children is, and what the average difference between the Portuguese-French and the Portuguese-German bilinguals is.</p>
<p>Now, in what follows, you’re going to see some fairly long equations. They may look daunting, but they’re really easy: like before, we’re going to express what we want the coefficients to mean as null hypotheses. It’s just that this time we have to include nine <img src="https://latex.codecogs.com/png.latex?%5Cmu">’s per equation.</p>
<ol type="1">
<li>The intercept represents the grand mean of the Time 1 cells. The silly corresponding null hypothesis is that this grand mean is 0: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B3%7D(%5Cmu_%7B1,F%7D%20+%20%5Cmu_%7B1,G%7D%20+%20%5Cmu_%7B1,P%7D)%20=%200">.</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B1%7D%7B3%7D(%5Cmu_%7B1,F%7D%20+%20%5Cmu_%7B1,G%7D%20+%20%5Cmu_%7B1,P%7D)%20=%200%20%5C%5C%5CLeftrightarrow%20%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B1,F%7D%20+%20%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B1,G%7D%20+%20%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B1,P%7D%20+%200%5Cmu_%7B2,F%7D%20+%200%5Cmu_%7B2,G%7D%20+%200%5Cmu_%7B2,P%7D%20+%200%5Cmu_%7B3,F%7D%20+%200%5Cmu_%7B3,G%7D%20+%200%5Cmu_%7B3,P%7D%20=%200%0A"></p>
<ol start="2" type="1">
<li>The next term represents the difference between the grand mean of the Time 2 cells and that of the Time 1 cells:</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B1%7D%7B3%7D(%5Cmu_%7B2,F%7D%20+%20%5Cmu_%7B2,G%7D%20+%20%5Cmu_%7B2,P%7D)%20=%20%5Cfrac%7B1%7D%7B3%7D(%5Cmu_%7B1,F%7D%20+%20%5Cmu_%7B1,G%7D%20+%20%5Cmu_%7B1,P%7D)%20%5C%5C%5CLeftrightarrow%20-%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B1,F%7D%20+%20-%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B1,G%7D%20+%20-%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B1,P%7D%20+%20%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B2,F%7D%20+%20%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B2,G%7D%20+%20%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B2,P%7D%20+%200%5Cmu_%7B3,F%7D%20+%200%5Cmu_%7B3,G%7D%20+%200%5Cmu_%7B3,P%7D%20=%200%0A"></p>
<ol start="3" type="1">
<li>The third term represents the difference between the grand mean of the Time 3 cells and that of the Time 2 cells:</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B1%7D%7B3%7D(%5Cmu_%7B3,F%7D%20+%20%5Cmu_%7B3,G%7D%20+%20%5Cmu_%7B3,P%7D)%20=%20%5Cfrac%7B1%7D%7B3%7D(%5Cmu_%7B2,F%7D%20+%20%5Cmu_%7B2,G%7D%20+%20%5Cmu_%7B2,P%7D)%20%5C%5C%5CLeftrightarrow%200%5Cmu_%7B1,F%7D%20+%200%5Cmu_%7B1,G%7D%20+%200%5Cmu_%7B1,P%7D%20+%20-%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B2,F%7D%20+%20-%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B2,G%7D%20+%20-%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B2,P%7D%20+%20%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B3,F%7D%20+%20%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B3,G%7D%20+%20%5Cfrac%7B1%7D%7B3%7D%5Cmu_%7B3,P%7D%20=%200%0A"></p>
<p>Now for comparisons between the language groups at each point in time. For each time, I want a term testing if the Portuguese on the one hand and the French- and German-speaking pupils on the other hand perform the same as well as one if the French- and German-speaking pupils differ amongst themselves.</p>
<ol start="4" type="1">
<li>The fourth term represents the difference between the mean of the Portuguese scores at Time 1 and the grand mean of the two bilingual groups’ performance at Time 1:</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_%7B1,P%7D%20=%20%5Cfrac%7B1%7D%7B2%7D(%5Cmu_%7B1,F%7D%20+%20%5Cmu_%7B1,G%7D)%20%5C%5C%5CLeftrightarrow%20-%5Cfrac%7B1%7D%7B2%7D%5Cmu_%7B1,F%7D%20+%20-%5Cfrac%7B1%7D%7B2%7D%5Cmu_%7B1,G%7D%20+%201%5Cmu_%7B1,P%7D%20+%200%5Cmu_%7B2,F%7D%20+%200%5Cmu_%7B2,G%7D%20+%200%5Cmu_%7B2,P%7D%20+%200%5Cmu_%7B3,F%7D%20+%200%5Cmu_%7B3,G%7D%20+%200%5Cmu_%7B3,P%7D%20=%200%0A"></p>
<ol start="5" type="1">
<li>The fifth term represents the difference between the two bilingual groups at Time 1:</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_%7B1,F%7D%20=%5Cmu_%7B1,G%7D%20%5C%5C%5CLeftrightarrow%201%5Cmu_%7B1,F%7D%20+%20-1%5Cmu_%7B1,G%7D%20+%200%5Cmu_%7B1,P%7D%20+%200%5Cmu_%7B2,F%7D%20+%200%5Cmu_%7B2,G%7D%20+%200%5Cmu_%7B2,P%7D%20+%200%5Cmu_%7B3,F%7D%20+%200%5Cmu_%7B3,G%7D%20+%200%5Cmu_%7B3,P%7D%20=%200%0A"></p>
<ol start="6" type="1">
<li>Same as the fourth term, but for Time 2.</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_%7B2,P%7D%20=%20%5Cfrac%7B1%7D%7B2%7D(%5Cmu_%7B2,F%7D%20+%20%5Cmu_%7B2,G%7D)%20%5C%5C%5CLeftrightarrow%200%5Cmu_%7B1,F%7D%20+%200%5Cmu_%7B1,G%7D%20+%200%5Cmu_%7B1,P%7D%20+%20-%5Cfrac%7B1%7D%7B2%7D%5Cmu_%7B2,F%7D%20+%20-%5Cfrac%7B1%7D%7B2%7D%5Cmu_%7B2,G%7D%20+%201%5Cmu_%7B2,P%7D%20+%200%5Cmu_%7B3,F%7D%20+%200%5Cmu_%7B3,G%7D%20+%200%5Cmu_%7B3,P%7D%20=%200%0A"></p>
<ol start="7" type="1">
<li>Same as the fifth term, but for Time 2.</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_%7B2,F%7D%20=%5Cmu_%7B2,G%7D%20%5C%5C%5CLeftrightarrow%200%5Cmu_%7B1,F%7D%20+%200%5Cmu_%7B1,G%7D%20+%200%5Cmu_%7B1,P%7D%20+%201%5Cmu_%7B2,F%7D%20+%20-1%5Cmu_%7B2,G%7D%20+%200%5Cmu_%7B2,P%7D%20+%200%5Cmu_%7B3,F%7D%20+%200%5Cmu_%7B3,G%7D%20+%200%5Cmu_%7B3,P%7D%20=%200%0A"></p>
<ol start="8" type="1">
<li>Same as the fourth and sixth terms, but for Time 3.</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_%7B3,P%7D%20=%20%5Cfrac%7B1%7D%7B2%7D(%5Cmu_%7B3,F%7D%20+%20%5Cmu_%7B3,G%7D)%20%5C%5C%5CLeftrightarrow%200%5Cmu_%7B1,F%7D%20+%200%5Cmu_%7B1,G%7D%20+%200%5Cmu_%7B1,P%7D%20+%200%5Cmu_%7B2,F%7D%20+%200%5Cmu_%7B2,G%7D%20+%200%5Cmu_%7B2,P%7D%20+%20-%5Cfrac%7B1%7D%7B2%7D%5Cmu_%7B3,F%7D%20+%20-%5Cfrac%7B1%7D%7B2%7D%5Cmu_%7B3,G%7D%20+%201%5Cmu_%7B3,P%7D%20=%200%0A"></p>
<ol start="9" type="1">
<li>Same as the fifth and seventh terms, but for Time 3.</li>
</ol>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmu_%7B3,F%7D%20=%5Cmu_%7B3,G%7D%20%5C%5C%5CLeftrightarrow%200%5Cmu_%7B1,F%7D%20+%200%5Cmu_%7B1,G%7D%20+%200%5Cmu_%7B1,P%7D%20+%200%5Cmu_%7B2,F%7D%20+%200%5Cmu_%7B2,G%7D%20+%200%5Cmu_%7B2,P%7D%20+%201%5Cmu_%7B3,F%7D%20+%20-1%5Cmu_%7B3,G%7D%20+%200%5Cmu_%7B3,P%7D%20=%200%0A"></p>
<p>Put all of these coefficients into a large hypothesis matrix and convert it to a contrast matrix:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">Hm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">GM_T1     =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,  </span>
<span id="cb29-2">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-3">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb29-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T2vT1     =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F1 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G1 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P1 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb29-5">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,  </span>
<span id="cb29-6">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb29-7">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T3vT2     =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-8">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F2 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G2 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P2 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb29-9">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb29-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T1_PtvsBi =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F1 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G1 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,    </span>
<span id="cb29-11">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-12">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb29-13">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T1_FrvsGe =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G1 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-14">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-15">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb29-16">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T2_PtvsBi =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-17">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F2 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G2 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,    </span>
<span id="cb29-18">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb29-19">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T2_FrvsGe =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-20">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G2 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-21">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb29-22">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T3_PtvsBi =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-23">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-24">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F3 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G3 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb29-25">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">T3_FrvsGe =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-26">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P2 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,    </span>
<span id="cb29-27">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G3 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P3 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb29-28">Cm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ginv2</span>(Hm)</span></code></pre></div>
</div>
<p>Apply the contrasts to the <code>Cell</code> variable and fit the model:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Cell) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Cm[, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb30-2">m_manual <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reading <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Cell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span>
<span id="cb30-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m_manual)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>              Estimate Std. Error t value
(Intercept)     0.5586    0.01200   46.56
CellT2vT1       0.1032    0.00975   10.58
CellT3vT2       0.0812    0.00992    8.19
CellT1_PtvsBi   0.1758    0.02725    6.45
CellT1_FrvsGe   0.0818    0.02715    3.01
CellT2_PtvsBi   0.1763    0.02723    6.48
CellT2_FrvsGe   0.1052    0.02733    3.85
CellT3_PtvsBi   0.1412    0.02765    5.11
CellT3_FrvsGe   0.0794    0.02748    2.89</code></pre>
</div>
</div>
<p>The coefficients mean exactly what it says on the tin. There is just one problem: I didn’t include a random slope that capture the varying effect of <code>Time</code> by <code>Class</code> yet. Adding a by-class random slope for <code>Cell</code> wouldn’t work: you’d end up estimating an enormous matrix of random effects since <code>Cell</code> has nine levels. Instead, we’ll have to first refit the model using the dummy variables in the contrast matrix of <code>Cell</code> as separate variables:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the dummy variables in the contrast matrix of Cell</span></span>
<span id="cb32-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to the dataset as separate variables</span></span>
<span id="cb32-3">contrast_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(Cm[, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb32-4">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Cell =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Cell))</span>
<span id="cb32-5">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(d, contrast_matrix, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell"</span>)</span>
<span id="cb32-6"></span>
<span id="cb32-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Refit the model using these separate dummy variables</span></span>
<span id="cb32-8">m_manual <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reading <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> T2vT1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> T3vT2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-9">                   T1_PtvsBi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> T1_FrvsGe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-10">                   T2_PtvsBi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> T2_FrvsGe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-11">                   T3_PtvsBi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> T3_FrvsGe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb32-12">                   (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span>
<span id="cb32-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m_manual)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value
(Intercept)   0.5586    0.01200   46.56
T2vT1         0.1032    0.00975   10.58
T3vT2         0.0812    0.00992    8.19
T1_PtvsBi     0.1758    0.02725    6.45
T1_FrvsGe     0.0818    0.02715    3.01
T2_PtvsBi     0.1763    0.02723    6.48
T2_FrvsGe     0.1052    0.02733    3.85
T3_PtvsBi     0.1412    0.02765    5.11
T3_FrvsGe     0.0794    0.02748    2.89</code></pre>
</div>
</div>
<p>The output is exactly the same as above. Now we need to think about which of these estimates can actually vary by <code>Class</code>. If you think about the way we coded these predictors, <code>T2vsT1</code> and <code>T3vT2</code> capture the effect of <code>Time</code>, whereas the other predictors capture the effects of <code>LanguageGroup</code> at different times. The effect of <code>Time</code> can vary according to <code>Class</code>, but the effects of <code>LanguageGroup</code> can’t (each <code>Class</code> belonged to only one <code>LanguageGroup</code>). So if we want random slopes of <code>Time</code> by <code>Class</code>, we need to let the effects of <code>T2vT1</code> and <code>T3vT2</code> vary by class:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1">m_manual <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reading <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> T2vT1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> T3vT2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb34-2">                   T1_PtvsBi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> T1_FrvsGe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb34-3">                   T2_PtvsBi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> T2_FrvsGe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb34-4">                   T3_PtvsBi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> T3_FrvsGe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb34-5">                   (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>T2vT1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>T3vT2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>boundary (singular) fit: see help('isSingular')</code></pre>
</div>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m_manual)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value
(Intercept)   0.5563     0.0143   38.84
T2vT1         0.1054     0.0120    8.77
T3vT2         0.0820     0.0142    5.79
T1_PtvsBi     0.1762     0.0331    5.32
T1_FrvsGe     0.0893     0.0316    2.82
T2_PtvsBi     0.1740     0.0315    5.52
T2_FrvsGe     0.1088     0.0306    3.55
T3_PtvsBi     0.1393     0.0275    5.07
T3_FrvsGe     0.0729     0.0272    2.68</code></pre>
</div>
</div>
<p>The warning isn’t relevant to the purposes of this tutorial. As a sanity check, we can compare the predictions of <code>m_manual</code> and <code>m_default</code> to confirm that <code>m_manual</code> is the same model as <code>m_default</code>, just with parameter estimates that are easier to interpret:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (I don't know why I need to specify 'newdata'...)</span></span>
<span id="cb38-2">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>predict_default <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(m_default, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> d)</span>
<span id="cb38-3">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>predict_manual <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(m_manual, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> d)</span>
<span id="cb38-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(predict_manual <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> predict_default, d)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2020-05-05-contrast-coding/index_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid" width="480"></p>
</div>
</div>
<p>Both models make the same predictions, and the predictions align reasonably well with the data observed:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d,</span>
<span id="cb39-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Time, </span>
<span id="cb39-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> predict_manual,</span>
<span id="cb39-4">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> LanguageGroup)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model predictions"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2020-05-05-contrast-coding/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid" width="768"></p>
</div>
</div>
</section>
<section id="what-if-it-doesnt-work" class="level2">
<h2 class="anchored" data-anchor-id="what-if-it-doesnt-work">What if it doesn’t work?</h2>
<p>If, having specified your own hypothesis matrix, some lines in the regression output contain <code>NA</code>, the reason is probably that some of the rows in your hypothesis matrix are combinations of some of the other rows. In essence, you’re asking the model to answer the same question twice, so it only answers it once. Reformulating the hypotheses will usually work.</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Berthele, Raphael and Amelia Lambelet (eds.). 2018. <em>Heritage and school language literacy development in migrant children: Interdependence or independence?</em> Multilingual Matters.</p>
<p>Pestana, Carlos, Amelia Lambelet and Jan Vanhove. 2018. Reading comprehension development in Portuguese heritage speakers in Switzerland (HELASCOT project). In Raphael Berthele and Amelia Lambelet (Eds.), <em>Heritage language and school language literacy development in migrant children: Interdependence or independence?</em> (pp.&nbsp;58-82). Bristol, UK: Multilingual Matters. <a href="http://doi.org/10.21832/BERTHE9047" class="uri">http://doi.org/10.21832/BERTHE9047</a></p>
<p>Schad, Daniel J., Shravan Vasishth, Sven Hohenstein and Reinhold Kliegl. 2020. How to capitalize on a priori contrasts in linear (mixed) models: A tutorial. <em>Journal of Memory and Language</em> 110. <a href="https://doi.org/10.1016/j.jml.2019.104038" class="uri">https://doi.org/10.1016/j.jml.2019.104038</a></p>
<p>Vanhove, Jan.&nbsp;2019. Metalinguistic knowledge about the native language and language transfer in gender assignment. <em>Studies in Second Language Learning and Teaching</em> 9(2). 397-419. <a href="https://doi.org/10.14746/ssllt.2019.9.2.7" class="uri">https://doi.org/10.14746/ssllt.2019.9.2.7</a></p>
</section>
<section id="software-versions" class="level2">
<h2 class="anchored" data-anchor-id="software-versions">Software versions</h2>
<p>Please note that I reran the code on this page on August 6, 2023.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.2 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-06
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package     * version date (UTC) lib source
 boot          1.3-28  2021-05-03 [4] CRAN (R 4.2.0)
 cachem        1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr         3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 cli           3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 colorspace    2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 crayon        1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 devtools      2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest        0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 dplyr       * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 ellipsis      0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate      0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi         1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 farver        2.1.1   2022-07-06 [1] CRAN (R 4.3.0)
 fastmap       1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)
 fs            1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics      0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2     * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue          1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gtable        0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 helascot    * 1.0.0   2023-08-02 [1] Github (janhove/helascot@4cf3c1b)
 hms           1.1.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools     0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets   1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv        1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 jsonlite      1.8.7   2023-06-29 [1] CRAN (R 4.3.1)
 knitr         1.39    2022-04-26 [2] CRAN (R 4.2.0)
 labeling      0.4.2   2020-10-20 [1] CRAN (R 4.3.0)
 later         1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lattice       0.21-8  2023-04-05 [4] CRAN (R 4.3.0)
 lifecycle     1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 lme4        * 1.1-34  2023-07-04 [1] CRAN (R 4.3.1)
 lubridate   * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)
 magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 MASS          7.3-60  2023-05-04 [4] CRAN (R 4.3.1)
 Matrix      * 1.6-0   2023-07-08 [4] CRAN (R 4.3.1)
 memoise       2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mime          0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 minqa         1.2.5   2022-10-19 [1] CRAN (R 4.3.1)
 munsell       0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 nlme          3.1-162 2023-01-31 [4] CRAN (R 4.2.2)
 nloptr        2.0.3   2022-05-26 [1] CRAN (R 4.3.1)
 pillar        1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild      1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig     2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload       1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 prettyunits   1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx      3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis       0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises      1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps            1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr       * 1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6            2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 Rcpp          1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 readr       * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)
 remotes       2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 rlang         1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown     2.21    2023-03-26 [1] CRAN (R 4.3.0)
 rstudioapi    0.14    2022-08-22 [1] CRAN (R 4.3.0)
 scales        1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo   1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shiny         1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 stringi       1.7.12  2023-01-11 [1] CRAN (R 4.3.1)
 stringr     * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 tibble      * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyr       * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)
 tidyselect    1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 tidyverse   * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)
 timechange    0.2.0   2023-01-11 [1] CRAN (R 4.3.0)
 tzdb          0.4.0   2023-05-12 [1] CRAN (R 4.3.0)
 urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis       2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8          1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 vctrs         0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 withr         2.5.0   2022-03-03 [2] CRAN (R 4.2.0)
 xfun          0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xtable        1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 yaml          2.3.5   2022-02-21 [2] CRAN (R 4.2.0)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>contrast coding</category>
  <category>mixed-effects models</category>
  <category>multiple regression</category>
  <category>tutorial</category>
  <category>research questions</category>
  <guid>https://janhove.github.io/posts/2020-05-05-contrast-coding/index.html</guid>
  <pubDate>Fri, 22 May 2020 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Nonparametric tests aren’t a silver bullet when parametric assumptions are violated</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2020-05-23-nonparametric/index.html</link>
  <description><![CDATA[ 



<p>Some researchers adhere to a simple strategy when comparing data from two or more groups: when they think that the data in the groups are normally distributed, they run a parametric test (<img src="https://latex.codecogs.com/png.latex?t">-test or ANOVA); when they suspect that the data are not normally distributed, they run a nonparametric test (e.g., Mann–Whitney or Kruskal–Wallis). Rather than follow such an automated approach to analysing data, I think researchers ought to consider the following points:</p>
<ul>
<li>The <img src="https://latex.codecogs.com/png.latex?t">-test and ANOVA compare <em>means</em>; the Mann–Whitney and Kruskal–Wallis don’t.</li>
<li>The Mann–Whitney and Kruskal–Wallis do <em>not</em> in general compare medians, either. I’ll illustrate these first two points in this blog post.</li>
<li>The main problem with parametric tests when you have nonnormal data is that these tests compare means, but that these means don’t necessarily capture a relevant aspect of the data. But even if the data aren’t normally distributed, comparing means can sometimes be reasonable, depending on what the data look like and what it is you’re actually interested in. And if you <em>do</em> want to compare means, parametric tests or bootstrapping are more sensible than running a nonparametric test. See also my blog post <a href="../2019-04-11-assumptions-relevance"><em>Before worrying about model assumptions, think about model relevance</em></a>.</li>
<li>If you want to compare medians, look into bootstrapping or quantile regression.</li>
<li>Above all, make sure that you know you’re comparing when you run a test and that this comparison makes sense in light of the data <em>and your research question</em>.</li>
</ul>
<p>In this blog post, I’ll share the results of some simulations that demonstrate that the Mann–Whitney (a) picks up on differences in the variance between two distributions, even if they have the same mean and median; (b) picks up on differences in the median between two distributions, even if they have the same mean and variance; and (c) picks up on differences in the mean between two distributions, even if they have the same median and variance. These points aren’t new (see Zimmerman 1998), but since the automated strategy (‘parametric when normal, otherwise nonparemetric’) is pretty widespread, they bear repeating.</p>
<section id="same-mean-same-median-different-variance" class="level2">
<h2 class="anchored" data-anchor-id="same-mean-same-median-different-variance">Same mean, same median, different variance</h2>
<p>The first simulation demonstrates the Mann–Whitney’s sensitivity to differences in the variance. I simulated samples from a uniform distribution going from <img src="https://latex.codecogs.com/png.latex?-%5Csqrt%7B3%7D"> to <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B3%7D"> as well as from a uniform distribution going from <img src="https://latex.codecogs.com/png.latex?-3%5Csqrt%7B3%7D"> to <img src="https://latex.codecogs.com/png.latex?3%5Csqrt%7B3%7D">. Both distributions have a mean and median of 0, but the standard deviation of the first is 1 and that of the second is 3. I compared these samples using a Mann–Whitney and recorded the <img src="https://latex.codecogs.com/png.latex?p">-value. I generated samples of both 50 and 500 observations and repeated this process 10,000 times. You can reproduce this simulation using the code below.</p>
<p><strong>Figure 1</strong> shows the distribution of the <img src="https://latex.codecogs.com/png.latex?p">-values. Even though the distributions’ means and medians are the same, the Mann–Whitney returns significance (<img src="https://latex.codecogs.com/png.latex?p%20%3C%200.05">) in about 7% of the comparisons for the smaller samples and 8% for the larger samples. If the test were sensitive only to differences in the mean or median, if should return significance in only 5% of the comparisons.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load package for plotting</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set number of simulation runs</span></span>
<span id="cb1-5">n_sim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw a sample of 50 observations from two uniform distributions with the same </span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mean and median but with different variances/standard deviations.</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the Mann-Whitney on them (wilcox.test()).</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Repeat this n_sim times.</span></span>
<span id="cb1-11">pvals_50 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(n_sim, {</span>
<span id="cb1-12">  x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb1-13">  y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb1-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wilcox.test</span>(x, y)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p.value</span>
<span id="cb1-15">})</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Same but with samples of 500 observations.</span></span>
<span id="cb1-18">pvals_500 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(n_sim, {</span>
<span id="cb1-19">  x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb1-20">  y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb1-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wilcox.test</span>(x, y)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p.value</span>
<span id="cb1-22">})</span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Put in data frame</span></span>
<span id="cb1-25">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb1-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(pvals_50, pvals_500),</span>
<span id="cb1-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> n_sim)</span>
<span id="cb1-28">)</span>
<span id="cb1-29"></span>
<span id="cb1-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot</span></span>
<span id="cb1-31"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d,</span>
<span id="cb1-32">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> p,</span>
<span id="cb1-33">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> (p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(</span>
<span id="cb1-35">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>),</span>
<span id="cb1-36">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey20"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey70"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> n_sim<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb1-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb1-43">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Same mean, same median, different variance"</span>,</span>
<span id="cb1-44">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Comparison for two sample sizes (50 vs. 500 observations per group):</span></span>
<span id="cb1-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    uniform distribution from -sqrt(3) to sqrt(3)</span></span>
<span id="cb1-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    vs. uniform distribution from -3*sqrt(3) to 3*sqrt(3)"</span></span>
<span id="cb1-47">  )</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-05-23-nonparametric/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption"><strong>Figure 1.</strong></figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="same-mean-different-median-same-variance" class="level2">
<h2 class="anchored" data-anchor-id="same-mean-different-median-same-variance">Same mean, different median, same variance</h2>
<p>The second simulation demonstrates that the Mann–Whitney does not compare means. The simulation set-up was the same as before, but the samples were drawn from different distributions. The first sample was drawn from a log-normal distribution with mean <img src="https://latex.codecogs.com/png.latex?%5Cexp%7B(%5Cln%7B10%7D%20+%20%5Cfrac%7B1%7D%7B2%7D)%7D%20%5Capprox%2016.5">, median 10 and standard deviation <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B(%5Cexp%7B(1)%7D-1)%5Cexp%7B(2%5Cln%7B10%7D+1)%7D%7D%20%5Capprox%2021.6">. The second sample was drawn from a normal distribution with the same mean (i.e., about 16.5) and the same standard deviation (i.e., about 21.6), but with a different median (viz., 16.5 rather than 10).</p>
<p><strong>Figure 2</strong> shows that the Mann–Whitney returned significance for 12% of the comparisons of the smaller samples and 92% of the comparisons for the larger samples. So the Mann–Whitney does <em>not</em> test for differences in the mean; otherwise only 5% of the comparisons should have been significant (since the means of the distributions are the same).</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-05-23-nonparametric/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 2.</strong></figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="different-mean-same-median-same-variance" class="level2">
<h2 class="anchored" data-anchor-id="different-mean-same-median-same-variance">Different mean, same median, same variance</h2>
<p>The last simulation demonstrates that the Mann–Whitney does not compare medians, either. The first sample was again drawn from a log-normal distribution with mean <img src="https://latex.codecogs.com/png.latex?%5Cexp%7B(%5Cln%7B10%7D%20+%20%5Cfrac%7B1%7D%7B2%7D)%7D%20%5Capprox%2016.5">, median 10 and standard deviation <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B(%5Cexp%7B(1)%7D-1)%5Cexp%7B(2%5Cln%7B10%7D+1)%7D%7D%20%5Capprox%2021.6">. The second sample was now drawn from a normal distribution with the same median (i.e., 10) and the same standard deviation (i.e., about 21.6), but with a different mean (viz., 10 rather than 16.5).</p>
<p><strong>Figure 3</strong> shows that the Mann–Whitney returned significance for 20% of the comparisons of the smaller samples and 91% of the comparisons for the larger samples. So the Mann–Whitney does <em>not</em> test for differences in the median; otherwise only 5% of the comparisons should have been significant (since the medians of the distributions are the same).</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-05-23-nonparametric/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 3.</strong></figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="nonparametric-tests-make-assumptions-too" class="level2">
<h2 class="anchored" data-anchor-id="nonparametric-tests-make-assumptions-too">Nonparametric tests make assumptions, too</h2>
<p>Many researchers think that nonparametric tests don’t make any assumptions about the distributions from which the data were drawn. This belief is half-true (i.e., wrong): Nonparametric tests such as the Mann–Whitney don’t assume that the data were drawn from a <em>specific</em> distribution (e.g., from a normal distribution). However, they do assume that the data in the different groups being compared were drawn from the <em>same</em> distribution (but for a shift in the location of this distribution). If researchers run nonparametric tests because they are worried about violating the assumptions of parametric tests, I suggest they worry about the assumptions of their nonparametric tests, too.</p>
<p>But a better solution in my view is to them to consider more carefully what they actually want to compare. If it is really the means that are of interest, parametric tests are often okay, and their results can be double-checked using the bootstrap if needed. Permutation tests would be an alternative. If it is the medians that are of interest, quantile regression, bootstrapping, or permutation tests may be useful. If another measure of the data’s central tendency is of interest, robust regression may be useful. A discussion of these techniques is beyond the scope of this blog post, whose aims merely were to alert researchers to the fact that nonparametric tests aren’t a silver bullet when parametric assumptions are violated and that nonparametric tests aren’t just sensitive to differences in the mean or median.</p>
</section>
<section id="reference" class="level2">
<h2 class="anchored" data-anchor-id="reference">Reference</h2>
<p>Zimmerman, Donald W. 1998. <a href="https://doi.org/10.1080/00220979809598344">Invalidation of parametric and nonparametric statistical tests by concurrent violation of two assumptions</a>. <em>Journal of Experimental Education</em> 67(1). 55-68.</p>
</section>
<section id="software-versions" class="level2">
<h2 class="anchored" data-anchor-id="software-versions">Software versions</h2>
<p>Please note that I reran the code on this page on August 6, 2023.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.2 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-06
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package     * version date (UTC) lib source
 cachem        1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr         3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 cli           3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 colorspace    2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 crayon        1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 devtools      2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest        0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 dplyr       * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 ellipsis      0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate      0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi         1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 farver        2.1.1   2022-07-06 [1] CRAN (R 4.3.0)
 fastmap       1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)
 fs            1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics      0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2     * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue          1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gtable        0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 hms           1.1.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools     0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets   1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv        1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 jsonlite      1.8.7   2023-06-29 [1] CRAN (R 4.3.1)
 knitr         1.39    2022-04-26 [2] CRAN (R 4.2.0)
 labeling      0.4.2   2020-10-20 [1] CRAN (R 4.3.0)
 later         1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lifecycle     1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 lubridate   * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)
 magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 memoise       2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mime          0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 munsell       0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 pillar        1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild      1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig     2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload       1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 prettyunits   1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx      3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis       0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises      1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps            1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr       * 1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6            2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 Rcpp          1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 readr       * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)
 remotes       2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 rlang         1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown     2.21    2023-03-26 [1] CRAN (R 4.3.0)
 rstudioapi    0.14    2022-08-22 [1] CRAN (R 4.3.0)
 scales        1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo   1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shiny         1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 stringi       1.7.12  2023-01-11 [1] CRAN (R 4.3.1)
 stringr     * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 tibble      * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyr       * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)
 tidyselect    1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 tidyverse   * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)
 timechange    0.2.0   2023-01-11 [1] CRAN (R 4.3.0)
 tzdb          0.4.0   2023-05-12 [1] CRAN (R 4.3.0)
 urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis       2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8          1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 vctrs         0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 withr         2.5.0   2022-03-03 [2] CRAN (R 4.2.0)
 xfun          0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xtable        1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 yaml          2.3.5   2022-02-21 [2] CRAN (R 4.2.0)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>power</category>
  <category>significance</category>
  <category>simplicity</category>
  <category>assumptions</category>
  <category>nonparametric tests</category>
  <guid>https://janhove.github.io/posts/2020-05-23-nonparametric/index.html</guid>
  <pubDate>Fri, 22 May 2020 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Baby steps in Bayes: Incorporating reliability estimates in regression models</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2020-02-18-measurement-error/index.html</link>
  <description><![CDATA[ 



<p>Researchers sometimes calculate reliability indices such as Cronbach’s <img src="https://latex.codecogs.com/png.latex?%5Calpha"> or Revelle’s <img src="https://latex.codecogs.com/png.latex?%5Comega_T">, but their statistical models rarely take these reliability indices into account. Here I want to show you how you can incorporate information about the reliability about your measurements in a statistical model so as to obtain more honest and more readily interpretable parameter estimates.</p>
<section id="reliability-and-measurement-error" class="level2">
<h2 class="anchored" data-anchor-id="reliability-and-measurement-error">Reliability and measurement error</h2>
<p>This blog post is the sequel to the <a href="../2020-01-21-statistical-control-measurement-error">previous</a> one, where I demonstrated how imperfectly measured control variables undercorrect for the actual confounding in observational studies (also see Berthele &amp; Vanhove 2017; Brunner &amp; Austin 2009; Westfall &amp; Yarkoni 2016). A model that doesn’t account for measurement error on the confounding variable—and hence implicitly assumes that the confound was measured perfectly—may confidently conclude that the variable of actual interest is related to the outcome even when taking into account the confound. From such a finding, researchers typically infer that the variable of actual interest is causally related to the outcome even in absence of the confound. But once this measurement error is duly accounted for, you may find that the evidence for a causal link between the variable of interest and the outcome is more tenuous than originally believed.</p>
<p>So especially in observational studies, where confounds abound, it behooves researchers to account for the measurement error in their variables so that they don’t draw unwarranted conclusions from their data too often. The amount of measurement error on your variables is usually unknown. But if you’ve calculated some reliability estimate such as Cronbach’s <img src="https://latex.codecogs.com/png.latex?%5Calpha"> for your variables, you can use this to obtain an estimate of the amount of measurement error.</p>
<p>To elaborate, in classical test theory, the reliability <img src="https://latex.codecogs.com/png.latex?%5Crho_%7BXX'%7D"> of a measure is equal to the ratio of the variance of the (error-free) true scores to the variance of the observed scores. The latter is the sum of the variance of the true scores and the error variance:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Crho_%7BXX'%7D%20=%20%5Cfrac%7B%5Ctextrm%7Btrue%20score%20variance%7D%7D%7B%5Ctextrm%7Btrue%20score%20variance%7D%20+%20%5Ctextrm%7Bmeasurement%20error%20variance%7D%7D%20=%20%5Cfrac%7B%5Csigma%5E2_T%7D%7B%5Csigma%5E2_T%20+%20%5Csigma%5E2_E%7D.%0A"></p>
<p>Rearranging, we get</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csigma%5E2_E%20=%20%5Csigma%5E2_T%5Cleft(%5Cfrac%7B1%7D%7B%5Crho_%7BXX'%7D%7D-1%5Cright).%0A"></p>
<p>None of these values are known, but they can be estimated based on the sample. Specifically, <img src="https://latex.codecogs.com/png.latex?%5Crho_%7BXX'%7D"> can be estimated by a reliability index such as Cronbach’s <img src="https://latex.codecogs.com/png.latex?%5Calpha"> and the sum <img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2_T%20+%20%5Csigma%5E2_E"> can be estimated by computing the variable’s sample variance.</p>
</section>
<section id="a-simulated-example" class="level2">
<h2 class="anchored" data-anchor-id="a-simulated-example">A simulated example</h2>
<p>Let’s first deal with a simulated dataset. The main advantage of analysing simulated data is that you check that what comes out of the model corresponds to what went into the data. In preparing this blog post, I was able to detect an arithmetic error in my model code in this way as one parameter was consistently underestimated. Had I applied the model immediately to the real data set, I wouldn’t have noticed anything wrong. But we’ll deal with real data afterwards.</p>
<p><strong>Update (2023-08-06):</strong> When converting this blog from Jekyll/Bootstrap to Quarto, I noticed that the original code used in this blog post, which involved the R package <code>rstan</code> has started to run very slowly. In the present version, I use <code>cmdstanr</code> instead.</p>
<p>Run these commands to follow along:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-2_3b78b3893311250fd4a8322deb111456">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for fitting Bayesian models, v. 2.32.2</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(posterior) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for working with posterior distributions</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For drawing scatterplot matrices</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://janhove.github.io/RCode/scatterplot_matrix.R"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set random seed for reproducibility</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020-02-13</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kind =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mersenne-Twister"</span>)</span></code></pre></div>
</div>
<section id="generating-the-construct-scores" class="level3">
<h3 class="anchored" data-anchor-id="generating-the-construct-scores">Generating the construct scores</h3>
<p>The scenario we’re going to simulate is one in which you have two correlated predictor variables (<code>A</code> and <code>B</code>) and one outcome variable (<code>Z</code>). Unbeknownst to the analyst, <code>Z</code> is causally affected by <code>A</code> but not by <code>B</code>. Moreover, the three variables are measured with some degree of error, but we’ll come to that later. Figure 1 depicts the scenario for which we’re going to simulate data.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-3_49f3c42090373fe1c15810501775917b">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-02-18-measurement-error/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="480"></p>
<figcaption class="figure-caption"><strong>Figure 1.</strong> Graphical causal model for the simulated data. A set of unobserved factors <img src="https://latex.codecogs.com/png.latex?U"> gives rise to a correlation between <code>A</code> and <code>B</code>. Even though only <code>A</code> causally affects <code>Z</code>, an association between <code>B</code> and <code>Z</code> will be found unless <code>A</code> is controlled for.</figcaption>
</figure>
</div>
</div>
</div>
<p>The first thing we need are two correlated predictor variables. I’m going to generate these from a bivariate normal distribution. <code>A</code> has a mean of 3 units and a standard deviation of 1.5 units, and <code>B</code> has mean -4 and standard deviation 0.8 units. The correlation between them is <img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.73">. To generate a sample from this bivariate normal distribution, you need to construct the variance-covariance matrix from the standard deviations and correlation, which I do in the code below:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-4_2ededbcc036052d50d0f9bcceca4b026">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate correlated constructs</span></span>
<span id="cb2-2">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span></span>
<span id="cb2-3">rho <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.73</span></span>
<span id="cb2-4">mean_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb2-5">mean_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb2-6">sd_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span></span>
<span id="cb2-7">sd_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Given the correlation and the standard deviations,</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># construct the variance-covariance matrix for the constructs like so:</span></span>
<span id="cb2-11">latent_covariance_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(sd_A, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sd_B)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span></span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rho), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(rho, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span></span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(sd_A, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sd_B))</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw data from the multivariate normal distribution:</span></span>
<span id="cb2-16">constructs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> MASS<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mvrnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(mean_A, mean_B),</span>
<span id="cb2-17">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Sigma =</span> latent_covariance_matrix)</span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract variables from object</span></span>
<span id="cb2-20">A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> constructs[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb2-21">B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> constructs[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span></code></pre></div>
</div>
<p>Next, we need to generate the outcome. In this simulation, <code>Z</code> depends linearly on <code>A</code> but not on <code>B</code> (hence ‘<img src="https://latex.codecogs.com/png.latex?0%20%5Ctimes%20B_i">’).</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AZ_i%20=%202%20+%200.7%20%5Ctimes%20A_i%20+%200%20%5Ctimes%20B_i%20+%20%5Cvarepsilon_i.%0A"></p>
<p>The error term <img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon"> is drawn from a normal distribution with standard deviation 1.3. Importantly, this error term does <em>not</em> express the measurement error on <code>Z</code>; it is the part of the true score variance in <code>Z</code> that isn’t related to either <code>A</code> or <code>B</code>:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cvarepsilon_i%20%5Csim%20%5Ctextrm%7BNormal%7D(0,%201.3).%0A"></p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-5_a2ce4ac0075cad7fe5b92c76fc412211">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create Z</span></span>
<span id="cb3-2">intercept <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-3">slope_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span></span>
<span id="cb3-4">slope_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-5">sigma_Z.AB <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span></span>
<span id="cb3-6">Z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> intercept <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> slope_A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> slope_B<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>B <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> sigma_Z.AB)</span></code></pre></div>
</div>
<p>Even though <code>B</code> isn’t causally related to <code>Z</code>, we find that <code>B</code> and <code>Z</code> are correlated thanks to <code>B</code>’s correlation to <code>A</code>.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-6_22544f7e184f625a320c08b3fc5bd5a2">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scatterplot_matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(Z, A, B))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-02-18-measurement-error/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="figure-caption"><strong>Figure 2.</strong> <code>B</code> is causally unrelated to <code>Z</code>, but these two variables are still correlated because <code>B</code> correlates with <code>A</code> and <code>A</code> and <code>Z</code> are causally related.</figcaption>
</figure>
</div>
</div>
</div>
<p>A multiple regression model is able to tease apart the effects of <code>A</code> and <code>B</code> on <code>Z</code>:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-7_19c36b77507eb89daab45f4aca27f09d">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> B))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)   2.1224     0.7130   2.977 3.15e-03
A             0.6876     0.0706   9.742 1.22e-19
B             0.0196     0.1340   0.146 8.84e-01</code></pre>
</div>
</div>
<p>The confound <code>A</code> is significantly related to <code>Z</code> and its estimated regression parameter is close to its true value of 0.70 (<img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta%7D_A%20=%200.69%20%5Cpm%200.07">). The variable of interest <code>B</code>, by contrast, isn’t significantly related to <code>Z</code> when <code>A</code> has been accounted for (<img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta%7D_B%20=%200.02%20%5Cpm%200.13">). This is all as it should be.</p>
</section>
<section id="adding-measurement-error" class="level3">
<h3 class="anchored" data-anchor-id="adding-measurement-error">Adding measurement error</h3>
<p>Now let’s add measurement error to all variables. The <code>A</code> values that we actually observe will then be distorted versions of the true <code>A</code> values:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctextrm%7Bobserved%20%7D%20A_i%20=%20%5Ctextrm%7Btrue%20%7D%20A_i%20+%20%5Cvarepsilon_%7BAi%7D.%0A"></p>
<p>The ‘noise’ <img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon_%7BA%7D"> is commonly assumed to be normally distributed:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cvarepsilon_%7BAi%7D%20%5Csim%20%5Ctextrm%7BNormal%7D(0,%20%5Ctau_A).%0A"></p>
<p>That said, you can easily imagine situations where the noise likely has a different distribution. For instance, when measurements are measured to the nearest integer (e.g., body weights in kilograms), the noise is likely uniformly distributed (e.g., a reported body weight of 66 kg means that the true body weight lies between 65.5 and 66.5 kg).</p>
<p>To make the link with the analysis more transparant, I will express the amount of noise in terms of the variables’ reliabilities. For the confound <code>A</code>, I set the reliability at 0.70. Since <code>A</code>’s standard deviation was 1.5 units, this means that the standard deviation of the noise is <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B1.5%5E2%5Cleft(%5Cfrac%7B1%7D%7B0.70%7D%20-%201%5Cright)%7D%20=%200.98"> units. I set the reliability for <code>B</code>, the variable of actual interest at 0.90. Its standard deviation is 0.8, so the standard deviation of the noise is <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B0.8%5E2%5Cleft(%5Cfrac%7B1%7D%7B0.90%7D%20-%201%5Cright)%7D%20=%200.27"> units.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-8_4212a8d1c7d01d4b8e873af9be229807">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add measurement error on A and B</span></span>
<span id="cb7-2">obs_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(sd_A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.70</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reliability 0.70</span></span>
<span id="cb7-3">obs_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> B <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(sd_B<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.90</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reliability 0.90</span></span></code></pre></div>
</div>
<p>The same logic applies to adding measurement noise to <code>Z</code>. The difficulty here lies in obtaining the population standard deviation (or variance) of <code>Z</code>. I don’t want to just plug in <code>Z</code>’s sample standard deviation since I want to have exact knowledge of the population parameters. While we specified a <code>sigma_Z.AB</code> above, this is <em>not</em> the total population standard deviation of <code>Z</code>: it’s the population standard deviation of <code>Z</code> once <code>Z</code> has been controlled for <code>A</code> and <code>B</code>. To obtain the <em>total</em> standard deviation of <code>Z</code> (here admittedly confusingly labelled <img src="https://latex.codecogs.com/png.latex?%5Csigma_Z">), we need to add in the variance in <code>Z</code> due to <code>A</code> and <code>B</code>:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Csigma_Z%20=%20%5Csqrt%7B(%5Cbeta_A%5Csigma_A)%5E2%20+%20(%5Cbeta_B%5Csigma_B)%5E2%20+%202%5Cbeta_A%5Cbeta_B%5Csigma_A%5Csigma_B%5Crho_%7BAB%7D%20+%20%5Csigma_%7BZ.AB%7D%5E2%7D.%0A"></p>
<p>Since <img src="https://latex.codecogs.com/png.latex?%5Cbeta_B%20=%200">, this simplifies to <img src="https://latex.codecogs.com/png.latex?%5Csigma_Z%20=%20%5Csqrt%7B(%5Cbeta_A%5Csigma_A)%5E2%20+%20%5Csigma_%7BZ.AB%7D%5E2%7D">, but if you want to simulate your own datasets, the full formula may be useful.</p>
<p>The population standard deviation of <code>Z</code> is thus <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B(0.7%20%5Ctimes%201.5)%5E2%20+%201.3%5E2%7D%20=%201.67">. Setting <code>Z</code>’s reliability to 0.70, we find that the standard deviation of the noise is <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B1.67%5E2%5Cleft(%5Cfrac%7B1%7D%7B0.70%7D%20-%201%5Cright)%7D%20=%201.09">.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-9_e1204a626b3eecd96247f79a0d28c42e">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Measurement error on Z</span></span>
<span id="cb8-2">sd_Z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>((slope_A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sd_A)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>slope_B)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(slope_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> slope_B <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> latent_covariance_matrix[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sigma_Z.AB<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb8-3">obs_Z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(sd_Z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.70</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reliability 0.70</span></span></code></pre></div>
</div>
<p>Figure 3 shows the causal diagram for the actually observed simulated data.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-10_b394453f322b3f8ca32d86842bf19fbc">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-02-18-measurement-error/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="480"></p>
<figcaption class="figure-caption"><strong>Figure 3.</strong> Graphical causal model for the simulated data. <code>A</code>, <code>B</code> and <code>Z</code> are now unobserved (latent) variables, but so-called ‘descendants’ of them were measured. These reflect their latent constructs imperfectly. Crucially, controlling for <code>obs_A</code> will <em>not</em> entirely control for the confound: the path between <code>obs_B</code> and <code>obs_Z</code> stays open.</figcaption>
</figure>
</div>
</div>
</div>
<p>As Figure 4 shows, the observed variables are all correlated with each other.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-11_fb4953dd85bad18be6321c480436e14f">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scatterplot_matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(obs_Z, obs_A, obs_B))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-02-18-measurement-error/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="figure-caption"><strong>Figure 4.</strong></figcaption>
</figure>
</div>
</div>
</div>
<p>Crucially, controlling for <code>obs_A</code> in a regression model doesn’t entirely eradicate the confound and we find that <code>obs_B</code> is significantly related to <code>obs_Z</code> even after controlling for <code>obs_A</code> (<img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta%7D_%7BB_%7B%5Ctextrm%7Bobs%7D%7D%7D%20=%200.40%20%5Cpm%200.15">). Moreover, the regression model on the observed variables underestimates the strength of the relationship between the true construct scores (<img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta%7D_%7BA_%7B%5Ctextrm%7Bobs%7D%7D%7D%20=%200.40%20%5Cpm%200.07">, whereas <img src="https://latex.codecogs.com/png.latex?%5Cbeta_A%20=%200.7">).</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-12_0be6c3f6d88b3deff0bfbaf6711674a1">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(obs_Z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> obs_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> obs_B))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)    4.498     0.7588    5.93 8.49e-09
obs_A          0.402     0.0737    5.45 1.05e-07
obs_B          0.404     0.1470    2.75 6.41e-03</code></pre>
</div>
</div>
</section>
<section id="statistical-model" class="level3">
<h3 class="anchored" data-anchor-id="statistical-model">Statistical model</h3>
<p>The statistical model, written below in Stan code, corresponds to the data generating mechanism above and tries to infer its parameters from the observed data and some prior information.</p>
<p>The <code>data</code> block specifies the input that the model should handle. I think this is self-explanatory. Note that the latent variable scores <code>A</code>, <code>B</code> and <code>Z</code> aren’t part of the input as we wouldn’t have directly observed these.</p>
<p>The <code>parameters</code> block first defines the parameters needed for the regression model with the unobserved latent variables (the one we used to generate <code>Z</code>). It then defines the parameters needed to generate the true variables scores for <code>A</code> and <code>B</code> as well as the parameters needed to generate the observed scores from the true scores (viz., the true scores themselves and the reliabilities). Note that it is crucial to allow the model to estimate a correlation between <code>A</code> and <code>B</code>, otherwise it won’t ‘know’ that <code>A</code> confounds the <code>B</code>-<code>Z</code> relationship.</p>
<p>The <code>transformed parameters</code> block contains, well, transformations of these parameters. For instance, the standard deviations of <code>A</code> and <code>B</code> and the correlation between <code>A</code> and <code>B</code> are used to generate a variance-covariance matrix. Moreover, the standard deviations of the measurement noise are computed using the latent variables’ standard deviation and their reliabilities.</p>
<p>The <code>model</code> block, finally, specifies how we think the observed data and the (transformed or untransformed) parameters fit together and what plausible a priori values for the (transformed or untransformed) parameters are. These prior distributions are pretty abstract in this example: we generated context-free data ourselves, so it’s not clear what motivates these priors. The real example to follow will hopefully make more sense in this respect. You’ll notice that I’ve also specified a prior for the reliabilities. The reason is that you typically don’t know the reliability of an observed variable with perfect precision but that you have sample estimate with some inherent uncertainty. The priors reflect this uncertainty. Again, this will become clearer in the real example to follow.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-13_f8d94c11b65c3611e99f7dc1cf1b2147">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">meas_error_code <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb12-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">data {</span></span>
<span id="cb12-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Number of observations</span></span>
<span id="cb12-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  int&lt;lower = 1&gt; N;</span></span>
<span id="cb12-5"></span>
<span id="cb12-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Observed outcome</span></span>
<span id="cb12-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] obs_Z;</span></span>
<span id="cb12-8"></span>
<span id="cb12-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Observed predictors</span></span>
<span id="cb12-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] obs_A;</span></span>
<span id="cb12-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] obs_B;</span></span>
<span id="cb12-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-13"></span>
<span id="cb12-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">parameters {</span></span>
<span id="cb12-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Parameters for regression</span></span>
<span id="cb12-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real intercept;</span></span>
<span id="cb12-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_A;</span></span>
<span id="cb12-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_B;</span></span>
<span id="cb12-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma;</span></span>
<span id="cb12-20"></span>
<span id="cb12-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Latent predictors (= constructs):</span></span>
<span id="cb12-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviations and means</span></span>
<span id="cb12-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma_lat_A;</span></span>
<span id="cb12-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma_lat_B;</span></span>
<span id="cb12-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  row_vector[2] latent_means;</span></span>
<span id="cb12-26"></span>
<span id="cb12-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Correlation between latent predictors</span></span>
<span id="cb12-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = -1, upper = 1&gt; latent_rho;</span></span>
<span id="cb12-29"></span>
<span id="cb12-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Latent variables (true scores)</span></span>
<span id="cb12-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  matrix[N, 2] latent_predictors;</span></span>
<span id="cb12-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] lat_Z; // latent outcome</span></span>
<span id="cb12-33"></span>
<span id="cb12-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Unknown but estimated reliabilities</span></span>
<span id="cb12-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0, upper = 1&gt; reliability_A;</span></span>
<span id="cb12-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0, upper = 1&gt; reliability_B;</span></span>
<span id="cb12-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0, upper = 1&gt; reliability_Z;</span></span>
<span id="cb12-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-39"></span>
<span id="cb12-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">transformed parameters {</span></span>
<span id="cb12-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] mu_Z;  // conditional mean of outcome</span></span>
<span id="cb12-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] lat_A; // latent variables, separated out</span></span>
<span id="cb12-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] lat_B;</span></span>
<span id="cb12-44"></span>
<span id="cb12-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real error_A; // standard error of measurement</span></span>
<span id="cb12-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real error_B;</span></span>
<span id="cb12-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real error_Z;</span></span>
<span id="cb12-48"></span>
<span id="cb12-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviations of latent predictors, in matrix form</span></span>
<span id="cb12-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  matrix[2, 2] sigma_lat;</span></span>
<span id="cb12-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // correlation and covariance matrix for latent predictors</span></span>
<span id="cb12-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  cov_matrix[2] latent_cor;</span></span>
<span id="cb12-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  cov_matrix[2] latent_cov;</span></span>
<span id="cb12-54"></span>
<span id="cb12-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviation of latent outcome</span></span>
<span id="cb12-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma_lat_Z;</span></span>
<span id="cb12-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat_Z = sd(lat_Z);</span></span>
<span id="cb12-58"></span>
<span id="cb12-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Express measurement error in terms of</span></span>
<span id="cb12-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviation of constructs and reliability</span></span>
<span id="cb12-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  error_A = sqrt(sigma_lat_A^2*(1/reliability_A - 1));</span></span>
<span id="cb12-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  error_B = sqrt(sigma_lat_B^2*(1/reliability_B - 1));</span></span>
<span id="cb12-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  error_Z = sqrt(sigma_lat_Z^2*(1/reliability_Z - 1));</span></span>
<span id="cb12-64"></span>
<span id="cb12-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Define diagonal matrix with standard errors of latent variables</span></span>
<span id="cb12-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[1, 1] = sigma_lat_A;</span></span>
<span id="cb12-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[2, 2] = sigma_lat_B;</span></span>
<span id="cb12-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[1, 2] = 0;</span></span>
<span id="cb12-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[2, 1] = 0;</span></span>
<span id="cb12-70"></span>
<span id="cb12-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Define correlation matrix for latent variables</span></span>
<span id="cb12-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[1, 1] = 1;</span></span>
<span id="cb12-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[2, 2] = 1;</span></span>
<span id="cb12-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[1, 2] = latent_rho;</span></span>
<span id="cb12-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[2, 1] = latent_rho;</span></span>
<span id="cb12-76"></span>
<span id="cb12-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Compute covariance matrix for latent variables</span></span>
<span id="cb12-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cov = sigma_lat * latent_cor * sigma_lat;</span></span>
<span id="cb12-79"></span>
<span id="cb12-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Extract latent variables from matrix</span></span>
<span id="cb12-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  lat_A = latent_predictors[, 1];</span></span>
<span id="cb12-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  lat_B = latent_predictors[, 2];</span></span>
<span id="cb12-83"></span>
<span id="cb12-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Regression model for conditional mean of Z</span></span>
<span id="cb12-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  mu_Z = intercept + slope_A*lat_A + slope_B*lat_B;</span></span>
<span id="cb12-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-87"></span>
<span id="cb12-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">model {</span></span>
<span id="cb12-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Priors for regression parameters</span></span>
<span id="cb12-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  intercept ~ normal(0, 2);</span></span>
<span id="cb12-91"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_A ~ normal(0, 2);</span></span>
<span id="cb12-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_B ~ normal(0, 2);</span></span>
<span id="cb12-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma ~ normal(0, 2);</span></span>
<span id="cb12-94"></span>
<span id="cb12-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior for latent standard deviations</span></span>
<span id="cb12-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat_A ~ normal(0, 2);</span></span>
<span id="cb12-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat_B ~ normal(0, 2);</span></span>
<span id="cb12-98"></span>
<span id="cb12-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior for latent means</span></span>
<span id="cb12-100"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_means ~ normal(0, 3);</span></span>
<span id="cb12-101"></span>
<span id="cb12-102"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior expectation for correlation between latent variables.</span></span>
<span id="cb12-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Tend towards positive correlation, but pretty vague.</span></span>
<span id="cb12-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_rho ~ normal(0.4, 0.3);</span></span>
<span id="cb12-105"></span>
<span id="cb12-106"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior for reliabilities.</span></span>
<span id="cb12-107"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // These are estimated with some uncertainty, i.e.,</span></span>
<span id="cb12-108"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // they are not point values but distributions.</span></span>
<span id="cb12-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  reliability_A ~ beta(70, 30);</span></span>
<span id="cb12-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  reliability_B ~ beta(90, 10);</span></span>
<span id="cb12-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  reliability_Z ~ beta(70, 30);</span></span>
<span id="cb12-112"></span>
<span id="cb12-113"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Distribution of latent variable</span></span>
<span id="cb12-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  for (i in 1:N) {</span></span>
<span id="cb12-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    latent_predictors[i, ] ~ multi_normal(latent_means, latent_cov);</span></span>
<span id="cb12-116"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  }</span></span>
<span id="cb12-117"></span>
<span id="cb12-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Generate latent outcome</span></span>
<span id="cb12-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  lat_Z ~ normal(mu_Z, sigma);</span></span>
<span id="cb12-120"></span>
<span id="cb12-121"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Add noise to latent variables</span></span>
<span id="cb12-122"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  obs_A ~ normal(lat_A, error_A);</span></span>
<span id="cb12-123"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  obs_B ~ normal(lat_B, error_B);</span></span>
<span id="cb12-124"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  obs_Z ~ normal(lat_Z, error_Z);</span></span>
<span id="cb12-125"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-126"></span>
<span id="cb12-127"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span></code></pre></div>
</div>
<p>Put the data in a list and fit the model:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-14_b44f6b79cb92550bf604a9cb8a2965fb">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">data_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb13-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_Z =</span> obs_Z,</span>
<span id="cb13-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_A =</span> obs_A,</span>
<span id="cb13-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_B =</span> obs_B,</span>
<span id="cb13-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> n</span>
<span id="cb13-6">)</span></code></pre></div>
</div>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-15_884acfdfc62d8766e6e2eb37f0721207">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">meas_error_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_stan_file</span>(meas_error_code))</span>
<span id="cb14-2">model_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meas_error_model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb14-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data_list</span>
<span id="cb14-4">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span></span>
<span id="cb14-5">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb14-6">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb14-7">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter_warmup =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb14-8">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter_sampling =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb14-9">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span></span>
<span id="cb14-10">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_treedepth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span></span>
<span id="cb14-11">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span></span>
<span id="cb14-12">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 4 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 3 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 1 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 2 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 4 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 3 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 finished in 279.7 seconds.
Chain 1 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 finished in 320.0 seconds.
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 finished in 355.9 seconds.
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 369.9 seconds.

All 4 chains finished successfully.
Mean chain execution time: 331.4 seconds.
Total execution time: 370.0 seconds.</code></pre>
</div>
</div>
</section>
<section id="results" class="level3">
<h3 class="anchored" data-anchor-id="results">Results</h3>
<!-- ```{r, echo = FALSE} -->
<!-- meas_error_model <- readRDS("measurement_error_model.rds") -->
<!-- ``` -->
<div class="cell" data-hash="index_cache/html/unnamed-chunk-16_c1d9c62ec754412d1ce0b1faa4d3e81d">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">model_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(</span>
<span id="cb16-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variables =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"intercept"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span></span>
<span id="cb16-3">                ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_lat_A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_lat_B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_lat_Z"</span></span>
<span id="cb16-4">                ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latent_means"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latent_rho"</span></span>
<span id="cb16-5">                , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reliability_A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reliability_B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reliability_Z"</span></span>
<span id="cb16-6">                ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error_A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error_B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error_Z"</span>)</span>
<span id="cb16-7">  , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd"</span></span>
<span id="cb16-8">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extra_quantiles =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>posterior<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile2</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>))</span>
<span id="cb16-9">  , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rhat"</span></span>
<span id="cb16-10">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 16 × 6
   variable          mean     sd   q2.5  q97.5  rhat
   &lt;chr&gt;            &lt;num&gt;  &lt;num&gt;  &lt;num&gt;  &lt;num&gt; &lt;num&gt;
 1 intercept        0.649 1.49   -2.43   3.37   1.02
 2 slope_A          0.866 0.170   0.564  1.22   1.02
 3 slope_B         -0.200 0.254  -0.719  0.265  1.02
 4 sigma            1.17  0.126   0.903  1.40   1.01
 5 sigma_lat_A      1.40  0.0716  1.26   1.54   1.00
 6 sigma_lat_B      0.797 0.0353  0.731  0.869  1.00
 7 sigma_lat_Z      1.59  0.0702  1.45   1.72   1.01
 8 latent_means[1]  3.07  0.0972  2.87   3.26   1.00
 9 latent_means[2] -4.02  0.0486 -4.11  -3.92   1.00
10 latent_rho       0.780 0.0493  0.678  0.871  1.01
11 reliability_A    0.694 0.0408  0.616  0.773  1.02
12 reliability_B    0.901 0.0277  0.843  0.947  1.00
13 reliability_Z    0.699 0.0466  0.600  0.782  1.01
14 error_A          0.925 0.0710  0.785  1.06   1.01
15 error_B          0.262 0.0382  0.191  0.338  1.01
16 error_Z          1.04  0.0872  0.880  1.22   1.01</code></pre>
</div>
</div>
<p>The model recovers the true parameter values pretty well (Table 1) and, on the basis of this model, you wouldn’t erroneously conclude that <code>B</code> is causally related to <code>Z</code> (see the parameter estimate for <code>slope_B</code>).</p>
<table class="table">
<caption><strong>Table 1.</strong> Comparison of the true parameter values and their estimates. Parameters prefixed with ‘*’ are transformations of other parameters. The estimated reliability parameters aren’t really estimated from the data: they just reflect the prior distributions put on them.</caption>
<thead>
<tr class="header">
<th>Parameter</th>
<th style="text-align: right;">True value</th>
<th style="text-align: right;">Estimate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>intercept</td>
<td style="text-align: right;">2.00</td>
<td style="text-align: right;">0.65 ± 1.53</td>
</tr>
<tr class="even">
<td>slope_A</td>
<td style="text-align: right;">0.70</td>
<td style="text-align: right;">0.87 ± 0.17</td>
</tr>
<tr class="odd">
<td>slope_B</td>
<td style="text-align: right;">0.00</td>
<td style="text-align: right;">-0.20 ± 0.25</td>
</tr>
<tr class="even">
<td>sigma_Z.AB</td>
<td style="text-align: right;">1.30</td>
<td style="text-align: right;">1.17 ± 0.13</td>
</tr>
<tr class="odd">
<td>sd_A</td>
<td style="text-align: right;">1.50</td>
<td style="text-align: right;">1.40 ± 0.07</td>
</tr>
<tr class="even">
<td>sd_B</td>
<td style="text-align: right;">0.80</td>
<td style="text-align: right;">0.80 ± 0.04</td>
</tr>
<tr class="odd">
<td>mean_A</td>
<td style="text-align: right;">3.00</td>
<td style="text-align: right;">3.07 ± 0.10</td>
</tr>
<tr class="even">
<td>mean_B</td>
<td style="text-align: right;">-4.00</td>
<td style="text-align: right;">-4.02 ± 0.05</td>
</tr>
<tr class="odd">
<td>rho</td>
<td style="text-align: right;">0.73</td>
<td style="text-align: right;">0.78 ± 0.05</td>
</tr>
<tr class="even">
<td>reliability_A</td>
<td style="text-align: right;">0.70</td>
<td style="text-align: right;">0.69 ± 0.04</td>
</tr>
<tr class="odd">
<td>reliability_B</td>
<td style="text-align: right;">0.90</td>
<td style="text-align: right;">0.90 ± 0.03</td>
</tr>
<tr class="even">
<td>reliability_Z</td>
<td style="text-align: right;">0.70</td>
<td style="text-align: right;">0.70 ± 0.05</td>
</tr>
<tr class="odd">
<td>*sd_Z</td>
<td style="text-align: right;">1.67</td>
<td style="text-align: right;">1.59 ± 0.07</td>
</tr>
<tr class="even">
<td>*error_A</td>
<td style="text-align: right;">0.98</td>
<td style="text-align: right;">0.93 ± 0.07</td>
</tr>
<tr class="odd">
<td>*error_B</td>
<td style="text-align: right;">0.27</td>
<td style="text-align: right;">0.26 ± 0.04</td>
</tr>
<tr class="even">
<td>*error_Z</td>
<td style="text-align: right;">1.09</td>
<td style="text-align: right;">1.04 ± 0.09</td>
</tr>
</tbody>
</table>
<p>In the previous blog post, I’ve shown that such a model also estimates the latent true variable scores and that these estimates correspond more closely to the actual true variable scores than do the observed variable scores. I’ll skip this step here.</p>
</section>
</section>
<section id="real-life-example-interdependence" class="level2">
<h2 class="anchored" data-anchor-id="real-life-example-interdependence">Real-life example: Interdependence</h2>
<p>Satisfied that our model can recover the actual parameter values in scenarios such as those depicted in Figure 3, we now turn to a real-life example of such a situation. The example was already described in the previous blog post; here I’ll just draw the causal model that assumes that reflects the null hypothesis that a child’s Portuguese skills at T2 (<code>PT.T2</code>) don’t contribute to their French skills at T3 (<code>FR.T3</code>), but that due to common factors such as intelligence, form on the day etc. (<img src="https://latex.codecogs.com/png.latex?U">), French skills and Portuguese skills at T2 are correlated across children. What is observed are test scores, not the children’s actual skills.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-17_556140410eca893f52d083a83f709a45">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-02-18-measurement-error/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid figure-img" width="480"></p>
<figcaption class="figure-caption"><strong>Figure 5</strong></figcaption>
</figure>
</div>
</div>
</div>
<section id="data" class="level3">
<h3 class="anchored" data-anchor-id="data">Data</h3>
<p>The command below is pig-ugly, but allows you to easily read in the data.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-18_de47d2c996aa26b09fe62e410487979d">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">skills <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">structure</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb18-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Subject =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_10"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_12"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_13"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_14"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_15"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_16"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_17"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_19"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_11"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_12"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_13"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_10"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_11"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_13"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_14"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_15"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_16"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_17"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_18"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_19"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_20"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_21"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_22"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_24"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_25"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_26"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AE_PLF_1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AE_PLF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AE_PLF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AE_PLF_5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AE_PLF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C_PLF_1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C_PLF_16"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C_PLF_19"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C_PLF_30"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_12"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_15"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_16"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_17"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_18"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_20"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_24"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_25"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_26"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_27"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_28"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_29"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_31"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_32"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_33"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_34"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_36"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_8"</span>)</span>
<span id="cb18-3">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FR_T2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2631578947</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2631578947</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>)</span>
<span id="cb18-4">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PT_T2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2631578947</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0526315789</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>)</span>
<span id="cb18-5">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FR_T3 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2631578947</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>)</span>
<span id="cb18-6">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PT_T3 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2105263158</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>)</span>
<span id="cb18-7">  )</span>
<span id="cb18-8">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>91L)</span>
<span id="cb18-9">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tbl_df"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tbl"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.frame"</span>)</span>
<span id="cb18-10">)</span></code></pre></div>
</div>
</section>
<section id="statistical-model-1" class="level3">
<h3 class="anchored" data-anchor-id="statistical-model-1">Statistical model</h3>
<p>The only thing that’s changed in the statistical model compared to the example with the simulated data is that I’ve renamed the parameters and that the prior distributions are better motivated. Let’s consider each prior distribution in turn:</p>
<ul>
<li><code>intercept ~ normal(0.2, 0.1);</code>: The intercept is the average true French skill score at T3 for children whose true French and Portuguese skill scores at T2 are 0. This is the lowest possible score (the theoretical range of the data is [0, 1]), so we’d expect such children to perform poorly at T3, too. A <code>normal(0.2, 0.1)</code> distribution puts 95% probability on such children having a true French score at T3 between 0 and 0.4.</li>
<li><code>slope_FR ~ normal(0.5, 0.25);</code>: This parameter expresses the difference between the average true French skill score at T3 for children with a true French skill score of 1 at T2 (the theoretical maximum) vs.&nbsp;those with a true French skill score of 0 at T2 (the theoretical minimum). This is obviously some value between -1 and 1, and presumably it’s going to be positive. A <code>normal(0.5, 0.25)</code> puts 95% probability on this difference lying between 0 and 1, which I think is reasonable.</li>
<li><code>slope_PT ~ normal(0, 0.25);</code>: The slope for Portuguese is bound to be smaller than the one for French. Moreover, it’s not a given that it will be appreciably different from zero. Hence a prior centred on 0 that still gives the data a chance to pull the estimate in either direction.</li>
<li><code>sigma ~ normal(0.15, 0.08);</code>: If neither of the T2 variables predicts T3, uncertainty is highest when the mean T3 score is 0.5. Since these scores are bounded between 0 and 1, the standard deviation could not be much higher than 0.20. But French T2 is bound to be a predictor, so let us choose a slightly lower value (0.15).</li>
<li><code>latent_means ~ normal(0.5, 0.1);</code>: These are the prior expectations for the true score means of the T2 variables. 0.5 lies in the middle of the scale; the <code>normal(0.5, 0.1)</code> prior puts 95% probability on these means to lie between 0.3 and 0.7.</li>
<li><code>sigma_lat_FR_T2 ~ normal(0, 0.25);</code>, <code>sigma_lat_FR_T2 ~ normal(0, 0.25);</code>: The standard deviations of the latent T2 variables. If these truncated normal distributions put a 95% probability of the latent standard deviations to be lower than 0.50.</li>
<li><code>latent_rho ~ normal(0.4, 0.3);</code>: The a priori expected correlation between the latent variables <code>A</code> and <code>B</code>. These are bound to be positively correlated.</li>
<li><code>reliability_FR_T2 ~ beta(100, 100*0.27/0.73);</code> The prior distribution for the reliability of the French T2 variable. Cronbach’s <img src="https://latex.codecogs.com/png.latex?%5Calpha"> for this variable was 0.73 (95% CI: [0.65, 0.78]). This roughly corresponds to a <code>beta(100, 100*0.27/0.73)</code> distribution:</li>
</ul>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-19_1ab8e90670e4a8d46e58bb1deabf6c73">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qbeta</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.27</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.73</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.6529105 0.8007296</code></pre>
</div>
</div>
<ul>
<li><code>reliability_PT_T2 ~ beta(120, 120*0.21/0.79);</code> Similarly, Cronbach’s <img src="https://latex.codecogs.com/png.latex?%5Calpha"> for the Portuguese T2 variable was 0.79 (95% CI: [0.72, 0.84]), which roughly corresponds to a <code>beta(120, 120*0.21/0.79)</code> distribution:</li>
</ul>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-20_bad62dcd138c83049f5c0685491e1036">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qbeta</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.21</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.79</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.7219901 0.8507814</code></pre>
</div>
</div>
<ul>
<li><code>reliability_FR_T3 ~ beta(73, 27);</code>: The estimated reliability for the French T3 data was similar to that of the T2 data, so I used the same prior.</li>
</ul>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-21_332e3f14c9513161a8b4f9958e16100b">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">interdependence_code <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb23-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">data {</span></span>
<span id="cb23-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Number of observations</span></span>
<span id="cb23-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  int&lt;lower = 1&gt; N;</span></span>
<span id="cb23-5"></span>
<span id="cb23-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Observed outcome</span></span>
<span id="cb23-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] FR_T3;</span></span>
<span id="cb23-8"></span>
<span id="cb23-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Observed predictors</span></span>
<span id="cb23-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] FR_T2;</span></span>
<span id="cb23-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] PT_T2;</span></span>
<span id="cb23-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-13"></span>
<span id="cb23-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">parameters {</span></span>
<span id="cb23-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Parameters for regression</span></span>
<span id="cb23-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real intercept;</span></span>
<span id="cb23-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_FR;</span></span>
<span id="cb23-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_PT;</span></span>
<span id="cb23-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma;</span></span>
<span id="cb23-20"></span>
<span id="cb23-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviations of latent predictors (= constructs)</span></span>
<span id="cb23-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma_lat_FR_T2;</span></span>
<span id="cb23-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma_lat_PT_T2;</span></span>
<span id="cb23-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb23-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Means of latent predictors</span></span>
<span id="cb23-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  row_vector[2] latent_means;</span></span>
<span id="cb23-27"></span>
<span id="cb23-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Unknown correlation between latent predictors</span></span>
<span id="cb23-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = -1, upper = 1&gt; latent_rho;</span></span>
<span id="cb23-30"></span>
<span id="cb23-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Latent variables</span></span>
<span id="cb23-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  matrix[N, 2] latent_predictors;</span></span>
<span id="cb23-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] lat_FR_T3; // latent outcome</span></span>
<span id="cb23-34"></span>
<span id="cb23-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Unknown but estimated reliabilities</span></span>
<span id="cb23-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0, upper = 1&gt; reliability_FR_T2;</span></span>
<span id="cb23-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0, upper = 1&gt; reliability_PT_T2;</span></span>
<span id="cb23-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0, upper = 1&gt; reliability_FR_T3;</span></span>
<span id="cb23-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-40"></span>
<span id="cb23-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">transformed parameters {</span></span>
<span id="cb23-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] mu_FR_T3;  // conditional mean of outcome</span></span>
<span id="cb23-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] lat_FR_T2; // latent variables, separated out</span></span>
<span id="cb23-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] lat_PT_T2;</span></span>
<span id="cb23-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real error_FR_T2; // standard error of measurement</span></span>
<span id="cb23-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real error_PT_T2;</span></span>
<span id="cb23-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real error_FR_T3;</span></span>
<span id="cb23-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb23-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviations of latent predictors, in matrix form</span></span>
<span id="cb23-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  matrix[2, 2] sigma_lat;</span></span>
<span id="cb23-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb23-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // correlation and covariance matrix for latent predictors</span></span>
<span id="cb23-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  cov_matrix[2] latent_cor;</span></span>
<span id="cb23-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  cov_matrix[2] latent_cov;</span></span>
<span id="cb23-55"></span>
<span id="cb23-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviation of latent outcome</span></span>
<span id="cb23-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma_lat_FR_T3;</span></span>
<span id="cb23-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat_FR_T3 = sd(lat_FR_T3);</span></span>
<span id="cb23-59"></span>
<span id="cb23-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Express measurement error in terms of</span></span>
<span id="cb23-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviation of constructs and reliability</span></span>
<span id="cb23-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  error_FR_T2 = sqrt(sigma_lat_FR_T2^2*(1/reliability_FR_T2 - 1));</span></span>
<span id="cb23-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  error_PT_T2 = sqrt(sigma_lat_PT_T2^2*(1/reliability_PT_T2 - 1));</span></span>
<span id="cb23-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  error_FR_T3 = sqrt(sigma_lat_FR_T3^2*(1/reliability_FR_T3 - 1));</span></span>
<span id="cb23-65"></span>
<span id="cb23-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Define diagonal matrix with standard errors of latent variables</span></span>
<span id="cb23-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[1, 1] = sigma_lat_FR_T2;</span></span>
<span id="cb23-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[2, 2] = sigma_lat_PT_T2;</span></span>
<span id="cb23-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[1, 2] = 0;</span></span>
<span id="cb23-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[2, 1] = 0;</span></span>
<span id="cb23-71"></span>
<span id="cb23-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Define correlation matrix for latent variables</span></span>
<span id="cb23-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[1, 1] = 1;</span></span>
<span id="cb23-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[2, 2] = 1;</span></span>
<span id="cb23-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[1, 2] = latent_rho;</span></span>
<span id="cb23-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[2, 1] = latent_rho;</span></span>
<span id="cb23-77"></span>
<span id="cb23-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Compute covariance matrix for latent variables</span></span>
<span id="cb23-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cov = sigma_lat * latent_cor * sigma_lat;</span></span>
<span id="cb23-80"></span>
<span id="cb23-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Extract latent variables from matrix</span></span>
<span id="cb23-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  lat_FR_T2 = latent_predictors[, 1];</span></span>
<span id="cb23-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  lat_PT_T2 = latent_predictors[, 2];</span></span>
<span id="cb23-84"></span>
<span id="cb23-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Regression model for conditional mean of Z</span></span>
<span id="cb23-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  mu_FR_T3 = intercept + slope_FR*lat_FR_T2 + slope_PT*lat_PT_T2;</span></span>
<span id="cb23-87"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-88"></span>
<span id="cb23-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">model { </span></span>
<span id="cb23-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Priors for regression parameters </span></span>
<span id="cb23-91"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  intercept ~ normal(0.2, 0.1); </span></span>
<span id="cb23-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_FR ~ normal(0.5, 0.25); </span></span>
<span id="cb23-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_PT ~ normal(0, 0.25); </span></span>
<span id="cb23-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma ~ normal(0.15, 0.08); </span></span>
<span id="cb23-95"></span>
<span id="cb23-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior for latent means </span></span>
<span id="cb23-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_means ~ normal(0.5, 0.1); </span></span>
<span id="cb23-98"></span>
<span id="cb23-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior for latent standard deviations </span></span>
<span id="cb23-100"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat_FR_T2 ~ normal(0, 0.25); </span></span>
<span id="cb23-101"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat_PT_T2 ~ normal(0, 0.25); </span></span>
<span id="cb23-102"></span>
<span id="cb23-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior expectation for correlation between latent variables. </span></span>
<span id="cb23-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_rho ~ normal(0.4, 0.3); </span></span>
<span id="cb23-105"></span>
<span id="cb23-106"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior for reliabilities. </span></span>
<span id="cb23-107"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // These are estimated with some uncertainty, i.e., </span></span>
<span id="cb23-108"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // they are not point values but distributions. </span></span>
<span id="cb23-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  reliability_FR_T2 ~ beta(100, 100*0.27/0.73); </span></span>
<span id="cb23-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  reliability_PT_T2 ~ beta(120, 120*0.21/0.79); </span></span>
<span id="cb23-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  reliability_FR_T3 ~ beta(100, 100*0.27/0.73); </span></span>
<span id="cb23-112"></span>
<span id="cb23-113"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Distribution of latent variable </span></span>
<span id="cb23-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  for (i in 1:N) { </span></span>
<span id="cb23-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    latent_predictors[i, ] ~ multi_normal(latent_means, latent_cov); </span></span>
<span id="cb23-116"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  } </span></span>
<span id="cb23-117"></span>
<span id="cb23-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Generate latent outcome </span></span>
<span id="cb23-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  lat_FR_T3 ~ normal(mu_FR_T3, sigma); </span></span>
<span id="cb23-120"></span>
<span id="cb23-121"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Measurement model </span></span>
<span id="cb23-122"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  FR_T2 ~ normal(lat_FR_T2, error_FR_T2); </span></span>
<span id="cb23-123"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  PT_T2 ~ normal(lat_PT_T2, error_PT_T2); </span></span>
<span id="cb23-124"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  FR_T3 ~ normal(lat_FR_T3, error_FR_T3); </span></span>
<span id="cb23-125"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">} </span></span>
<span id="cb23-126"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> </span></code></pre></div>
</div>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-22_9939ad75b648d9184c2f4d595cdd3aef">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">data_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb24-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FR_T2 =</span> skills<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T2,</span>
<span id="cb24-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PT_T2 =</span> skills<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>PT_T2,</span>
<span id="cb24-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FR_T3 =</span> skills<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T3,</span>
<span id="cb24-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(skills<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T3)</span>
<span id="cb24-6">)</span>
<span id="cb24-7"></span>
<span id="cb24-8">interdependence_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_stan_file</span>(interdependence_code))</span>
<span id="cb24-9">interdependence_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> interdependence_model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb24-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data_list</span>
<span id="cb24-11">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb24-12">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb24-13">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb24-14">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter_warmup =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span></span>
<span id="cb24-15">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter_sampling =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6000</span></span>
<span id="cb24-16">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb24-17">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_treedepth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span></span>
<span id="cb24-18">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9999</span></span>
<span id="cb24-19">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 Iteration:    1 / 8000 [  0%]  (Warmup) 
Chain 2 Iteration:    1 / 8000 [  0%]  (Warmup) 
Chain 3 Iteration:    1 / 8000 [  0%]  (Warmup) 
Chain 4 Iteration:    1 / 8000 [  0%]  (Warmup) 
Chain 1 Iteration: 1000 / 8000 [ 12%]  (Warmup) 
Chain 4 Iteration: 1000 / 8000 [ 12%]  (Warmup) 
Chain 2 Iteration: 1000 / 8000 [ 12%]  (Warmup) 
Chain 3 Iteration: 1000 / 8000 [ 12%]  (Warmup) 
Chain 1 Iteration: 2000 / 8000 [ 25%]  (Warmup) 
Chain 1 Iteration: 2001 / 8000 [ 25%]  (Sampling) 
Chain 4 Iteration: 2000 / 8000 [ 25%]  (Warmup) 
Chain 4 Iteration: 2001 / 8000 [ 25%]  (Sampling) 
Chain 2 Iteration: 2000 / 8000 [ 25%]  (Warmup) 
Chain 2 Iteration: 2001 / 8000 [ 25%]  (Sampling) 
Chain 3 Iteration: 2000 / 8000 [ 25%]  (Warmup) 
Chain 3 Iteration: 2001 / 8000 [ 25%]  (Sampling) 
Chain 1 Iteration: 3000 / 8000 [ 37%]  (Sampling) 
Chain 4 Iteration: 3000 / 8000 [ 37%]  (Sampling) 
Chain 1 Iteration: 4000 / 8000 [ 50%]  (Sampling) 
Chain 4 Iteration: 4000 / 8000 [ 50%]  (Sampling) 
Chain 2 Iteration: 3000 / 8000 [ 37%]  (Sampling) 
Chain 1 Iteration: 5000 / 8000 [ 62%]  (Sampling) 
Chain 4 Iteration: 5000 / 8000 [ 62%]  (Sampling) 
Chain 4 Iteration: 6000 / 8000 [ 75%]  (Sampling) 
Chain 1 Iteration: 6000 / 8000 [ 75%]  (Sampling) 
Chain 2 Iteration: 4000 / 8000 [ 50%]  (Sampling) 
Chain 3 Iteration: 3000 / 8000 [ 37%]  (Sampling) 
Chain 4 Iteration: 7000 / 8000 [ 87%]  (Sampling) 
Chain 1 Iteration: 7000 / 8000 [ 87%]  (Sampling) 
Chain 4 Iteration: 8000 / 8000 [100%]  (Sampling) 
Chain 4 finished in 261.0 seconds.
Chain 1 Iteration: 8000 / 8000 [100%]  (Sampling) 
Chain 1 finished in 271.4 seconds.
Chain 2 Iteration: 5000 / 8000 [ 62%]  (Sampling) 
Chain 2 Iteration: 6000 / 8000 [ 75%]  (Sampling) 
Chain 3 Iteration: 4000 / 8000 [ 50%]  (Sampling) 
Chain 2 Iteration: 7000 / 8000 [ 87%]  (Sampling) 
Chain 2 Iteration: 8000 / 8000 [100%]  (Sampling) 
Chain 2 finished in 384.6 seconds.
Chain 3 Iteration: 5000 / 8000 [ 62%]  (Sampling) 
Chain 3 Iteration: 6000 / 8000 [ 75%]  (Sampling) 
Chain 3 Iteration: 7000 / 8000 [ 87%]  (Sampling) 
Chain 3 Iteration: 8000 / 8000 [100%]  (Sampling) 
Chain 3 finished in 656.3 seconds.

All 4 chains finished successfully.
Mean chain execution time: 393.3 seconds.
Total execution time: 656.4 seconds.</code></pre>
</div>
</div>
</section>
<section id="results-1" class="level3">
<h3 class="anchored" data-anchor-id="results-1">Results</h3>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-23_01ed6dc0d500fa8a17ee0d6a570a86e3">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">interdependence_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(</span>
<span id="cb26-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variables =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"intercept"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_FR"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_PT"</span></span>
<span id="cb26-3">                , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latent_rho"</span>)</span>
<span id="cb26-4">  , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd"</span></span>
<span id="cb26-5">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extra_quantiles =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>posterior<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile2</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>))</span>
<span id="cb26-6">  , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rhat"</span></span>
<span id="cb26-7">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 5 × 6
  variable     mean     sd    q2.5 q97.5  rhat
  &lt;chr&gt;       &lt;num&gt;  &lt;num&gt;   &lt;num&gt; &lt;num&gt; &lt;num&gt;
1 intercept  0.189  0.0529  0.0848 0.293  1.00
2 slope_FR   0.712  0.154   0.407  1.01   1.00
3 slope_PT   0.107  0.138  -0.165  0.378  1.00
4 sigma      0.0721 0.0182  0.0331 0.106  1.00
5 latent_rho 0.812  0.0781  0.646  0.950  1.00</code></pre>
</div>
</div>
<p>Unsurprisingly, the model confidently finds a link between French skills at T2 and at T3, even on the level of the unobserved true scores (<img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta%7D_%7B%5Ctextrm%7BFrench%7D%7D%20=%200.71%20%5Cpm%200.15">). But more importantly, the evidence for an additional effect of Portuguese skills at T2 on French skills at T3 is flimsy (<img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Cbeta%7D_%7B%5Ctextrm%7BPortuguese%7D%7D%20=%200.11%20%5Cpm%200.14">). The latent T2 variables are estimated to correlate strongly at <img src="https://latex.codecogs.com/png.latex?%5Cwidehat%7B%5Crho%7D%20=%200.81%20%5Cpm%200.08">. These results don’t change much when a flat prior on <img src="https://latex.codecogs.com/png.latex?%5Crho"> is specified (this can be accomplished by not specifying any prior at all for <img src="https://latex.codecogs.com/png.latex?%5Crho">). Compared to the model in the previous blog post (Table 2), little has changed. The only appreciable difference is that the estimate for <code>sigma</code> is lower. The reason is that, unlike the previous model, the current model partitions the variance in the French T3 scores into true score variance and measurement error variance. In this model, <code>sigma</code> captures the true score variance that isn’t accounted for by T2 skills, whereas in the previous model, <code>sigma</code> captured the <em>total</em> variance that wasn’t accounted for by T2 skills. But other than that, the current model doesn’t represent a huge change from the previous one.</p>
<table class="table">
<caption><strong>Table 2.</strong> Comparison of parameter estimates between the model fitted in this blog post and the model fitted in the previous one. In the previous model, the outcome was assumed to be perfectly reliable.</caption>
<thead>
<tr class="header">
<th>Parameter</th>
<th style="text-align: right;">Current estimate</th>
<th style="text-align: right;">Previous estimate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>intercept</td>
<td style="text-align: right;">0.19 ± 0.05</td>
<td style="text-align: right;">0.19 ± 0.05</td>
</tr>
<tr class="even">
<td>slope_FR</td>
<td style="text-align: right;">0.71 ± 0.15</td>
<td style="text-align: right;">0.71 ± 0.16</td>
</tr>
<tr class="odd">
<td>slope_PT</td>
<td style="text-align: right;">0.11 ± 0.14</td>
<td style="text-align: right;">0.10 ± 0.14</td>
</tr>
<tr class="even">
<td>sigma</td>
<td style="text-align: right;">0.07 ± 0.02</td>
<td style="text-align: right;">0.12 ± 0.01</td>
</tr>
<tr class="odd">
<td>latent_rho</td>
<td style="text-align: right;">0.81 ± 0.08</td>
<td style="text-align: right;">0.81 ± 0.08</td>
</tr>
</tbody>
</table>
<p>A couple of things still remain to be done. First, the French test at T3 was the same as the one at T2 so it’s likely that the measurement errors on both scores won’t be completely independent of one another. I’d like to find out how correlated measurement errors affect the parameter estimates. Second, I’d like to get started with prior and posterior predictive checks: the former to check if the priors give rise to largely possible data patterns, and the latter to check if the full model tends to generate data sets similar to the one actually observed.</p>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Berthele, Raphael and Jan Vanhove. 2017. <a href="https://doi.org/10.1080/13670050.2017.1385590">What would disprove interdependence? Lessons learned from a study on biliteracy in Portuguese heritage language speakers in Switzerland.</a> <em>International Journal of Bilingual Education and Bilingualism</em>.</p>
<p>Brunner, Jerry and Peter C. Austin. 2009. <a href="https://doi.org/10.1002/cjs.10004">Inflation of Type I error rate in multiple regression when independent variables are measured with error.</a> <em>Canadian Journal of Statistics</em> 37(1). 33–46.</p>
<p>Westfall, Jacob and Tal Yarkoni. 2016. <a href="https://doi.org/10.1371/journal.pone.0152719">Statistically controlling for confounding constructs is harder than you think.</a>. <em>PLOS ONE</em> 11(3). e0152719.</p>
</section>
<section id="software-versions" class="level2">
<h2 class="anchored" data-anchor-id="software-versions">Software versions</h2>
<p>Please note that I reran the code on this page on August 6, 2023.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-24_add61e05ab5fb3b39e0f8d97d115fa4a">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.2 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-06
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package        * version date (UTC) lib source
 abind            1.4-5   2016-07-21 [1] CRAN (R 4.3.1)
 backports        1.4.1   2021-12-13 [1] CRAN (R 4.3.0)
 boot             1.3-28  2021-05-03 [4] CRAN (R 4.2.0)
 cachem           1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr            3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 checkmate        2.2.0   2023-04-27 [1] CRAN (R 4.3.1)
 cli              3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 cmdstanr       * 0.6.0   2023-08-02 [1] local
 colorspace       2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 crayon           1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 curl             5.0.1   2023-06-07 [1] CRAN (R 4.3.1)
 dagitty        * 0.3-1   2021-01-21 [1] CRAN (R 4.3.1)
 devtools         2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest           0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 distributional   0.3.2   2023-03-22 [1] CRAN (R 4.3.1)
 dplyr            1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 ellipsis         0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate         0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi            1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 farver           2.1.1   2022-07-06 [1] CRAN (R 4.3.0)
 fastmap          1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 fs               1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics         0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2          3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue             1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gtable           0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools        0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets      1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv           1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 jsonlite         1.8.7   2023-06-29 [1] CRAN (R 4.3.1)
 knitr            1.39    2022-04-26 [2] CRAN (R 4.2.0)
 later            1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lifecycle        1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 magrittr         2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 MASS             7.3-60  2023-05-04 [4] CRAN (R 4.3.1)
 memoise          2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mime             0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI           0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 munsell          0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 pillar           1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild         1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig        2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload          1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 posterior      * 1.4.1   2023-03-14 [1] CRAN (R 4.3.1)
 prettyunits      1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx         3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis          0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises         1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps               1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr            1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6               2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 Rcpp             1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 remotes          2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 rlang            1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown        2.21    2023-03-26 [1] CRAN (R 4.3.0)
 rstudioapi       0.14    2022-08-22 [1] CRAN (R 4.3.0)
 scales           1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo      1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shiny            1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 stringi          1.7.12  2023-01-11 [1] CRAN (R 4.3.1)
 stringr          1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 tensorA          0.36.2  2020-11-19 [1] CRAN (R 4.3.1)
 tibble           3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyselect       1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 urlchecker       1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis          2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8             1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 V8               4.3.0   2023-04-08 [1] CRAN (R 4.3.0)
 vctrs            0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 xfun             0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xtable           1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 yaml             2.3.5   2022-02-21 [2] CRAN (R 4.2.0)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Stan</category>
  <category>Bayesian statistics</category>
  <category>measurement error</category>
  <category>correlational studies</category>
  <category>reliability</category>
  <guid>https://janhove.github.io/posts/2020-02-18-measurement-error/index.html</guid>
  <pubDate>Mon, 17 Feb 2020 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Baby steps in Bayes: Accounting for measurement error on a control variable</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2020-01-21-statistical-control-measurement-error/index.html</link>
  <description><![CDATA[ 



<p>In observational studies, it is customary to account for confounding variables by including measurements of them in the statistical model. This practice is referred to as <em>statistically controlling</em> for the confounding variables. An underappreciated problem is that if the confounding variables were measured imperfectly, then statistical control will be imperfect as well, and the confound won’t be eradicated entirely (see Berthele &amp; Vanhove 2017; Brunner &amp; Austin 2009; Westfall &amp; Yarkoni 2016) (see also <a href="../2015-08-24-caveats-confounds-correlational-designs"><em>Controlling for confounding variables in correlational research: Four caveats</em></a>).</p>
<p>This blog post details my efforts to specify a Bayesian model in which the measurement error on the confounding variable was taken into account. The ultimate aim was to obtain more honest estimates of the impact of the confounding variable and the variable of actual interest on the outcome. First, I’ll discuss a simulated example to demonstrate the consequences of measurement error on statistical control and what a model needs to do to appropriately take measurement error into account. Then I apply the insights gained on a real-life study in applied linguistics.</p>
<p>I will preface all of this with the disclaimer that I don’t consider myself an expert in the techniques discussed below; one reason for writing this blog is to solicit feedback from readers more knowledgeable than I am.</p>
<section id="preliminaries" class="level2">
<h2 class="anchored" data-anchor-id="preliminaries">Preliminaries</h2>
<p><strong>Update (2023-08-06):</strong> When converting this blog from Jekyll/Bootstrap to Quarto, I noticed that the original code used in this blog post, which involved the R package <code>rstan</code> has started to run very slowly. In the present version, I use <code>cmdstanr</code> instead.</p>
<p>If you want to follow along, you need the following R packages/settings:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for fitting Bayesian models, v. 2.32.2</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(posterior) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for working with posterior distributions</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For drawing scatterplot matrices</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://janhove.github.io/RCode/scatterplot_matrix.R"</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set random seed for reproducibility</span></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020-01-21</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kind =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mersenne-Twister"</span>)</span></code></pre></div>
</div>
<p>You’ll also need the <code>MASS</code> package, but you don’t need to load it.</p>
</section>
<section id="demonstration-measurement-error-messes-up-statistical-control" class="level2">
<h2 class="anchored" data-anchor-id="demonstration-measurement-error-messes-up-statistical-control">Demonstration: Measurement error messes up statistical control</h2>
<p>Let’s first illustrate the problem that measurement error causes for statistical control using simulated data. That way, we know what goes into the data and what we hope a model should take out of it.</p>
<p>The scenario I want to focus on is the following. You are pretty sure that a given construct <code>A</code> causally affects a variable <code>Z</code>. You are, however, interested in finding out if another construct <code>B</code> also affects <code>Z</code>. You can’t manipulate any of the variables, so you have to make do with an observational study. Unfortunately, <code>A</code> and <code>B</code> are likely to be correlated. Let’s simulate some data to make this more concrete:</p>
<ul>
<li>500 datapoints (<code>n</code>)</li>
<li>Constructs <code>A</code> and <code>B</code> are correlated at <img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.73">.</li>
<li>Constructs <code>A</code> and <code>B</code> are normally distributed with standard deviations of 1.5 (<code>sd_A</code>) and 0.8 (<code>sd_B</code>), respectively. The means of these normal distributions are 3 and -4, respectively.</li>
</ul>
<p>The numbers in the list above aren’t special; I just wanted to make sure the model I will specify further down below isn’t restricted to assuming that the constructs are distributed normally with mean 0 and standard deviation 1.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate correlated constructs</span></span>
<span id="cb2-2">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span></span>
<span id="cb2-3">rho <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.73</span></span>
<span id="cb2-4">sd_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span></span>
<span id="cb2-5">sd_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Given the correlation and the standard deviations,</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># construct the covariance matrix for the constructs like so:</span></span>
<span id="cb2-9">latent_covariance_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(sd_A, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sd_B)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> </span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rho), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(rho, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> </span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(sd_A, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sd_B))</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw data from the multivariate normal distribution:</span></span>
<span id="cb2-14">constructs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> MASS<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mvrnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb2-15">                            , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Sigma =</span> latent_covariance_matrix)</span>
<span id="cb2-16">A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> constructs[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb2-17">B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> constructs[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span></code></pre></div>
</div>
<p>For the purposes of this simulation, I’ll generate data for <code>Z</code> that are affected by <code>A</code> but not by <code>B</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A influences Z, B doesn't</span></span>
<span id="cb3-2">Z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>)</span></code></pre></div>
</div>
<p>As <strong>Figure 1</strong> shows, <code>B</code> and <code>Z</code> are correlated, even though neither influences the other. This is because of their link with <code>A</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scatterplot_matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(Z, A, B))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-01-21-statistical-control-measurement-error/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="576"></p>
<figcaption class="figure-caption"><strong>Figure 1.</strong> Even though variable <code>Z</code> isn’t causally affected by construct <code>B</code>, there exists a considerable correlation between <code>B</code> and <code>Z</code>. This correlation exists because <code>Z</code> is causally affected by construct <code>A</code>, which is correlated with <code>B</code>.</figcaption>
</figure>
</div>
</div>
</div>
<p>In situations such as these, researchers typically include both <code>A</code> and <code>B</code> as predictors in a model with <code>Z</code> as the outcome. And this works: we find a significant relationship between <code>A</code> and <code>Z</code>, but not between <code>B</code> and <code>Z</code>. Moreover, all estimated parameters are in the vicinity of their true values, as specified in the simulation.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> B))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)    2.881     0.5439    5.30 1.78e-07
A              0.609     0.0546   11.14 6.93e-26
B              0.146     0.1025    1.43 1.54e-01</code></pre>
</div>
</div>
<p>But in real life, the situation is more complicated. When researchers “statistically control” for a possible confound, they’re usually interested in controlling for the confounding <em>construct</em> rather than for any one <em>measurement</em> of this construct. For instance, when teasing apart the influences of L2 vocabulary knowledge and L2 morphosyntactic knowledge on L2 speaking fluency, researchers don’t actually want to control for the learners performance on this or that vocabulary test: they want to control for L2 vocabulary knowledge itself. One would hope that the vocabulary test gives a good indication of the learners’ vocabulary knowledge, but it’s understood that their performance will be affected by other factors as well (e.g., form on the day, luck with guessing, luck with the words occurring in the test etc.).</p>
<p>So let’s add some noise (measurement error) to constructs <code>A</code> and <code>B</code>. Here I express the measurement error in terms of the reliability of the instruments used to measure the constructs: If <img src="https://latex.codecogs.com/png.latex?%5Csigma_A"> is the standard deviation of the unobserved construct scores and <img src="https://latex.codecogs.com/png.latex?r_%7BAA'%7D"> is the reliability of the measurement instrument, then the standard deviation of the measurement error is <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B%5Cfrac%7B%5Csigma_A%5E2%7D%7Br_%7BAA'%7D%7D%20-%20%5Csigma_A%5E2%7D">. For the purposes of this demonstration, I’m going to specify that construct <code>A</code> was measured with ‘okay’ reliability (0.70), whereas construct <code>B</code> was measured with exceptional reliability (0.95):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">obs_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(sd_A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.70</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> sd_A<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb7-2">obs_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> B <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(sd_B<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> sd_B<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
</div>
<p>Crucially, if we include the observed values <code>obs_A</code> and <code>obs_B</code> as predictors in a model with <code>Z</code> as the outcome, we find that the parameter for <code>obs_B</code> is significant—even though there is no causal link between <code>B</code> and <code>Z</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> obs_A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> obs_B))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)    4.842     0.4557   10.63 6.68e-24
obs_A          0.364     0.0418    8.71 4.36e-17
obs_B          0.456     0.0911    5.01 7.66e-07</code></pre>
</div>
</div>
<p>Descriptively, this is perfectly fine: You do indeed now know more about <code>Z</code> if you take into account <code>obs_B</code> in addition to <code>obs_A</code>. But you take this to interpret that the <em>construct</em> of <code>B</code> can explain variation in <code>Z</code> over and beyond that which can be explained by the construct of <code>A</code>, this would be a mistake.</p>
<p>Conceptually, what has happened is that since <code>obs_A</code> imperfectly reflects construct <code>A</code>, including <code>obs_A</code> in the model control for construct <code>A</code> imperfectly.</p>
</section>
<section id="fitting-a-model-that-takes-measurement-into-account" class="level2">
<h2 class="anchored" data-anchor-id="fitting-a-model-that-takes-measurement-into-account">Fitting a model that takes measurement into account</h2>
<p>Below is the Stan code I used for fitting the simulated data. The model takes as its input the three observed variables (<code>obs_A</code>, <code>obs_B</code> and <code>Z</code>). Information about the reliability of <code>obs_A</code> and <code>obs_B</code> is also provided in the form of a prior distribution on <code>reliability_A</code> and <code>reliability_B</code>. Specifically, it’s assumed that the reliability coefficient for <code>obs_A</code> is drawn from a <code>beta(30, 10)</code>-distribution. This assigns a 95% probability to the reliability coefficient lying between roughly 0.61 and 0.87. <code>obs_B</code> is assumed to be measured more reliably, as encoded by a <code>beta(95, 5)</code>-distribution, which assigns a 95% probability to the reliability coefficient lying between 0.90 and 0.98.</p>
<p>Importantly, as I <a href="https://homeweb.unifr.ch/VanhoveJ/Pub/statistical_control.html">noted</a> in some earlier explorations, the model has to take into account the possibility that the constructs of <code>A</code> and <code>B</code> are correlated. I specified a prior vaguely expecting a positive correlation but that wouldn’t find correlations close to or below zero to be too surprising either. Priors on the other parameters are pretty vague; I find it difficult to come up with reasonable priors in context-free examples.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">meas_error_code <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb10-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">data { </span></span>
<span id="cb10-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Number of observations</span></span>
<span id="cb10-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  int&lt;lower = 1&gt; N;      </span></span>
<span id="cb10-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Observed outcome</span></span>
<span id="cb10-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] Z;         </span></span>
<span id="cb10-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Observed predictors</span></span>
<span id="cb10-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] obs_A;</span></span>
<span id="cb10-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] obs_B;</span></span>
<span id="cb10-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">parameters {</span></span>
<span id="cb10-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Parameters for regression</span></span>
<span id="cb10-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real intercept;  </span></span>
<span id="cb10-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_A;</span></span>
<span id="cb10-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_B;</span></span>
<span id="cb10-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma; </span></span>
<span id="cb10-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviations of latent variables (= constructs)</span></span>
<span id="cb10-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma_lat_A; </span></span>
<span id="cb10-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma_lat_B;</span></span>
<span id="cb10-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Unknown but estimated reliabilities</span></span>
<span id="cb10-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0, upper = 1&gt; reliability_A;</span></span>
<span id="cb10-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0, upper = 1&gt; reliability_B;</span></span>
<span id="cb10-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Means of latent predictors</span></span>
<span id="cb10-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  row_vector[2] latent_means;</span></span>
<span id="cb10-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Unknown correlation between latent predictors</span></span>
<span id="cb10-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = -1, upper = 1&gt; latent_rho;</span></span>
<span id="cb10-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Latent variables</span></span>
<span id="cb10-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  matrix[N, 2] latent_variables;</span></span>
<span id="cb10-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">} </span></span>
<span id="cb10-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">transformed parameters {</span></span>
<span id="cb10-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] mu_Z;  // conditional mean of outcome</span></span>
<span id="cb10-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] lat_A; // latent variables, separated out</span></span>
<span id="cb10-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] lat_B;</span></span>
<span id="cb10-39"></span>
<span id="cb10-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real error_A; // standard error of measurement</span></span>
<span id="cb10-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real error_B;</span></span>
<span id="cb10-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb10-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviations of latent variables, in matrix form</span></span>
<span id="cb10-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  matrix[2, 2] sigma_lat; </span></span>
<span id="cb10-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // correlation and covariance matrix for latent variables </span></span>
<span id="cb10-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  cov_matrix[2] latent_cor; </span></span>
<span id="cb10-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  cov_matrix[2] latent_cov;</span></span>
<span id="cb10-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Standardised slopes for A and B</span></span>
<span id="cb10-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_A_std;</span></span>
<span id="cb10-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_B_std;</span></span>
<span id="cb10-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Express measurement error in terms of </span></span>
<span id="cb10-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviation of constructs and reliability</span></span>
<span id="cb10-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  error_A = sqrt(sigma_lat_A^2/reliability_A - sigma_lat_A^2);</span></span>
<span id="cb10-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  error_B = sqrt(sigma_lat_B^2/reliability_B - sigma_lat_B^2);</span></span>
<span id="cb10-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Define diagonal matrix with standard errors of latent variables</span></span>
<span id="cb10-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[1, 1] = sigma_lat_A;</span></span>
<span id="cb10-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[2, 2] = sigma_lat_B;</span></span>
<span id="cb10-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[1, 2] = 0;</span></span>
<span id="cb10-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[2, 1] = 0;</span></span>
<span id="cb10-63"></span>
<span id="cb10-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Define correlation matrix for latent variables</span></span>
<span id="cb10-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[1, 1] = 1;</span></span>
<span id="cb10-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[2, 2] = 1;</span></span>
<span id="cb10-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[1, 2] = latent_rho;</span></span>
<span id="cb10-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[2, 1] = latent_rho;</span></span>
<span id="cb10-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Compute covariance matrix for latent variables</span></span>
<span id="cb10-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cov = sigma_lat * latent_cor * sigma_lat;</span></span>
<span id="cb10-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Extract latent variables from matrix</span></span>
<span id="cb10-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  lat_A = latent_variables[, 1];</span></span>
<span id="cb10-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  lat_B = latent_variables[, 2];</span></span>
<span id="cb10-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Regression model</span></span>
<span id="cb10-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  mu_Z = intercept + slope_A*lat_A + slope_B*lat_B;</span></span>
<span id="cb10-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Standardised regression parameters</span></span>
<span id="cb10-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_A_std = slope_A * sigma_lat_A;</span></span>
<span id="cb10-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_B_std = slope_B * sigma_lat_B;</span></span>
<span id="cb10-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">model {</span></span>
<span id="cb10-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Priors for regression parameters</span></span>
<span id="cb10-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  intercept ~ normal(0, 2);</span></span>
<span id="cb10-87"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_A ~ normal(0, 2);</span></span>
<span id="cb10-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_B ~ normal(0, 2);</span></span>
<span id="cb10-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma ~ normal(0, 2);</span></span>
<span id="cb10-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-91"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior for reliabilities</span></span>
<span id="cb10-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  reliability_A ~ beta(30, 10); // assume this has been estimated using some metric to be </span></span>
<span id="cb10-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                // roughly 0.78, but with considerable uncertainty</span></span>
<span id="cb10-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  reliability_B ~ beta(95, 5); // assume this has been estimated using exceptional reliability</span></span>
<span id="cb10-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior for latent means</span></span>
<span id="cb10-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_means ~ normal(0, 3);</span></span>
<span id="cb10-98"></span>
<span id="cb10-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior for latent standard deviations</span></span>
<span id="cb10-100"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat_A ~ normal(0, 2);</span></span>
<span id="cb10-101"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat_B ~ normal(0, 2);</span></span>
<span id="cb10-102"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior expectation for correlation between latent variables:</span></span>
<span id="cb10-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // tend towards positive rho</span></span>
<span id="cb10-105"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_rho ~ normal(0.4, 0.3);</span></span>
<span id="cb10-106"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-107"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Distribution of latent variable</span></span>
<span id="cb10-108"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  for (i in 1:N) {</span></span>
<span id="cb10-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    latent_variables[i, ] ~ multi_normal(latent_means, latent_cov);</span></span>
<span id="cb10-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  }</span></span>
<span id="cb10-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-112"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Measurement model</span></span>
<span id="cb10-113"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  obs_A ~ normal(lat_A, error_A);</span></span>
<span id="cb10-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  obs_B ~ normal(lat_B, error_B);</span></span>
<span id="cb10-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb10-116"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Generate outcome</span></span>
<span id="cb10-117"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  Z ~ normal(mu_Z, sigma);</span></span>
<span id="cb10-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span></code></pre></div>
</div>
<p>Let’s put the data into a Stan-friendly list and fit the model:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">data_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb11-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Z =</span> Z,</span>
<span id="cb11-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_A =</span> obs_A,</span>
<span id="cb11-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_B =</span> obs_B,</span>
<span id="cb11-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> n</span>
<span id="cb11-6">)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">meas_error_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_stan_file</span>(meas_error_code))</span>
<span id="cb12-2">model_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meas_error_model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb12-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data_list</span>
<span id="cb12-4">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span></span>
<span id="cb12-5">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb12-6">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb12-7">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter_warmup =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span></span>
<span id="cb12-8">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter_sampling =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span></span>
<span id="cb12-9">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span></span>
<span id="cb12-10">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_treedepth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span></span>
<span id="cb12-11">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span></span>
<span id="cb12-12">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 Iteration:    1 / 4000 [  0%]  (Warmup) 
Chain 2 Iteration:    1 / 4000 [  0%]  (Warmup) 
Chain 3 Iteration:    1 / 4000 [  0%]  (Warmup) 
Chain 4 Iteration:    1 / 4000 [  0%]  (Warmup) 
Chain 1 Iteration:  500 / 4000 [ 12%]  (Warmup) 
Chain 4 Iteration:  500 / 4000 [ 12%]  (Warmup) 
Chain 3 Iteration:  500 / 4000 [ 12%]  (Warmup) 
Chain 2 Iteration:  500 / 4000 [ 12%]  (Warmup) 
Chain 1 Iteration: 1000 / 4000 [ 25%]  (Warmup) 
Chain 3 Iteration: 1000 / 4000 [ 25%]  (Warmup) 
Chain 4 Iteration: 1000 / 4000 [ 25%]  (Warmup) 
Chain 2 Iteration: 1000 / 4000 [ 25%]  (Warmup) 
Chain 1 Iteration: 1500 / 4000 [ 37%]  (Warmup) 
Chain 3 Iteration: 1500 / 4000 [ 37%]  (Warmup) 
Chain 4 Iteration: 1500 / 4000 [ 37%]  (Warmup) 
Chain 2 Iteration: 1500 / 4000 [ 37%]  (Warmup) 
Chain 1 Iteration: 2000 / 4000 [ 50%]  (Warmup) 
Chain 1 Iteration: 2001 / 4000 [ 50%]  (Sampling) 
Chain 3 Iteration: 2000 / 4000 [ 50%]  (Warmup) 
Chain 3 Iteration: 2001 / 4000 [ 50%]  (Sampling) 
Chain 4 Iteration: 2000 / 4000 [ 50%]  (Warmup) 
Chain 4 Iteration: 2001 / 4000 [ 50%]  (Sampling) 
Chain 2 Iteration: 2000 / 4000 [ 50%]  (Warmup) 
Chain 2 Iteration: 2001 / 4000 [ 50%]  (Sampling) 
Chain 1 Iteration: 2500 / 4000 [ 62%]  (Sampling) 
Chain 3 Iteration: 2500 / 4000 [ 62%]  (Sampling) 
Chain 2 Iteration: 2500 / 4000 [ 62%]  (Sampling) 
Chain 3 Iteration: 3000 / 4000 [ 75%]  (Sampling) 
Chain 4 Iteration: 2500 / 4000 [ 62%]  (Sampling) 
Chain 1 Iteration: 3000 / 4000 [ 75%]  (Sampling) 
Chain 2 Iteration: 3000 / 4000 [ 75%]  (Sampling) 
Chain 3 Iteration: 3500 / 4000 [ 87%]  (Sampling) 
Chain 1 Iteration: 3500 / 4000 [ 87%]  (Sampling) 
Chain 4 Iteration: 3000 / 4000 [ 75%]  (Sampling) 
Chain 3 Iteration: 4000 / 4000 [100%]  (Sampling) 
Chain 3 finished in 283.6 seconds.
Chain 2 Iteration: 3500 / 4000 [ 87%]  (Sampling) 
Chain 1 Iteration: 4000 / 4000 [100%]  (Sampling) 
Chain 1 finished in 311.5 seconds.
Chain 4 Iteration: 3500 / 4000 [ 87%]  (Sampling) 
Chain 2 Iteration: 4000 / 4000 [100%]  (Sampling) 
Chain 2 finished in 330.5 seconds.
Chain 4 Iteration: 4000 / 4000 [100%]  (Sampling) 
Chain 4 finished in 349.7 seconds.

All 4 chains finished successfully.
Mean chain execution time: 318.8 seconds.
Total execution time: 349.9 seconds.</code></pre>
</div>
</div>
<p>I’ve turn off warning notifications for this blog post, but I did receive this one:</p>
<blockquote class="blockquote">
<p>Warning: 4 of 4 chains had an E-BFMI less than 0.2. See https://mc-stan.org/misc/warnings for details.</p>
</blockquote>
<p>The mc-stan website does indeed contain some advice, but I’m going to ignore this warning for the time being and get on with the blog post.</p>
<p>That said, all estimated parameters are pretty much on the money. Importantly, include the estimated slope for the <code>B</code> construct (<code>slope_B</code>: -0.09, with a 95% credible interval of [-0.66, 0.33]). Notice, too, that the model was able to figure out the correlation between the latent constructs <code>A</code> and <code>B</code> (<code>latent_rho</code>).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">model_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(</span>
<span id="cb14-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variables =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"intercept"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span></span>
<span id="cb14-3">                ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_lat_A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_lat_B"</span></span>
<span id="cb14-4">                , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latent_means"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latent_rho"</span></span>
<span id="cb14-5">                , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_A_std"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_B_std"</span></span>
<span id="cb14-6">                , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reliability_A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reliability_B"</span>)</span>
<span id="cb14-7">  , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd"</span></span>
<span id="cb14-8">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extra_quantiles =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>posterior<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile2</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>))</span>
<span id="cb14-9">  , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rhat"</span></span>
<span id="cb14-10">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 13 × 6
   variable          mean     sd   q2.5  q97.5  rhat
   &lt;chr&gt;            &lt;num&gt;  &lt;num&gt;  &lt;num&gt;  &lt;num&gt; &lt;num&gt;
 1 intercept        1.25  1.63   -2.38   3.92   1.01
 2 slope_A          0.782 0.185   0.483  1.20   1.02
 3 slope_B         -0.137 0.277  -0.750  0.316  1.01
 4 sigma            1.21  0.0742  1.05   1.35   1.01
 5 sigma_lat_A      1.55  0.0850  1.39   1.72   1.01
 6 sigma_lat_B      0.828 0.0279  0.775  0.883  1.00
 7 latent_means[1]  2.90  0.0830  2.74   3.07   1.00
 8 latent_means[2] -4.01  0.0370 -4.08  -3.93   1.00
 9 latent_rho       0.775 0.0465  0.680  0.861  1.01
10 slope_A_std      1.21  0.249   0.792  1.76   1.01
11 slope_B_std     -0.114 0.230  -0.620  0.262  1.01
12 reliability_A    0.705 0.0618  0.593  0.829  1.01
13 reliability_B    0.950 0.0209  0.903  0.984  1.01</code></pre>
</div>
</div>
<p>To get some sense of what the model is doing, I’m going to extract the posterior distributions for the latent construct scores. These are the model’s guesses of which scores the simulated participants would have had if there had been no measurement error. These guesses are based on the information we’ve fed the model, including the observed variables, the relationships among them, and their probable reliability. I’m just going to work with the means of these posterior distributions, but there can be substantial uncertainty about the model’s guesses.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">est_lat_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat_A"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"draws_matrix"</span>)</span>
<span id="cb16-2">est_lat_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat_B"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"draws_matrix"</span>)</span>
<span id="cb16-3"></span>
<span id="cb16-4"></span>
<span id="cb16-5">df_variables <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb16-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Z =</span> Z,</span>
<span id="cb16-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_A =</span> obs_A,</span>
<span id="cb16-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_B =</span> obs_B,</span>
<span id="cb16-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">est_A =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(est_lat_A, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, mean),</span>
<span id="cb16-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">est_B =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(est_lat_B, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, mean)</span>
<span id="cb16-11">)</span></code></pre></div>
</div>
<p><strong>Figure 2</strong> shows the relationships among the three variables and shows <em>shrinkage</em> at work. For the variables about whose actual values there is uncertainty (viz., A and B), the model reckons that extreme values are caused by a combination of skill (or lack thereof) as well as good (or bad) luck. Accordingly, it adjusts these values towards the bulk of the data. In doing so, it takes into account both the correlation that we ‘expected’ between A and B as well as the possible relationship between A and B on the one hand and Z on the other. For A, the adjustments are fairly large because this variable was assumed to be measured with considerable error. For B, the adjustments are smaller. Z, finally, was assumed to be measured without error and so no adjustments are required.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Z vs. A</span></span>
<span id="cb17-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(Z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> obs_A, df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb17-5">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>)</span>
<span id="cb17-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(Z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> est_A, df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb17-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>obs_A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>est_A,</span>
<span id="cb17-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Z,</span>
<span id="cb17-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey80"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb17-10"></span>
<span id="cb17-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Z vs. B</span></span>
<span id="cb17-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(Z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> obs_B, df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb17-13">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z"</span>)</span>
<span id="cb17-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(Z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> est_B, df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb17-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>obs_B, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>est_B,</span>
<span id="cb17-16">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Z,</span>
<span id="cb17-17">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey80"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb17-18"></span>
<span id="cb17-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># B vs. A</span></span>
<span id="cb17-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(obs_B <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> obs_A, df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb17-21">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>)</span>
<span id="cb17-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(est_B <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> est_A, df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb17-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>obs_A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>est_A,</span>
<span id="cb17-24">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>obs_B, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y1 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>est_B,</span>
<span id="cb17-25">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey80"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb17-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-01-21-statistical-control-measurement-error/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="figure-caption"><strong>Figure 2.</strong> The relationships among the three variables. The empty circles represent the variables as they were observed. The black circles represent, for each observation, the mean of the model’s guesses as to what the value would have been if there hadn’t been any measurement error.</figcaption>
</figure>
</div>
</div>
</div>
<p>In statistics at least, shrinkage is generally a good thing: The shrunken values (i.e., the model’s guesses) lie, on average, closer to the true but unobserved values than the observed values do. This is clearly the case for variable A:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> obs_A))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.724</code></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(A <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>est_A))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.518</code></pre>
</div>
</div>
<p>For variable B, the difference is negligible seeing as this variable was measured with exceptional reliability:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(B <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> obs_B))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.149</code></pre>
</div>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(B <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>est_B))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.146</code></pre>
</div>
</div>
</section>
<section id="a-real-life-example-linguistic-interdependence" class="level2">
<h2 class="anchored" data-anchor-id="a-real-life-example-linguistic-interdependence">A real-life example: Linguistic interdependence</h2>
<p>For the simulated data, the model seemed to work okay, so let’s turn to a real-life example. I’ll skip the theoretical background, but several studies in applied linguistics have tried to find out if knowledge in a ‘heritage language’ contributes to the development of the societal language (For more information about such research, see Berthele &amp; Lambelet (2017), Vanhove &amp; Berthele (2017) and Berthele &amp; Vanhove (2017)). In a typical research design, researchers collect data on a group of pupils’ language skills in their heritage language as well as in their societal languages at the beginning of the school year. Then, at the end of the school year, they collect similar data. Unsurprisingly, pupils with relatively good societal language skills at the beginning of the year are still relatively good at the end. But what is sometimes also observed is that heritage language proficiency at the first data collection is a predictor of societal language proficiency at the second data collection, even after taking into account societal language proficiency at the first data collection.</p>
<p>It’s tempting but premature to interpret such findings as evidence for a beneficial effect of heritage language skills on the development of societal language proficiency. The reason is that (a) societal and heritage language proficiency are bound to be correlated at the first data collection due to factors such as intelligence, testwiseness, form on the day etc., and (b) language proficiency is invariably measured with error. This is true of heritage language proficiency, but most importantly, it’s true of the variable that is “statistically controlled for”, i.e., societal language proficiency. Consequently, it’s likely that an off-the-shelf statistical model undercorrects for the role of societal language proficiency and overestimates the role of heritage language profiency.</p>
<p>So let’s fit a model that takes measurement error into account.</p>
<section id="data-and-question" class="level3">
<h3 class="anchored" data-anchor-id="data-and-question">Data and question</h3>
<p>The data we’re going to analyse are a subset of those analysed by Vanhove &amp; Berthele (2017) and Berthele &amp; Vanhove (2017). We have data on 91 pupils with French as their societal language and Portuguese as their heritage language. The study consisted of three data collections (and many more pupils), but we’re just going to analyse the reading proficiency data collected during waves 2 and 3 here.</p>
<p>The full datasets are are available as an R package from https://github.com/janhove/helascot, but copy-paste the command below into R to work with the reduced dataset we’ll work with here.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">skills <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">structure</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb26-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Subject =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_10"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_12"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_13"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_14"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_15"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_16"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_17"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_19"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A_PLF_9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_11"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_12"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_13"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AA_PLF_8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_10"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_11"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_13"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_14"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_15"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_16"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_17"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_18"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_19"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_20"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_21"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_22"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_24"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_25"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_26"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AD_PLF_9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AE_PLF_1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AE_PLF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AE_PLF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AE_PLF_5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AE_PLF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C_PLF_1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C_PLF_16"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C_PLF_19"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C_PLF_30"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_1"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D_PLF_8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_12"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_15"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_16"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_17"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_18"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_20"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_24"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_25"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_26"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_27"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_28"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_29"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_31"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_32"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_33"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_34"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_36"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_8"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y_PNF_9"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_5"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_6"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z_PLF_8"</span>)</span>
<span id="cb26-3">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FR_T2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2631578947</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2631578947</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>)</span>
<span id="cb26-4">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PT_T2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2631578947</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0526315789</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>)</span>
<span id="cb26-5">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FR_T3 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2631578947</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>)</span>
<span id="cb26-6">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PT_T3 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3684210526</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3157894737</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4736842105</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2105263158</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7368421053</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4210526316</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6315789474</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9473684211</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5789473684</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5263157895</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7894736842</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6842105263</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8421052632</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8947368421</span>)</span>
<span id="cb26-7">  )</span>
<span id="cb26-8">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>91L)</span>
<span id="cb26-9">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tbl_df"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tbl"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.frame"</span>)</span>
<span id="cb26-10">)</span></code></pre></div>
</div>
<p>We’re going to fit the French reading scores at the third data collection (<code>FR_T3</code>) in terms of the French and Portuguese reading scores at the second data collection (<code>FR_T2</code> and <code>PT_T2</code>). <strong>Figure 3</strong> shows the observed variables. Note that all values are bounded between 0 and 1, where 1 was the highest possible result.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scatterplot_matrix</span>(skills <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(FR_T3, FR_T2, PT_T2))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-01-21-statistical-control-measurement-error/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="figure-caption"><strong>Figure 3.</strong> The relationships between the French proficiency scores at T3, the French proficiency scores at T2 and the Portuguese profiency scores at T2.</figcaption>
</figure>
</div>
</div>
</div>
<p>Fitting an off-the-shelf regression model, we find that <code>PT_T2</code> is significantly related to <code>FR_T3</code>, even when accounting for <code>FR_T2</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(FR_T3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> FR_T2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> PT_T2, skills))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)    0.266     0.0520    5.11 1.84e-06
FR_T2          0.506     0.0990    5.11 1.84e-06
PT_T2          0.196     0.0868    2.26 2.60e-02</code></pre>
</div>
</div>
<p>Lastly, as reported by Pestana et al.&nbsp;(2017), the reliability of the French reading test at T2 was estimated to be 0.73, with a 95% confidence interval of [0.65, 0.78]. For Portuguese at T2, the reliability was estimated to be 0.79, with a 95% confidence interval of [0.72, 0.84]. This is information we can feed to the model. (For French at T3, the estimated reliability coefficient was 0.73, 95% CI: [0.65, 0.79], but for now, we’re not going to model the measurement error on the outcome variable.)</p>
</section>
<section id="model" class="level3">
<h3 class="anchored" data-anchor-id="model">Model</h3>
<p>The model specified below is essentially the same as the model for the simulated example, but with more informed priors.</p>
<p>The reliability estimates for the French T2 and Portuguese T2 variables were incorporated by means of prior distributions.</p>
<ul>
<li>For French T2, I put a <code>beta(73, 27)</code> prior on the reliability coefficient, which assigns a 95% probability of the reliablity coefficient lying between 0.64 and 0.81. This doesn’t exactly correspond to the estimated reliability coefficient’s confidence interval, but I think it’s close enough.</li>
<li>For Portuguese T2, I put a <code>beta(79, 21)</code> prior on the reliability coefficient, which assigns a 95% probability of the reliablity coefficient lying between 0.71 and 0.86.</li>
</ul>
<p>Other prior distributions reflect the fact that the predictor and the outcome data were restricted to the [0, 1] range and some common knowledge. The rationale for them is explained in the comments sprinkled throughout the code.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">interdependence_code <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb30-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">data { </span></span>
<span id="cb30-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Number of observations</span></span>
<span id="cb30-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  int&lt;lower = 1&gt; N;      </span></span>
<span id="cb30-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Observed outcome</span></span>
<span id="cb30-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] FR_T3;         </span></span>
<span id="cb30-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Observed predictors</span></span>
<span id="cb30-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] FR_T2;</span></span>
<span id="cb30-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] PT_T2;</span></span>
<span id="cb30-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">parameters {</span></span>
<span id="cb30-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Parameters for regression</span></span>
<span id="cb30-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real intercept;  </span></span>
<span id="cb30-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_FR;</span></span>
<span id="cb30-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_PT;</span></span>
<span id="cb30-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma; </span></span>
<span id="cb30-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviations of latent variables</span></span>
<span id="cb30-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma_lat_FR_T2; </span></span>
<span id="cb30-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; sigma_lat_PT_T2;</span></span>
<span id="cb30-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Unknown but estimated reliabilities</span></span>
<span id="cb30-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0, upper = 1&gt; reliability_FR_T2;</span></span>
<span id="cb30-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0, upper = 1&gt; reliability_PT_T2;</span></span>
<span id="cb30-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Means of latent predictors</span></span>
<span id="cb30-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  row_vector[2] latent_means;</span></span>
<span id="cb30-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Unknown correlation between latent predictors</span></span>
<span id="cb30-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = -1, upper = 1&gt; latent_rho;</span></span>
<span id="cb30-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Latent variables</span></span>
<span id="cb30-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  matrix[N, 2] latent_variables;</span></span>
<span id="cb30-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">} </span></span>
<span id="cb30-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">transformed parameters {</span></span>
<span id="cb30-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] mu_FR_T3;  // conditional mean of outcome</span></span>
<span id="cb30-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] lat_FR_T2; // latent variables, separated out</span></span>
<span id="cb30-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] lat_PT_T2;</span></span>
<span id="cb30-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real error_FR_T2; // standard error of measurement</span></span>
<span id="cb30-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real error_PT_T2;</span></span>
<span id="cb30-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  matrix[2, 2] sigma_lat; // standard deviations of latent variables, in matrix form</span></span>
<span id="cb30-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  cov_matrix[2] latent_cor; // correlation and covariance matrix for latent variables </span></span>
<span id="cb30-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  cov_matrix[2] latent_cov;</span></span>
<span id="cb30-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_FR_std;</span></span>
<span id="cb30-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_PT_std;</span></span>
<span id="cb30-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Express measurement error in terms of </span></span>
<span id="cb30-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // standard deviation of constructs and reliability</span></span>
<span id="cb30-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  error_FR_T2 = sqrt(sigma_lat_FR_T2^2/reliability_FR_T2 - sigma_lat_FR_T2^2);</span></span>
<span id="cb30-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  error_PT_T2 = sqrt(sigma_lat_PT_T2^2/reliability_PT_T2 - sigma_lat_PT_T2^2);</span></span>
<span id="cb30-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Define diagonal matrix with standard errors of latent variables</span></span>
<span id="cb30-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[1, 1] = sigma_lat_FR_T2;</span></span>
<span id="cb30-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[2, 2] = sigma_lat_PT_T2;</span></span>
<span id="cb30-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[1, 2] = 0;</span></span>
<span id="cb30-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma_lat[2, 1] = 0;</span></span>
<span id="cb30-57"></span>
<span id="cb30-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Define correlation matrix for latent variables</span></span>
<span id="cb30-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[1, 1] = 1;</span></span>
<span id="cb30-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[2, 2] = 1;</span></span>
<span id="cb30-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[1, 2] = latent_rho;</span></span>
<span id="cb30-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cor[2, 1] = latent_rho;</span></span>
<span id="cb30-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Compute covariance matrix for latent variables</span></span>
<span id="cb30-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_cov = sigma_lat * latent_cor * sigma_lat;</span></span>
<span id="cb30-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Extract latent variables from matrix</span></span>
<span id="cb30-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  lat_FR_T2 = latent_variables[, 1];</span></span>
<span id="cb30-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  lat_PT_T2 = latent_variables[, 2];</span></span>
<span id="cb30-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Regression model</span></span>
<span id="cb30-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  mu_FR_T3 = intercept + slope_FR*lat_FR_T2 + slope_PT*lat_PT_T2;</span></span>
<span id="cb30-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Standardised regression parameters</span></span>
<span id="cb30-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_FR_std = slope_FR * sigma_lat_FR_T2;</span></span>
<span id="cb30-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_PT_std = slope_PT * sigma_lat_PT_T2;</span></span>
<span id="cb30-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">model {</span></span>
<span id="cb30-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Priors for regression parameters; these essentially</span></span>
<span id="cb30-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // reflect the fact that the data lie in the [0, 1] interval.</span></span>
<span id="cb30-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // The intercept is for FR_T2 and PT_T2 = 0, so a pupil with</span></span>
<span id="cb30-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // poor scores at T2. So probably pretty low.</span></span>
<span id="cb30-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  intercept ~ normal(0.20, 0.10);</span></span>
<span id="cb30-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // French at T2 is bound to positively predict French at T3,</span></span>
<span id="cb30-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // but the slope can at most be 1 (bounded data).</span></span>
<span id="cb30-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_FR ~ normal(0.50, 0.25);</span></span>
<span id="cb30-87"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Portuguese at T2 is not necessarily a positive predictor of</span></span>
<span id="cb30-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // French at T3, given French at T2. So centre around 0.</span></span>
<span id="cb30-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_PT ~ normal(0, 0.25);</span></span>
<span id="cb30-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // If neither of the T2 variables predicts T3, uncertainty</span></span>
<span id="cb30-91"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // is highest when the mean T3 score is 0.5. Since these scores</span></span>
<span id="cb30-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // are bounded between 0 and 1, the standard deviation could not </span></span>
<span id="cb30-93"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // be much higher than 0.20. But French T2 is bound to be a predictor,</span></span>
<span id="cb30-94"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // so let us choose a slighlty lower value.</span></span>
<span id="cb30-95"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  sigma ~ normal(0.15, 0.08);</span></span>
<span id="cb30-96"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-97"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior reliabilities</span></span>
<span id="cb30-98"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  reliability_FR_T2 ~ beta(73, 27); // alpha = 0.73, 95% CI [0.65, 0.78], </span></span>
<span id="cb30-99"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                    // which is roughly beta(73, 27)</span></span>
<span id="cb30-100"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  reliability_PT_T2 ~ beta(79, 21);  // alpha = 0.79, 95% CI [0.72, 0.84]</span></span>
<span id="cb30-101"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-102"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior expectation for latent means, viz., the means</span></span>
<span id="cb30-103"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // for French and Portuguese T2. These are going to be in the 0.4-0.6</span></span>
<span id="cb30-104"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // range.</span></span>
<span id="cb30-105"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_means ~ normal(0.50, 0.10);</span></span>
<span id="cb30-106"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-107"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Prior expectation for correlation between latent variables:</span></span>
<span id="cb30-108"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // tend towards positive rho; pretty vague;</span></span>
<span id="cb30-109"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  latent_rho ~ normal(0.4, 0.3);</span></span>
<span id="cb30-110"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-111"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Distribution of latent variable</span></span>
<span id="cb30-112"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  for (i in 1:N) {</span></span>
<span id="cb30-113"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    latent_variables[i, ] ~ multi_normal(latent_means, latent_cov);</span></span>
<span id="cb30-114"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  }</span></span>
<span id="cb30-115"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-116"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Measurement model</span></span>
<span id="cb30-117"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  FR_T2 ~ normal(lat_FR_T2, error_FR_T2);</span></span>
<span id="cb30-118"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  PT_T2 ~ normal(lat_PT_T2, error_PT_T2);</span></span>
<span id="cb30-119"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb30-120"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Generate outcome</span></span>
<span id="cb30-121"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  FR_T3 ~ normal(mu_FR_T3, sigma);</span></span>
<span id="cb30-122"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-123"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">data_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb31-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FR_T2 =</span> skills<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T2,</span>
<span id="cb31-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PT_T2 =</span> skills<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>PT_T2,</span>
<span id="cb31-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FR_T3 =</span> skills<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T3,</span>
<span id="cb31-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(skills)</span>
<span id="cb31-6">)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1">interdependence_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_stan_file</span>(interdependence_code))</span>
<span id="cb32-2">interdependence_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> interdependence_model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb32-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data_list</span>
<span id="cb32-4">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">seed =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb32-5">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb32-6">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb32-7">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter_warmup =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span></span>
<span id="cb32-8">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter_sampling =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6000</span></span>
<span id="cb32-9">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb32-10">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_treedepth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span></span>
<span id="cb32-11">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span></span>
<span id="cb32-12">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 Iteration:    1 / 8000 [  0%]  (Warmup) 
Chain 2 Iteration:    1 / 8000 [  0%]  (Warmup) 
Chain 3 Iteration:    1 / 8000 [  0%]  (Warmup) 
Chain 4 Iteration:    1 / 8000 [  0%]  (Warmup) 
Chain 4 Iteration: 1000 / 8000 [ 12%]  (Warmup) 
Chain 1 Iteration: 1000 / 8000 [ 12%]  (Warmup) 
Chain 2 Iteration: 1000 / 8000 [ 12%]  (Warmup) 
Chain 3 Iteration: 1000 / 8000 [ 12%]  (Warmup) 
Chain 4 Iteration: 2000 / 8000 [ 25%]  (Warmup) 
Chain 4 Iteration: 2001 / 8000 [ 25%]  (Sampling) 
Chain 1 Iteration: 2000 / 8000 [ 25%]  (Warmup) 
Chain 1 Iteration: 2001 / 8000 [ 25%]  (Sampling) 
Chain 2 Iteration: 2000 / 8000 [ 25%]  (Warmup) 
Chain 2 Iteration: 2001 / 8000 [ 25%]  (Sampling) 
Chain 3 Iteration: 2000 / 8000 [ 25%]  (Warmup) 
Chain 3 Iteration: 2001 / 8000 [ 25%]  (Sampling) 
Chain 4 Iteration: 3000 / 8000 [ 37%]  (Sampling) 
Chain 1 Iteration: 3000 / 8000 [ 37%]  (Sampling) 
Chain 2 Iteration: 3000 / 8000 [ 37%]  (Sampling) 
Chain 3 Iteration: 3000 / 8000 [ 37%]  (Sampling) 
Chain 4 Iteration: 4000 / 8000 [ 50%]  (Sampling) 
Chain 1 Iteration: 4000 / 8000 [ 50%]  (Sampling) 
Chain 2 Iteration: 4000 / 8000 [ 50%]  (Sampling) 
Chain 3 Iteration: 4000 / 8000 [ 50%]  (Sampling) 
Chain 4 Iteration: 5000 / 8000 [ 62%]  (Sampling) 
Chain 1 Iteration: 5000 / 8000 [ 62%]  (Sampling) 
Chain 2 Iteration: 5000 / 8000 [ 62%]  (Sampling) 
Chain 3 Iteration: 5000 / 8000 [ 62%]  (Sampling) 
Chain 1 Iteration: 6000 / 8000 [ 75%]  (Sampling) 
Chain 4 Iteration: 6000 / 8000 [ 75%]  (Sampling) 
Chain 2 Iteration: 6000 / 8000 [ 75%]  (Sampling) 
Chain 3 Iteration: 6000 / 8000 [ 75%]  (Sampling) 
Chain 1 Iteration: 7000 / 8000 [ 87%]  (Sampling) 
Chain 2 Iteration: 7000 / 8000 [ 87%]  (Sampling) 
Chain 4 Iteration: 7000 / 8000 [ 87%]  (Sampling) 
Chain 3 Iteration: 7000 / 8000 [ 87%]  (Sampling) 
Chain 1 Iteration: 8000 / 8000 [100%]  (Sampling) 
Chain 1 finished in 119.3 seconds.
Chain 2 Iteration: 8000 / 8000 [100%]  (Sampling) 
Chain 2 finished in 119.8 seconds.
Chain 4 Iteration: 8000 / 8000 [100%]  (Sampling) 
Chain 4 finished in 120.4 seconds.
Chain 3 Iteration: 8000 / 8000 [100%]  (Sampling) 
Chain 3 finished in 124.1 seconds.

All 4 chains finished successfully.
Mean chain execution time: 120.9 seconds.
Total execution time: 124.2 seconds.</code></pre>
</div>
</div>
<p>After tweaking the <code>adapt_delta</code> and <code>max_treedepth</code> parameters and letting the model run for a sufficient number of iterations, it converged without errors or warnings.</p>
</section>
<section id="results" class="level3">
<h3 class="anchored" data-anchor-id="results">Results</h3>
<p>Compared to the off-the-shelf <code>lm()</code> model, the model that takes measurement errors and correlated predictors into account estimates the parameter for <code>FR_T2</code> to be higher and that of <code>PT_T2</code> to be lower. It is also more uncertain about these parameters than the off-the-shelf model, I think appropriately so. The slope for <code>PT_T2</code>, which is the important bit, is now estimated to be 0.10, with a 95% credible interval of [-0.17, 0.38]. So when you take measurement error into account, you find that there is less evidence for a beneficial effect of heritage language proficiency on the development of societal language proficiency that you could otherwise have thought. Moreover, the model estimates that the correlation between <code>FR_T2</code> and <code>PT_T2</code> is in the vicinity of 0.81 rather than 0.67, once measurement error has been accounted for.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1">interdependence_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(</span>
<span id="cb34-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variables =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"intercept"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_FR"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_PT"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span></span>
<span id="cb34-3">                , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_lat_FR_T2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_lat_PT_T2"</span></span>
<span id="cb34-4">                , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latent_means"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latent_rho"</span></span>
<span id="cb34-5">                , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reliability_FR_T2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reliability_PT_T2"</span>)</span>
<span id="cb34-6">  , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sd"</span></span>
<span id="cb34-7">  , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extra_quantiles =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>posterior<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile2</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>))</span>
<span id="cb34-8">  , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rhat"</span></span>
<span id="cb34-9">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 11 × 6
   variable           mean     sd    q2.5 q97.5  rhat
   &lt;chr&gt;             &lt;num&gt;  &lt;num&gt;   &lt;num&gt; &lt;num&gt; &lt;num&gt;
 1 intercept         0.191 0.0536  0.0869 0.297  1.00
 2 slope_FR          0.712 0.156   0.405  1.02   1.00
 3 slope_PT          0.105 0.140  -0.169  0.382  1.00
 4 sigma             0.116 0.0114  0.0941 0.139  1.00
 5 sigma_lat_FR_T2   0.155 0.0122  0.133  0.181  1.00
 6 sigma_lat_PT_T2   0.182 0.0141  0.157  0.212  1.00
 7 latent_means[1]   0.653 0.0183  0.617  0.689  1.00
 8 latent_means[2]   0.642 0.0210  0.601  0.683  1.00
 9 latent_rho        0.813 0.0783  0.643  0.949  1.00
10 reliability_FR_T2 0.750 0.0392  0.670  0.823  1.00
11 reliability_PT_T2 0.790 0.0402  0.706  0.863  1.00</code></pre>
</div>
</div>
<p>Considerable shrinkage is observed for both predictors (<strong>Figure 4</strong>); keep in mind that we didn’t account for measurement error on the outcome. The plots in the top row shows how predictor values that are pretty low given a certain outcome value are shifted toward the right and how predictor values that are pretty high given a certain outcome value get shifted toward the left. The plot in the bottom row additionally shows that the model has learnt, among other things, that if a participant has a high <code>PT_T2</code> score but a low <code>FR_T2</code> score, that the former is probably an overestimate and the latter is likely an underestimate. So it adjusts both values towards the centre.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">lat_FR_T2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> interdependence_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat_FR_T2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"draws_matrix"</span>)</span>
<span id="cb36-2">lat_PT_T2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> interdependence_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat_PT_T2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"draws_matrix"</span>)</span>
<span id="cb36-3"></span>
<span id="cb36-4">df_variables <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb36-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FR_T3 =</span> skills<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T3,</span>
<span id="cb36-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FR_T2 =</span> skills<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T2,</span>
<span id="cb36-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PT_T2 =</span> skills<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>PT_T2,</span>
<span id="cb36-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">est_FR_T2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(lat_FR_T2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, mean),</span>
<span id="cb36-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">est_PT_T2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(lat_PT_T2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, mean)</span>
<span id="cb36-10">)</span>
<span id="cb36-11"></span>
<span id="cb36-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb36-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(FR_T3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> FR_T2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb36-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(FR_T3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> est_FR_T2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb36-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>est_FR_T2,</span>
<span id="cb36-16">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y1 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T3,</span>
<span id="cb36-17">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey60"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb36-18"></span>
<span id="cb36-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(FR_T3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> PT_T2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb36-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(FR_T3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> est_PT_T2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb36-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>PT_T2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>est_PT_T2,</span>
<span id="cb36-22">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y1 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T3,</span>
<span id="cb36-23">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey60"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb36-24"></span>
<span id="cb36-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(PT_T2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> FR_T2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb36-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(est_PT_T2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> est_FR_T2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df_variables, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb36-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrows</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FR_T2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>est_FR_T2,</span>
<span id="cb36-28">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>PT_T2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y1 =</span> df_variables<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>est_PT_T2,</span>
<span id="cb36-29">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey60"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2020-01-21-statistical-control-measurement-error/index_files/figure-html/unnamed-chunk-24-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="figure-caption"><strong>Figure 4.</strong> Relationships among the predictors and the outcome. The empty circles represent the variables as they were observed. The black circles represent, for each observation, the mean of the model’s guesses as to what the value would have been if there hadn’t been any measurement error.</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="caveats" class="level2">
<h2 class="anchored" data-anchor-id="caveats">Caveats</h2>
<ul>
<li>I’m just trying to figure out this stuff, so this blog posts comes with absolutely no warranties.</li>
<li>We only took into account <em>reliability</em> and we took <em>validity</em> for granted. In the real-life example, this means that we acknowledged that the French reading test measured French reading proficiency imperfectly — but we did assume that it, deep down, measured French reading proficiency. You can easily imagine a test that measures something highly reliably, but that still doesn’t reflect what it’s supposed to measure well. (For instance, a highly reliable trivia quiz about the Belgian national football team under the reign of Georges Leekens that’s used to represent general intelligence.) Taking measurement error (in terms of unreliability) into account doesn’t fix possible validity problems.</li>
</ul>
</section>
<section id="software-versions" class="level2">
<h2 class="anchored" data-anchor-id="software-versions">Software versions</h2>
<p>Please note that I reran the code on this page on August 6, 2023.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.2 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-06
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package        * version date (UTC) lib source
 abind            1.4-5   2016-07-21 [1] CRAN (R 4.3.1)
 backports        1.4.1   2021-12-13 [1] CRAN (R 4.3.0)
 cachem           1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr            3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 checkmate        2.2.0   2023-04-27 [1] CRAN (R 4.3.1)
 cli              3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 cmdstanr       * 0.6.0   2023-08-02 [1] local
 colorspace       2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 crayon           1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 data.table       1.14.8  2023-02-17 [1] CRAN (R 4.3.0)
 devtools         2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest           0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 distributional   0.3.2   2023-03-22 [1] CRAN (R 4.3.1)
 dplyr          * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 ellipsis         0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate         0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi            1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 farver           2.1.1   2022-07-06 [1] CRAN (R 4.3.0)
 fastmap          1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 forcats        * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)
 fs               1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics         0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2        * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue             1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gtable           0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 hms              1.1.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools        0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets      1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv           1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 jsonlite         1.8.7   2023-06-29 [1] CRAN (R 4.3.1)
 knitr            1.39    2022-04-26 [2] CRAN (R 4.2.0)
 later            1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lifecycle        1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 lubridate      * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)
 magrittr         2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 MASS             7.3-60  2023-05-04 [4] CRAN (R 4.3.1)
 matrixStats      1.0.0   2023-06-02 [1] CRAN (R 4.3.1)
 memoise          2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mime             0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI           0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 munsell          0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 pillar           1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild         1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig        2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload          1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 posterior      * 1.4.1   2023-03-14 [1] CRAN (R 4.3.1)
 prettyunits      1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx         3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis          0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises         1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps               1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr          * 1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6               2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 Rcpp             1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 readr          * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)
 remotes          2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 rlang            1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown        2.21    2023-03-26 [1] CRAN (R 4.3.0)
 rstudioapi       0.14    2022-08-22 [1] CRAN (R 4.3.0)
 scales           1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo      1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shiny            1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 stringi          1.7.12  2023-01-11 [1] CRAN (R 4.3.1)
 stringr        * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 tensorA          0.36.2  2020-11-19 [1] CRAN (R 4.3.1)
 tibble         * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyr          * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)
 tidyselect       1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 tidyverse      * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)
 timechange       0.2.0   2023-01-11 [1] CRAN (R 4.3.0)
 tzdb             0.4.0   2023-05-12 [1] CRAN (R 4.3.0)
 urlchecker       1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis          2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8             1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 vctrs            0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 withr            2.5.0   2022-03-03 [2] CRAN (R 4.2.0)
 xfun             0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xtable           1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 yaml             2.3.5   2022-02-21 [2] CRAN (R 4.2.0)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Stan</category>
  <category>Bayesian statistics</category>
  <category>measurement error</category>
  <category>correlational studies</category>
  <guid>https://janhove.github.io/posts/2020-01-21-statistical-control-measurement-error/index.html</guid>
  <pubDate>Mon, 20 Jan 2020 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Drawing scatterplot matrices</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2019-11-28-scatterplot-matrix/index.html</link>
  <description><![CDATA[ 



<p>This is just a quick blog post to share a function with which you can draw scatterplot matrices.</p>
<p>Scatterplot matrices are useful for displaying the intercorrelation between several continuous variables. Based on the help page for the <code>pairs()</code> function in <code>R</code>, I put together a function for quickly drawing scatterplot matrices that also show the Pearson correlation coefficients for the bivariate relationships as well as the number of observations that go into them: <code>scatterplot_matrix()</code>. Here’s how you’d use it:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read in the function</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://janhove.github.io/RCode/scatterplot_matrix.R"</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: airquality is a built-in dataset in R</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(airquality)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scatterplot_matrix</span>(</span>
<span id="cb1-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(airquality, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">select =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(Ozone, Wind, Temp, Solar.R, Month)),</span>
<span id="cb1-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ozone"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wind"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Solar radiation"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Month"</span>)</span>
<span id="cb1-10">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2019-11-28-scatterplot-matrix/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="864"></p>
</div>
</div>
<p>Use:</p>
<ul>
<li><p><code>x</code> contains the vectors (= columns in a dataset) containing the continuous variables you want to plot in the order you want to plot them. To the extent possible, try to arrange the variables in such an order that the earlier variables are more likely to be influenced by the later variables than vice versa. I’m hardly an expert on meteorology, so the order in which I put the variables may not be optimal – but <code>Month</code> is evidently more likely to influence <code>Temp</code>erature than vice versa, so put <code>Month</code> somewhere after <code>Temp</code>. Similarly, if you collected your participants’ age, L1 vocabulary skills, and their results on a cognate translation test in L2, put age last, L1 vocabulary skills second and the translation test results first.</p></li>
<li><p><code>labels</code> contains the readable names of the variables, in that same order. If you leave out this argument, the column names will serve as labels.</p></li>
</ul>
<p>Output:</p>
<ul>
<li><p>Main diagonal: Histograms for each variable as well as the number of available data points for that variable.</p></li>
<li><p>Upper triangle: Scatterplots for the bivariate relationships between the variables, with a nonlinear scatterplot smoother. In the example above, the scatterplot in the first row, third column, shows the relationship between the Temperature (the third variable, on the x-axis) and Ozone (the first variable, on the y-axis). The scatterplot in the second row, fifth column, shows the relationship between Month (the fifth variable, on the x-axis) and Wind (the second variable, on the y-axis).</p></li>
<li><p>Lower triangle: Pearson correlation coefficients for the bivariate relationships between the variables and the number of observations on which it is based. In the example above, the correlation coefficient in the third row, first column, concerns the relationship between the Temperature and Ozone (the first variable). The correlation coefficient in the second row, fifth column, shows the relationship between Month (the fifth variable) and Wind (the second variable).</p></li>
</ul>
<p>Functions you can use instead of this one are <code>pairscor.fnc()</code> in the <code>languageR</code> package, and <code>ggscatmat()</code> and <code>ggpairs()</code> in the <code>GGally</code> package.</p>



 ]]></description>
  <category>R</category>
  <category>graphs</category>
  <category>correlational studies</category>
  <category>non-linearities</category>
  <category>multiple regression</category>
  <guid>https://janhove.github.io/posts/2019-11-28-scatterplot-matrix/index.html</guid>
  <pubDate>Wed, 27 Nov 2019 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Adjusting for a covariate in cluster-randomised experiments</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2019-10-28-cluster-covariates/index.html</link>
  <description><![CDATA[ 



<p>Cluster-randomised experiments are experiments in which groups of participants (e.g., classes) are assigned randomly but in their entirety to the experiments’ conditions. Crucially, the fact that entire groups of participants were randomly assigned to conditions - rather than each participant individually - should be taken into account in the analysis, as outlined in a <a href="../2015-09-17-cluster-randomised-experiments">previous blog post</a>. In this blog post, I use simulations to explore the strengths and weaknesses of different ways of analysing cluster-randomised experiments when a covariate (e.g., a pretest score) is available.</p>
<section id="tldr" class="level2">
<h2 class="anchored" data-anchor-id="tldr">tl;dr</h2>
<p>Cluster-randomised experiments in applied linguistics typically involve a fairly small number of clusters that are randomly assigned to conditions (e.g., perhaps 10 to 20 classes at best). The sizes of these clusters tend to be fairly similar (e.g., perhaps 15 to 25 pupils per class). The simulations indicate that cluster-randomised experiments with these characteristics are best analysed in a surprisingly simple way: Compute the mean outcome per cluster and run the analysis on the cluster means. If a covariate (e.g., pretest scores) is available, also compute the mean covariate value per cluster and add it to the analysis on the cluster means as a control variable.</p>
</section>
<section id="five-different-analytical-approaches" class="level2">
<h2 class="anchored" data-anchor-id="five-different-analytical-approaches">Five different analytical approaches</h2>
<p>I’ll compare the strengths and weaknesses of five methods for analysing cluster-randomised experiments in which a covariate (e.g., pretest scores) are available. I’ll first create some data whose properties reflect those found in cluster-randomised experiments and then run the five analyses. If you have R, you can follow along with the commands below.</p>
<p>The <code>tidyverse</code>, <code>lme4</code> and <code>lmerTest</code> packages can be installed using <code>install.packages(c("tidyverse", "lme4", "lmerTest"))</code>. For the <code>cannonball</code> package, see the <a href="https://github.com/janhove/cannonball">installation instructions</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cannonball) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for generating clustered data</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lme4)       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fitting multilevel models</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lmerTest)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for p-values in multilevel models</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate clustered data; set seed for reproducibility</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RNGversion</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.5.3"</span>)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2019-10-28</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kind =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mersenne-Twister"</span>)</span>
<span id="cb1-10">d_example <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clustered_data</span>(</span>
<span id="cb1-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_class =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb1-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ICC =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">effect =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, </span>
<span id="cb1-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reliability_post =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reliability_pre =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
<p>You can consult the help page for the <code>clustered_data()</code> command (type <code>?clustered_data</code> at the R prompt) for more information about these settings; here’s the summary:</p>
<ul>
<li><p>The dataset <code>d_example</code> now contains simulated data from 14 classes with between 15 and 25 pupils each (<code>n_per_class</code>).</p></li>
<li><p>Before factoring in an effect of the intervention, the variance <em>between</em> the classes is 15% of the total variance of the outcome (<code>ICC</code>; <em>intra-class correlation</em>). The <code>clustered_data()</code> function generates outcome data that is normally distributed within classes with variance = 1, so the variance between the classes is 0.18. (<img src="https://latex.codecogs.com/png.latex?%5Ctextrm%7BICC%7D%20=%200.15%20=%20%5Cfrac%7B%5Ctextrm%7Bvariance%20between%7D%7D%7B%5Ctextrm%7Bvariance%20between%7D%20+%20%5Ctextrm%7Bvariance%20within%20(=%201)%7D%7D%20%5Cleftrightarrow%20%5Ctextrm%7Bvariance%20between%7D%20=%20%5Cfrac%7B0.15%7D%7B1-0.15%7D%20%5Capprox%200.18">) ICCs in the 0.15–0.20 bracket are fairly typical in educational settings (Hedges &amp; Hedberg 2007; Schochet 2008).</p></li>
<li><p>The simulated intervention <code>effect</code> was 0.2, meaning that 0.2 points were added to the outcome values for the pupils in the intervention classes.</p></li>
<li><p>The <code>reliability_post</code> and <code>reliability_pre</code> parameters are useful for generating pretest data that are correlated with each other. By setting <code>reliability_post = 1</code> and <code>reliability_pre = 0.7^2</code>, pretest scores are generated that are correlated at <img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.7"> with the outcome.</p></li>
</ul>
<p><strong>Figures 1 and 2</strong> show what the simulated data look like.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d_example,</span>
<span id="cb2-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(class, outcome, median), </span>
<span id="cb2-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> outcome)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb2-6">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> condition, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_x"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 1.</strong> Simulated data for a cluster-randomised experiment in which seven classes were assigned to the control condition and seven to the intervention condition.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d_example,</span>
<span id="cb3-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> pretest, </span>
<span id="cb3-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> outcome,</span>
<span id="cb3-4">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> condition,</span>
<span id="cb3-5">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> condition)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y~x'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 2.</strong> Pretest vs.&nbsp;outcome scores in the simulated cluster-randomised experiment. The pretest could actually be <em>any</em> covariate that is predictive of the outcome.</figcaption>
</figure>
</div>
</div>
</div>
<p>Let’s now analyse these data using five different approaches.</p>
<section id="approach-1-analyse-the-cluster-means-ignore-the-covariate" class="level3">
<h3 class="anchored" data-anchor-id="approach-1-analyse-the-cluster-means-ignore-the-covariate">Approach 1: Analyse the cluster means, ignore the covariate</h3>
<p>In the first approach, the covariate is ignored entirely. The dependencies in the data (pupils in classes) are taken into account by computing the mean outcome per class; the class means are entirely independent of each other.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">d_per_class <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(class, condition) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_class =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(outcome),</span>
<span id="cb4-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>)</span></code></pre></div>
</div>
<p><strong>Figure 3</strong> shows what this looks like.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 3.</strong> In Approach 1, the outcome is averaged per class, and it is these averages that are analysed in the statistical model.</figcaption>
</figure>
</div>
</div>
</div>
<p>Then, these class means are compared, for instance by means of a two-sample t-test. This is identical to fitting a linear model with the class means as the outcome and the condition to which the class was assigned as the predictor:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">m1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(mean_class <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> condition, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d_per_class)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = mean_class ~ condition, data = d_per_class)

Residuals:
    Min      1Q  Median      3Q     Max 
-0.8311 -0.3386  0.0264  0.2692  0.8889 

Coefficients:
                      Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)            -0.0478     0.1831   -0.26    0.798
conditionintervention   0.4973     0.2590    1.92    0.079

Residual standard error: 0.485 on 12 degrees of freedom
Multiple R-squared:  0.235, Adjusted R-squared:  0.171 
F-statistic: 3.69 on 1 and 12 DF,  p-value: 0.0789</code></pre>
</div>
</div>
<p>The estimated intervention effect in this example is 0.50 ± 0.26, and the result of the significance test is t(12) = 1.92, p = 0.08. (You find the degrees of freedom for the t-test on the third line from the bottom.)</p>
<p>Some researchers may object that this approach reduces the original data set of 280 observations to just the 14 class means and hence throws away vital information. Having reached a certain age, I’ll quote myself on this topic:</p>
<blockquote class="blockquote">
<p>“[R]esearchers may find it psychologically difficult to reduce a dataset to a fraction of its original size—if the analysis is carried out on ten cluster means, by bother recruiting several participants per cluster? However, larger clusters reduce the variance of the cluster means within each treatment group, which in turn makes the intervention effect stand out more clearly (Barcikowski, 1981). Put differently, cluster-level analyses are more powerful when the clusters are large compared to when they are small. That said, when given the choice between running an experiment on ten clusters with 50 observations each or on 50 clusters with ten observations each, the latter is vastly preferred due to its higher power (…).” (Vanhove 2015:145).</p>
</blockquote>
<p>The assumptions of this analysis are the same as for any general linear model, it’s just that they now concern the class means rather than the raw observations. Independence can be assumed if the experimental protocol was followed. Normality isn’t too important but seems reasonable given that we’re working with aggregated data. But homoskedasticity (i.e., equal variances) may occasionally be a problem: The variance of any given class mean will be inversely proportional to the size of the class, meaning that small classes will tend to have more extreme means. In this case, the classes are all of similar sizes, as is typical in experiments with school classes, so this shouldn’t pose too great a threat to the results. In the simulations below, I’ll also consider experiments with wildly differing class sizes.</p>
</section>
<section id="approach-2-fit-a-multilevel-model-ignore-the-covariate" class="level3">
<h3 class="anchored" data-anchor-id="approach-2-fit-a-multilevel-model-ignore-the-covariate">Approach 2: Fit a multilevel model, ignore the covariate</h3>
<p>In the second approach, too, the covariate is ignored completely. Instead of analysing the cluster means, the individual observations are analyses. The clustering is taken into account by fitting the class effects by means of random effects. Different methods for computing p-values for multilevel (or mixed-effects) models exist. In the output below as well as in the simulations, Satterthwaite’s method was used as it isn’t prohibitively expensive computationally and as it performs well on balanced data; see Luke (2017). If you load the <code>lmerTest</code> package, p-values computed using Satterthwaite degrees of freedom are added to the <code>lmer()</code> output.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">m2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> condition <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>class), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d_example)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Linear mixed model fit by REML. t-tests use Satterthwaite's method [
lmerModLmerTest]
Formula: outcome ~ condition + (1 | class)
   Data: d_example

REML criterion at convergence: 833

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-2.6984 -0.5908  0.0535  0.6678  2.2562 

Random effects:
 Groups   Name        Variance Std.Dev.
 class    (Intercept) 0.169    0.411   
 Residual             1.064    1.031   
Number of obs: 280, groups:  class, 14

Fixed effects:
                      Estimate Std. Error      df t value Pr(&gt;|t|)
(Intercept)            -0.0614     0.1781 11.2342   -0.34    0.737
conditionintervention   0.5100     0.2527 11.4011    2.02    0.068

Correlation of Fixed Effects:
            (Intr)
cndtnntrvnt -0.705</code></pre>
</div>
</div>
<p>The estimated intervention effect in this example is 0.51 ± 0.25, and the result of the significance test is t(11.4) = 2.02, p = 0.07. This is slightly different from but highly similar to the results for Approach 1. Both approaches will yield <em>identical</em> results if all clusters have the same size, so keep things simple if this is the case for your data (also see Murtaugh 2007).</p>
<p>A possible advantage of this approach compared to Approach 1 is that it may be better able to cope with differences in class sizes. Disadvantages of Approach 2 are that the multilevel models may occasionally throw warnings and that it requires a certain number of clusters to be useful. Gelman and Hill (2007:247) point out that with fewer than five clusters, multilevel models will typically not be able to estimate the between-cluster variance. In fact, Hayes and Moulton (2009:223) suggest that multilevel modelling be used only from about 15 clusters <em>per condition</em> onwards.</p>
</section>
<section id="approach-3-residualise-the-outcome-against-the-covariate-and-analyse-the-cluster-mean-residuals" class="level3">
<h3 class="anchored" data-anchor-id="approach-3-residualise-the-outcome-against-the-covariate-and-analyse-the-cluster-mean-residuals">Approach 3: Residualise the outcome against the covariate and analyse the cluster mean residuals</h3>
<p>The approach recommended by Hayes and Moulton (2009) for taking covariates into account in analyses of cluster-randomised designs is to first fit a model in which the outcome is regressed against the covariate. This model does <em>not</em> take the condition nor the clustering into account. The model residuals are then extracted:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">covariate_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> pretest, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d_example)</span>
<span id="cb9-2">d_example<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>residual <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resid</span>(covariate_model)</span></code></pre></div>
</div>
<p>In the next step, the residuals from this model are averaged per class:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">d_per_class <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(class, condition) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_residual =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(residual),</span>
<span id="cb10-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>)</span></code></pre></div>
</div>
<p><strong>Figure 4</strong> shows what this looks like.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 4.</strong> In Approach 3, the outcome is first regressed against the covariate. The residuals of this regression are then averaged per class, and it is these averaged residuals that are analysed in the statistical model.</figcaption>
</figure>
</div>
</div>
</div>
<p>Then, similarly to Approach 1, these class means are analysed, e.g., in a general linear model:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">m3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(mean_residual <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> condition, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d_per_class)</span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m3)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = mean_residual ~ condition, data = d_per_class)

Residuals:
    Min      1Q  Median      3Q     Max 
-0.4615 -0.2164  0.0701  0.1637  0.4497 

Coefficients:
                      Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)             -0.220      0.113   -1.96   0.0740
conditionintervention    0.492      0.159    3.09   0.0094

Residual standard error: 0.298 on 12 degrees of freedom
Multiple R-squared:  0.443, Adjusted R-squared:  0.397 
F-statistic: 9.55 on 1 and 12 DF,  p-value: 0.00936</code></pre>
</div>
</div>
<p>The estimated intervention effect in this example is 0.49 ± 0.16, and the result of the significance test is t(12) = 3.09, p = 0.009. Note how in this example, the standard error for the intervention effect estimate is considerably reduced compared to the two approaches that ignore the covariate.</p>
</section>
<section id="approach-4-analyse-the-cluster-means-adjust-for-the-cluster-mean-covariate-values" class="level3">
<h3 class="anchored" data-anchor-id="approach-4-analyse-the-cluster-means-adjust-for-the-cluster-mean-covariate-values">Approach 4: Analyse the cluster means, adjust for the cluster mean covariate values</h3>
<p>In the fourth approach, both the outcome and the covariate are averaged per class, and the class mean covariates are entered into the general linear model on the class mean outcomes as a covariate:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">d_per_class <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d_example <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(class, condition) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_class =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(outcome),</span>
<span id="cb13-4">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_pretest =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(pretest),</span>
<span id="cb13-5">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>)</span></code></pre></div>
</div>
<p><strong>Figure 5</strong> shows the data that are submitted to the statistical analysis.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption"><strong>Figure 5.</strong> In Approach 4, both the outcome and the covariate are averaged per class. The averaged covariate is then used as a covariate in a statistical model with the averaged outcome as the dependent variable.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">m4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(mean_class <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> condition <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> mean_pretest, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d_per_class)</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m4)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = mean_class ~ condition + mean_pretest, data = d_per_class)

Residuals:
    Min      1Q  Median      3Q     Max 
-0.2885 -0.1814  0.0371  0.1027  0.5279 

Coefficients:
                      Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)             0.0455     0.0889    0.51   0.6188
conditionintervention   0.4870     0.1241    3.93   0.0024
mean_pretest            0.8994     0.1399    6.43  4.9e-05

Residual standard error: 0.232 on 11 degrees of freedom
Multiple R-squared:  0.839, Adjusted R-squared:  0.81 
F-statistic: 28.7 on 2 and 11 DF,  p-value: 4.32e-05</code></pre>
</div>
</div>
<p>The estimated intervention effect in this example is 0.49 ± 0.12, and the result of the significance test is t(11) = 3.93, p = 0.0024. Note how in this example, too, the standard error is considerably lower than in the two approaches that ignore the covariate.</p>
<p>Incidentally, the pretest effect that is reported in the output is entirely uninteresting: we included it in the analysis to reduce the residual variance, not because we have a research question concerning the pretest covariate.</p>
<p>This approach may be particularly useful compared to the other approaches if some standardised measure of the pupils’ pre-intervention performance or general skill level is available but if teachers, parents or administrators are unwilling to share the individual results: You could try asking for just the average score per class instead, as this is all you need!</p>
</section>
<section id="approach-5-fit-a-multilevel-model-include-the-covariate" class="level3">
<h3 class="anchored" data-anchor-id="approach-5-fit-a-multilevel-model-include-the-covariate">Approach 5: Fit a multilevel model, include the covariate</h3>
<p>Finally, you could fit a multilevel model as in Approach 2, but with the covariate included.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">m5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> condition <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pretest <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>class), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d_example)</span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m5)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Linear mixed model fit by REML. t-tests use Satterthwaite's method [
lmerModLmerTest]
Formula: outcome ~ condition + pretest + (1 | class)
   Data: d_example

REML criterion at convergence: 680

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-2.5381 -0.6974  0.0239  0.6771  2.7744 

Random effects:
 Groups   Name        Variance Std.Dev.
 class    (Intercept) 0.0577   0.240   
 Residual             0.6143   0.784   
Number of obs: 280, groups:  class, 14

Fixed effects:
                      Estimate Std. Error       df t value Pr(&gt;|t|)
(Intercept)            -0.0131     0.1122  10.8640   -0.12   0.9095
conditionintervention   0.5054     0.1594  11.0897    3.17   0.0088
pretest                 0.4628     0.0317 275.3617   14.62   &lt;2e-16

Correlation of Fixed Effects:
            (Intr) cndtnn
cndtnntrvnt -0.703       
pretest      0.033 -0.004</code></pre>
</div>
</div>
<p>The estimated intervention effect in this example is 0.51 ± 0.16, and the result of the significance test is t(11.1) = 3.17, p = 0.009. Again the pretest effect is entirely uninteresting; just include it in the analysis but otherwise ignore it.</p>
<p>So we have at least five ways of analysing data from cluster-randomised experiments when a covariate is available. Trying out several of them and then reporting the one that fits the narrative best is an excellent way of invalidating the inferential results, however, so I ran a simulation to find out which approach I should recommend to students and colleagues.</p>
</section>
</section>
<section id="set-up-for-the-simulations" class="level2">
<h2 class="anchored" data-anchor-id="set-up-for-the-simulations">Set-up for the simulations</h2>
<p>While it stands to reason that an optimal analysis will take into account the participants’ pretest (or other covariate) scores, I have found no guidance on which approach works best. Quite possibly, different approaches work best in different circumstances, so I wrote a couple of simulations to get a handle on this.</p>
<p>For the simulation I made use of the <code>clustered_data()</code> function in the <a href="https://github.com/janhove/cannonball"><code>cannonball</code></a> package. See the help page for details about this function (<code>?clustered_data</code>). The following parameters were varied:</p>
<ul>
<li><p>The number of participants either varied fairly little per class or varied a lot. For the simulations in which the class sizes were similar, the number of participants varied between 15 and 25 per class, which reflects typical school class sizes, and they were 14 classes in total. The homoskedasticity assumption is approximately met in these cases. For the simulations in which the class sizes differed more wildly, they were 10 classes, and the number of ‘pupils’ in these classes was 2, 4, 8, …, 1024. These clearly are untypical sizes for school classes, and the different class sizes induce substantial heteroskedasticity.</p></li>
<li><p>The (unconditional) intra-class correlation was either 0.17 or 0.03. An intra-class correlation of 0.17 is typical of cluster-randomised experiments in educational settings (Hedges &amp; Hedberg 2007; Schochet 2008); an intra-class correlation of 0.03 is considerably lower than that but still enough to inflate Type-I errors considerably when it isn’t taken into account.</p></li>
<li><p>A covariate was available that was either pretty strongly correlated to the pupils’ pre-intervention outcome (<img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.7">) or fairly weakly correlated to it (<img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.3">). The strong covariate may be thought of as a pretest score; the weak covariate could be a weak proxy of pre-intervention performance (perhaps some self-assessment).</p></li>
<li><p>To check the Type-I error rate, the effect of the intervention was set to 0. To check the different methods’ power, the effect of the intervention was set to 0.4.</p></li>
</ul>
<p>For each combination of parameters, 10,000 datasets were generated and analysed using each of the five approaches outlined above. For the simulation code and the raw results, see the bottom of this page.</p>
</section>
<section id="scenario-1-typical-cluster-sizes-typical-intra-class-correlation" class="level2">
<h2 class="anchored" data-anchor-id="scenario-1-typical-cluster-sizes-typical-intra-class-correlation">Scenario 1: Typical cluster sizes, typical intra-class correlation</h2>
<p>Let’s first take a look at how the analytical approaches compare in a typical cluster-randomised experiment in applied linguistics: The class sizes aren’t identical but fairly similar, and the intra-class correlation is 0.17.</p>
<p>When there is no effect of the intervention, we should observe a significant difference in only 5% of cases. In other words, the Type-I error rate should be 0.05. As <strong>Figure 6</strong> shows, all five analytical approaches seem to have the advertised Type-I error rate of 0.05.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-19-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 6.</strong> Observed Type-I error rates for scenario 1 (typical cluster sizes, intra-class correlation of 0.17). If the true Type-I error rate is 0.05, there is a 95% probability that the observed Type-I error rate lies between the dashed horizontal lines. All five approaches seem to perform adequately in terms of their Type-I error rate.</figcaption>
</figure>
</div>
</div>
</div>
<p>When there is an effect of the intervention, we should observe significant differences more often. As <strong>Figure 7</strong> shows, Approach 4 performs either on par with or considerably better than the alternative approaches.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 7.</strong> Observed power for scenario 1 (typical cluster sizes, intra-class correlation of 0.17). When the covariate is only weakly correlated with the (pre-intervention) outcome (<img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.3">), the three approaches that consider it slightly outperform the two approaches that don’t, with little difference between these three approaches. If the correlation is stronger (<img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.7">), the approach in which both the outcome and the covariate are averaged per class (Approach 4) performs considerably better than the alternatives.</figcaption>
</figure>
</div>
</div>
</div>
<p>In summary, for what I consider to be a typical cluster-randomised experiment in applied linguistics, Approach 4 seems to be the best way to analyse the data.</p>
</section>
<section id="scenario-2-typical-cluster-sizes-low-intra-class-correlation" class="level2">
<h2 class="anchored" data-anchor-id="scenario-2-typical-cluster-sizes-low-intra-class-correlation">Scenario 2: Typical cluster sizes, low intra-class correlation</h2>
<p>In scenario 2, the class sizes are still typical of what is found in applied linguistics, but the intra-class correlation is lower (0.03). As <strong>Figure 8</strong> shows, Approach 5 (multilevel model with covariate) may be somewhat too conservative if the intra-correlation is low and the covariate is fairly strongly related to the outcome. In spite of this conservatism, it performs well power-wise, as shown in <strong>Figure 9</strong>.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 8.</strong> Observed Type-I error rates for scenario 2 (typical cluster sizes, intra-class correlation of 0.03). If the true Type-I error rate is 0.05, there is a 95% probability that the observed Type-I error rate lies between the dashed horizontal lines. The multilevel model that takes the covariate into account (Approach 5) may be slightly too conservative if the covariate is fairly strongly related to the outcome, but otherwise all five approaches seem to perform adequately in terms of their Type-I error rate.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 9.</strong> Observed power for scenario 2 (typical cluster sizes, intra-class correlation of 0.03). When the covariate is fairly strong (<img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.7">), the three approaches that take the covariate into account perform roughly equally well; when the covariate is weaker (<img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.3">), Approaches 3 and 5 perform slightly better than Approach 4.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="scenario-3-wildly-different-cluster-sizes-typical-intra-class-correlation" class="level2">
<h2 class="anchored" data-anchor-id="scenario-3-wildly-different-cluster-sizes-typical-intra-class-correlation">Scenario 3: Wildly different cluster sizes, typical intra-class correlation</h2>
<p>Now let’s consider a more unrealistic scenario. The ICC is 0.17, as in scenario 1, but the classes aren’t all of approximately equal size, but instead we have one class of size 2, one class of size 4, up till one class of size 1024 (<img src="https://latex.codecogs.com/png.latex?2%5E1,%202%5E2,%202%5E3,%20%5Cdots,%202%5E%7B10%7D">). As <strong>Figures 10 and 11</strong> show, Approach 4 may be slightly too conservative in terms of its Type-I error rate in this setting, yet performs best power-wise.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-25-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 10.</strong> Observed Type-I error rates for scenario 3 (wildly different cluster sizes, intra-class correlation of 0.17). Approach 4 seems to be too conservative, especially when the covariate is fairly strongly related to the outcome. The other four approaches seem to be perform adequately in terms of their Type-I error rate.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-26-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 11.</strong> Observed power for scenario 3 (wildly different cluster sizes, intra-class correlation of 0.17). When the covariate is fairly strong (<img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.7">), the three approaches that take the covariate into account perform roughly equally well; when the covariate is weaker (<img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.3">), Approaches 3 and 5 perform slightly better than Approach 4.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="scenario-4-wildly-different-cluster-sizes-low-intra-class-correlation" class="level2">
<h2 class="anchored" data-anchor-id="scenario-4-wildly-different-cluster-sizes-low-intra-class-correlation">Scenario 4: Wildly different cluster sizes, low intra-class correlation</h2>
<p>In the fourth scenario, the cluster sizes again differ wildly, but the ICC is only 0.03. As <strong>Figure 12</strong> shows, the cluster-level analyses are all <em>too</em> conservative, whereas the multilevel approaches aren’t conservative <em>enough</em>. The observed power associated with each approach was correspondingly adjusted, see <strong>Figure 13</strong>. Even with its power properly adjusted, the multilevel model with a covariate (Approach 5) outperforms the other approaches when the correlation between outcome and covariate is fairly strong.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-28-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 12.</strong> Observed Type-I error rates for scenario 4 (wildly different cluster sizes, intra-class correlation of 0.03). The multilevel approaches (Approaches 2 and 5) seem to be both anticonservative; the cluster-level analyses (Approaches 1, 3 and 4) are too conservative.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-32-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 13.</strong> Since the observed Type-I error rate varied considerably between the five approaches in scenario 4 (see Figure 12), the observed power was adjusted for the approaches’ observed Type-I error rate. This figure shows, for datasets with an intervention effect, how often an approach returned a p-value that was lower than the 5th percentile p-value that the same approach returned when there was no intervention effect.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>In sum, for typical cluster-randomised experiments in applied linguistics (as simulated in scenarios 1 and perhaps 2), Approach 4 either considerably outperforms the other approaches or performs about equally well. Multilevel models only seem to have some added value when the cluster sizes are wildly different, the intra-class correlation is pretty low <em>and</em> the covariate is strongly related to the outcome. On balance, therefore, I think that it is reasonably for me to recommend students and colleagues to analyse cluster-randomised experiments using Approach 4.</p>
<p>(Incidentally, if someone could explain to me <em>why</em> Approach 4 outperforms Approaches 3 and 5 in Scenario 1, that would be highly appreciated.)</p>
<p>One strategy I definitely do <em>not</em> recommend is to try out several different approaches and then report the one that returns the lowest p-value. As <strong>Figure 14</strong> shows, different analyses ran on the same data can produce very different p-values. If you try out two or more approaches and always report the lowest p-value, your Type-I error rate will blow up (see Simmons et al.&nbsp;2011).</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-33-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 14.</strong> <em>Left:</em> p-values for Approaches 4 (x-axis) and 5 (y-axis) ran on the same data when there is no intervention effect. <em>Right:</em> Same, but ran on data with an intervention effect.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="how-about-fewer-clusters" class="level2">
<h2 class="anchored" data-anchor-id="how-about-fewer-clusters">How about fewer clusters?</h2>
<p>In scenarios 1 and 2, fourteen classes participated in the experiment. I’ve rarely seen cluster-randomised experiments in applied linguistics with more than 20 classes, but cluster-randomised experiments with just a handful of classes (say 4 or 6) do occur. (Unfortunately, cluster-randomised experiments with just two classes also occur. But these can’t be analysed properly.) I therefore ran some additional simulations for experiments in which only 6 classes with between 15 and 25 pupils participated, with an ICC of 0.17, and in which the covariate was fairly strong, as would be typical in experiments with pretests.</p>
<p>As <strong>Figure 15</strong> shows, all approaches perform well in terms of their Type-I error rate. Power-wise, <strong>Figure 16</strong> shows that Approach 4 pips Approaches 3 and 5, which in turn perform much better than Approaches 1 and 2. The default recommendation to use Approach 4 therefore also seems reasonable for cluster-randomised experiments with few clusters.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-35-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 15.</strong> Observed Type-I error rates for a cluster-randomised experiment with just 6 classes of similar size, an ICC of 0.17 and a fairly strong covariate (<img src="https://latex.codecogs.com/png.latex?%5Crho%20=%200.7">). All approaches perform adequately in terms of their Type-I error.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-10-28-cluster-covariates/index_files/figure-html/unnamed-chunk-36-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 16.</strong> Observed power for a cluster-randomised experiment with just 6 classes of similar size, an ICC of 0.17 and a fairly strong covariate ($ ho = 0.7$). Approach 4 slighly outperforms Approaches 3 and 5, and all three perform markedly better than Approaches 1 and 2. Power is fairly dreadful overall, though this of course depends on the size of the intervention effect and the variability between and within classes.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="r-code-and-simulation-results" class="level2">
<h2 class="anchored" data-anchor-id="r-code-and-simulation-results">R code and simulation results</h2>
<p>The R code for the simulations is available <a href="https://janhove.github.io/RCode/power_analysis_cluster.R">here</a>. The simulation output for scenarios 1 through 4 is available <a href="https://janhove.github.io/simulation_results/cluster_covariate_simulations.csv">here</a> (84.5 MB). The simulation output for experiments with only 6 classes is available <a href="https://janhove.github.io/simulation_results/cluster_covariate_simulations_few_clusters.csv">here</a> (11 MB). In the output, each row corresponds to one simulated dataset that was analysed in five different ways. Columns 1 through 5 contain the p-values associated with each analysis, columns 6 through 10 contain the estimates for the intervention effect that each analysis yields, columns 11 through 15 contain the corresponding standard errors, columns 16 through 25 contain the lower and upper bounds of the 95% confidence intervals, and the last four columns specify the simulation parameters.</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Gelman, Andrew and Jennifer Hill. 2007. <em>Data analysis using regression and multilevel/hierarchical models.</em> Cambridge, UK: Cambridge University Press.</p>
<p>Hayes, Richard J. and Lawrence H. Moulton. 2009. <em>Cluster randomised trials</em>. Boca Raton, FL: Chapman &amp; Hall/CRC.</p>
<p>Hedges, Larry V. and E. C. Hedberg. 2007. <a href="https://doi.org/10.3102%2F0162373707299706">Intraclass correlation values for planning- group-randomized trials in education.</a> <em>Educational Evaluation and Policy Analysis</em> 29(1). 60-87.</p>
<p>Luke, Steven G. 2017. <a href="https://doi.org/10.3758/s13428-016-0809-y">Evaluating significance in linear mixed-effects models in R.</a> <em>Behavioral Research Methods</em> 49. 1494–1502.</p>
<p>Murtaugh, Paul A. 2007. <a href="https://doi.org/10.1890/0012-9658(2007)88%5B56:SACIED%5D2.0.CO;2">Simplicity and complexity in ecological data analysis.</a> <em>Ecology</em> 88(1). 56–62.</p>
<p>Schochet, Peter Z. 2008. <a href="https://doi.org/10.3102%2F1076998607302714">Statistical power for random assignment evaluations of education programs.</a> <em>Journal of Educational and Behavioral Statistics</em> 33(1). 62-87.</p>
<p>Simmons, Joseph P., Leif D. Nelson and Uri Simonsohn. 2011. <a href="https://doi.org/10.1177%2F0956797611417632">False-positive psychology: Undisclosed flexibility in data collection and analysis allows presenting anything as significant.</a> <em>Psychological Science</em> 22(11). 1359-1366.</p>
<p>Vanhove, Jan.&nbsp;2015. <a href="https://doi.org/10.14746/ssllt.2015.5.1.7">Analyzing randomized controlled interventions: Three notes for applied linguists.</a> <em>Studies in Second Language Learning and Teaching</em> 5. 135–152. Also see the <a href="http://pressto.amu.edu.pl/index.php/ssllt/article/view/5827/5895">correction note</a> for this paper.</p>


</section>

 ]]></description>
  <category>R</category>
  <category>power</category>
  <category>significance</category>
  <category>simplicity</category>
  <category>mixed-effects models</category>
  <category>cluster-randomised experiments</category>
  <guid>https://janhove.github.io/posts/2019-10-28-cluster-covariates/index.html</guid>
  <pubDate>Wed, 27 Nov 2019 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Collinearity isn’t a disease that needs curing</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2019-09-11-collinearity/index.html</link>
  <description><![CDATA[ 



<p>Every now and again, some worried student or collaborator asks me whether they’re “allowed” to fit a regression model in which some of the predictors are fairly strongly correlated with one another. Happily, most Swiss cantons have a laissez-faire policy with regard to fitting models with correlated predictors, so the answer to this question is “yes”. Such an answer doesn’t always set the student or collaborator at ease, so below you find my more elaborate answer.</p>
<section id="whats-collinearity" class="level2">
<h2 class="anchored" data-anchor-id="whats-collinearity">What’s collinearity?</h2>
<p>Collinearity (or ‘multicollinearity’) means that a substantial amount of information contained in some of the predictors included in a statistical model can be pieced together as a linear function of some of the other predictors in the model. That’s a mouthful, so let’s look at some examples.</p>
<p>The easiest case is when you have a multiple regression model with two predictors. These predictors can be continuous or categorical; in what follows, I’ll stick to continuous predictors. I’ve created four datasets with two continuous predictors to illustrate collinearity and its consequences. You find the <code>R</code> code reproduce all analyses at the bottom of this page.</p>
<p>The <code>outcome</code> in each dataset was created using the following equation:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Ctextrm%7Boutcome%7D_i%20=%200.4%5Ctimes%5Ctextrm%7Bpredictor1%7D_i%20+%201.9%5Ctimes%5Ctextrm%7Bpredictor2%7D_i%20+%20%5Cvarepsilon_i"></p>
<p>where the residuals (<img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon_i">) were drawn from a normal distribution with a standard deviation of 3.5.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cvarepsilon_i%20%5Csim%20N(0,%203.5%5E2)"></p>
<p>The four datasets are presented in <strong>Figures 1 through 4</strong>. Beginning analysts may be surprised to see that I consider a situation where two predictors are correlated at r = 0.50 to be a case of <em>weak</em> rather than moderate or strong collinearity. But in fact, the consequences of having two predictors correlate at r = 0.50 (rather than at r = 0.00) are negligible. <strong>Figure 4</strong> highlights the <em>linear</em> part in collinearity: while the two predictors in this figure are perfectly related, there is no <em>linear</em> relationship between them whatsoever. Datasets such as the one in Figure 4 are not affected by any of the <em>statistical</em> consequences of collinearity, but they’re useful to illustrate a point I want to make below.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-09-11-collinearity/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 1.</strong> A dataset with a strong degree of collinearity between the two predictors (r = 0.98).</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-09-11-collinearity/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 2.</strong> A dataset with a weak degree of collinearity between the two predictors (r = 0.50).</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-09-11-collinearity/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 3.</strong> A dataset in which the two predictors are entirely orthogonal and unrelated (r = 0.00).</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-09-11-collinearity/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 4.</strong> A dataset with two orthogonal (r = 0.00) but perfectly related predictors: <code>predictor1</code> is a sinusoid transformation of <code>predictor2</code>. In other words, you can predict <code>predictor1</code> perfectly if you know <code>predictor2</code>.</figcaption>
</figure>
</div>
</div>
</div>
<p>If you fit multiple regressions on these four datasets, you obtain the estimates that are shown in <strong>Figure 5</strong> along with their 90% confidence intervals.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-09-11-collinearity/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 5.</strong> Estimated coefficients and their 90% confidence intervals for the models fitted to the four datasets.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="whats-the-consequence-of-collinearity" class="level2">
<h2 class="anchored" data-anchor-id="whats-the-consequence-of-collinearity">What’s the consequence of collinearity?</h2>
<p>In essence, collinearity has one <strong>statistical</strong> consequence: Estimates of regression coefficients that are affected by collinearity vary more from sample to sample than estimates of regression coefficients that aren’t affected by collinearity; see <strong>Figure 6</strong> below. As Figure 6 also illustrates, collinearity doesn’t bias the coefficient estimates: On average, the estimated coefficients equal the parameter’s true value both when there is no and very strong collinearity. It’s just that the estimates vary much more around this average when there is strong collinearity.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-09-11-collinearity/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid figure-img" width="576"></p>
<figcaption class="figure-caption"><strong>Figure 6.</strong> I simulated samples of 50 observations from a distribution in which the two predictors were completely orthogonal (r = 0.00) and from a distribution in which they were highly correlated (r = 0.98). In all cases, both predictors were independently related to the outcome: <img src="https://latex.codecogs.com/png.latex?%5Ctextrm%7Boutcome%7D_i%20=%200.4%5Ctimes%5Ctextrm%7Bpredictor1%7D_i%20+%201.9%5Ctimes%5Ctextrm%7Bpredictor2%7D_i%20+%20%5Cvarepsilon_i">. On each simulated sample, I ran a multiple regression model, and I then extracted the estimated model coefficients. This figure shows the estimated coefficients for the first predictor. While the estimates vary more when the predictors are strongly correlated than when they’re not, the estimates are unbiased in either case: On average, they equal the true population parameter (dashed red line).</figcaption>
</figure>
</div>
</div>
</div>
<p>Crucially, and happily, this greater variability is reflected in the standard errors and confidence intervals around these estimates: The standard errors are automatically wider when the estimated coefficients are affected by collinearity and the confidence intervals retain their nominal coverage rates (i.e., 95% of the 95% confidence intervals will contain the true parameter value). So the statistical consequence of collinearity is automatically taken care of in the model’s output and requires no additional computations on the part of the analyst. This is illustrated in Figure 5 above: The confidence intervals for the two predictors’ estimated coefficients are considerably wider when these are affected by strong collinearity.</p>
<p>The greater variability in the estimates, the larger standard errors, and the wider confidence intervals all reflect a relative lack of information in the sample:</p>
<blockquote class="blockquote">
<p>Collinearity is at base a problem about information. If two factors are highly correlated, researchers do not have ready access to much information about conditions of the dependent variables when only one of the factors actually varies and the other does not. If we are faced with this problem, there are really only three fundamental solutions: (1) find or create (e.g.&nbsp;via an experimental design) circumstances where there is reduced collinearity; (2) get more data (i.e.&nbsp;increase the N size), so that there is a greater quantity of information about rare instances where there is some divergence between the collinear variables; or (3) add a variable or variables to the model, with some degree of independence from the other independent variables, that explain(s) more of the variance of Y, so that there is more information about that which is being modeled. (<a href="https://www.ncbi.nlm.nih.gov/pubmed/23017962">York 2012:1384</a>)</p>
</blockquote>
</section>
<section id="but-is-collinearity-a-problem" class="level2">
<h2 class="anchored" data-anchor-id="but-is-collinearity-a-problem">But is collinearity a <em>problem</em>?</h2>
<p>For the most part, I think that collinearity is a problem for statistical analyses in the same way that Belgium’s lack of mountains is detrimental to the country’s chances of hosting the Winter Olympics: It’s an unfortunate fact of life, but not something that has to be solved. Running another study, obtaining more data or reducing the error variance are all sensible suggestions, but if you have to work with the data you have, the model output will appropriately reflect the degree of uncertainty in the estimates.</p>
<p>So I don’t consider collinearity a problem. What <em>is</em> the case, however, is that collinearity highlights problems with the way many people think about statistical models and inferential statistics. Let’s look at a couple of these.</p>
<section id="collinearity-decreases-statistical-power." class="level3">
<h3 class="anchored" data-anchor-id="collinearity-decreases-statistical-power.">‘Collinearity decreases statistical power.’</h3>
<p>You may have heared that collinearity decreases statistical power, i.e., the chances of obtaining statistically significant coefficient estimates if their parameter value isn’t zero. This is true, but the lower statistical power is a direct result of the larger standard errors, which appropriately reflect the greater sampling variability of the estimates. This is only a <em>problem</em> if you interpret “lack of statistical significance” as “zero effect”. But then the problem doesn’t lie with collinearity but with the <a href="https://www2.psych.ubc.ca/~schaller/528Readings/Schmidt1996.pdf#page=12">false belief</a> that non-significant estimates correspond to zero effects. It’s just that this false belief is even more likely than usual to lead you astray when your predictors are collinear. If instead of focusing soly on the p-value, you take into account both the estimate <em>and</em> its uncertainty interval, there is no problem.</p>
<p>Incidentally, I think it’s somewhat misleading to say that collinearity <em>decreases</em> statistical power or <em>increases</em> standard errors. It’s true that relative to situations in which there is less or no collinearity and all other things are equal, the standard errors are larger and statistical power is lower when there is stronger collinearity. But I don’t see how you can <em>reduce</em> collinearity but keep all other things equal outside of a computer simulation. In the real world, collinearity isn’t an unfolding process that can be nipped in the bud without bringing about other changes in the research design, the sampling procedure or the statistical model and its interpretation.</p>
</section>
<section id="none-of-the-predictors-is-significant-but-the-overall-model-fit-is." class="level3">
<h3 class="anchored" data-anchor-id="none-of-the-predictors-is-significant-but-the-overall-model-fit-is.">‘None of the predictors is significant but the overall model fit is.’</h3>
<p>With collinear predictors, you may end up with a statistical model for which the <img src="https://latex.codecogs.com/png.latex?F">-test of overall model fit is highly significant but that doesn’t contain a single significant predictor. This is illustrated in <strong>Table 1</strong>: The overall model fit for the dataset with strong collinearity (see Figure 1) is highly significant, but as shown in Figure 5, neither predictor has an estimated coefficient that’s significantly different from zero.</p>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped small" data-quarto-postprocess="true">
<caption>Table 1. R²- and p-values for the overall model fit for the multiple regression models on the four datasets. Even though neither predictor has a significant estimated coefficient in the 'strong' dataset (shown in Figure 1), the overall fit is highly significant.</caption>
<thead>
<tr class="header">
<th style="text-align: left;" data-quarto-table-cell-role="th">Dataset</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">R²</th>
<th style="text-align: right;" data-quarto-table-cell-role="th">p-value of overall fit</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">strong</td>
<td style="text-align: right;">0.255</td>
<td style="text-align: right;">0.001</td>
</tr>
<tr class="even">
<td style="text-align: left;">weak</td>
<td style="text-align: right;">0.220</td>
<td style="text-align: right;">0.003</td>
</tr>
<tr class="odd">
<td style="text-align: left;">none</td>
<td style="text-align: right;">0.201</td>
<td style="text-align: right;">0.005</td>
</tr>
<tr class="even">
<td style="text-align: left;">nonlinear</td>
<td style="text-align: right;">0.293</td>
<td style="text-align: right;">0.000</td>
</tr>
</tbody>
</table>


</div>
</div>
<p>If this seems paradoxical, you need to keep in mind that the tests for the individual coefficient estimates and the test for the overall model fit seek to answer different questions, so there’s no contradiction if they yield different answers. To elaborate, the test for the overall model fit asks if all predictors jointly earn their keep in the model; the tests for the individual coefficients ask whether these are different from zero. With collinear predictors, it’s possible that the answer to the first question is “yes” and the answer to the second is “don’t know”. The reason for this is that with collinear predictors, either predictor could act as the stand-in of the other so that, as far as the model is concerned, either coefficient could well be zero, provided the other isn’t. But due to the lack of information in the collinear sample, it’s not sure which, if any, is zero.</p>
<p>So again, there is no real problem: The tests answer different questions, so they may yield different answers. It’s just that when you have collinear predictors, this tends to happen more often than when you don’t.</p>
</section>
<section id="collinearity-means-that-you-cant-take-model-coefficients-at-face-value." class="level3">
<h3 class="anchored" data-anchor-id="collinearity-means-that-you-cant-take-model-coefficients-at-face-value.">‘Collinearity means that you can’t take model coefficients at face value.’</h3>
<p>It’s sometimes said that collinearity makes it more difficult to interpret estimated model coefficients. Crucially, the appropriate interpretation of an estimated regression coefficient is always the same, regardless of the degree of collinearity: According to the model, what would the difference in the mean outcome be if you took two large groups of observations that differed by one unit in the focal predictor <em>but whose other predictor values are the same</em>. The interpretational difficulties that become obvious when there is collinearity aren’t caused by the collinearity itself but with mental shortcuts that people take when interpreting regression models.</p>
<p>For instance, you may obtain a coefficient estimate in a multiple regression model that you interpret to mean that older children perform more poorly on an L2 writing task than do younger children. (For the non-linguists: L2 = second or foreign language.) This may be counterintuitive, and you may indeed find that, in fact, in your sample older children actually outperform younger ones. You could chalk this one up to collinearity, but the problem really is related to a faulty mental shortcut you took when interpreting your model: You forgot to take into account the “<em>but whose other predictor values are the same</em>” clause. If your model also included measures of the children’s previous exposure to the L2, their motivation to learn the L2, and their L2 vocabulary knowledge, then what the estimated coefficient means is emphatically <em>not</em> that, according to the model, older children perform on average more poorly on a writing task than younger children. It’s that, according to the model, older children will perform more poorly than younger children <em>with the same values on the previous exposure, motivation, and vocabulary knowledge measures</em>. This is pretty much the whole point of fitting multiple regression models. But if, on reflection, this isn’t what you’re actually interested in, then you should fit a different model. For instance, if you’re interested in the overall difference between younger and older children regardless of their previous exposure, motivation and vocabulary knowledge, don’t include these variables as predictors.</p>
<p>Another interpretational difficulty emerges if you recast the interpretation of the estimate as follows: According to the model, what would the difference in the mean outcome be if you <em>increased</em> the focal predictor by one unit but keep the other predictor values constant. The difference between this interpretation and the one that I offered earlier is that we’ve moved from a purely descriptive one both a causal and an interventionist one (viz., the idea that one could <em>change</em> some predictor values while keeping the others constant and that this would have an effect on the mean outcome). In the face of strong collinearity, it becomes clear that this interventionist interpretation may be wishful thinking: It may be impossible to change values in one predictor without also changing values in the predictors that are collinear with it. But the problem here again isn’t the collinearity but the mental shortcut in the interpretation.</p>
<p>In fact, you can run into the same difficulties when you apply the interventionist mental shortcut in the absence of collinearity: In the dataset shown in Figure 4, it’s impossible to change the second predictor without also changing the first since the first was defined as a function of the second. Yet the two variables aren’t collinear. Another example would be if you wanted to model quality ratings of texts in terms of the number of words in the text (“tokens”), the number of unique words in the text (“types”), and the type/token ratio. The model will output estimated coefficients for the three predictors, but as an analyst you should realise that it’s impossible to find two texts differing in the number of tokens but having both the same number of types and the same type/token ratio: If you change the number of tokens and keep constant the number of types, the type/token ratio changes, too.</p>
<p>A final mental shortcut that is laid bare in the presence of collinearity is conflating a measured variable with the theoretical construct that this variable is assumed to capture. The literature on lexical diversity offers a case in point. The type/token ratio (TTR) discussed in the previous paragraph is one of several possible measures of a text’s lexical diversity. If you take a collection of texts, you’re pretty much guaranteed to find that their type/token ratios are negatively correlated with their lengths. That is, longer texts tend to have lower TTR values. This correlation is known as the “text-length problem” and has led researchers to abandon the use of TTR, even though the relationship isn’t <em>that</em> strong (see <strong>Figure 7</strong> for an example).</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-09-11-collinearity/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 7.</strong> The type/token ratio tends to be negatively correlated with text length (here: log-10 number of tokens). This is known as the text length problem in research on lexical diversity. But the problem isn’t that the type/token ratio is collinear with text length; it’s that the type/token ratio also measures something it isn’t supposed to measure and consequently is a poor measure of what it is supposed to measure, viz., lexical diversity. The diversity rating shown are based on human judgements of the texts’ lexical diversity. (Data from the French corpus published by Vanhove et al.&nbsp;(2019).)</figcaption>
</figure>
</div>
</div>
</div>
<p>However, the reason why researchers have abandoned the use of TTR is <em>not</em> collinearity per se. Rather, it is that TTR is a poor measure of what it’s supposed to capture, viz., the lexical diversity displayed in a text. Specifically, because of the <a href="https://en.wikipedia.org/wiki/George_Kingsley_Zipf">statistical properties of language</a>, the TTR is pretty much bound to conflate a text’s lexical diversity with its length. The negative correlation between TTR and text length isn’t much of a problem for statistical modelling; it’s a symptom of a more fundamental problem: A measure of lexical diversity shouldn’t as a matter of fact be related to text length. The fact that TTR does shows that it’s a poor measure of lexical diversity.</p>
<p>To be clear: It’s not necessarily a problem that measures of lexical diversity correlate with text length since it’s possible that the lexical diversity of longer texts is greater than that of shorter texts or vice versa. The problem with TTR is that it <em>necessarily</em> correlates with text length, even if the the texts’ lexical diversity can be assumed to be constant. For instance, if you take increasingly longer snippets of texts from the same book, you’ll find that the TTR goes down, but that doesn’t mean that the writer’s vocabulary skills went down in the process of writing the book. More generally, if your predictors correlate strongly when they’re not supposed to, the problem you have needn’t be collinearity but may instead be that in trying to capture one construct, you’ve also captured the one represented by the other predictor.</p>
<p><strong>In sum, the interpretational challenges encountered when predictors are collinear aren’t caused by the collinearity itself but by mental shortcuts that may lead researchers astray even in the absence of collinearity.</strong></p>
</section>
</section>
<section id="collinearity-doesnt-require-a-statistical-solution" class="level2">
<h2 class="anchored" data-anchor-id="collinearity-doesnt-require-a-statistical-solution">Collinearity doesn’t require a statistical solution</h2>
<blockquote class="blockquote">
<p>Statistical “solutions,” such as residualization that are often used to address collinearity problems do not, in fact, address the fundamental issue, a limited quantity of information, but rather <strong>serve to obfuscate it</strong>. It is perhaps obvious to point out, but nonetheless important in light of the widespread confusion on the matter, that no statistical procedure can actually produce more information than exists in the data. (<a href="https://www.ncbi.nlm.nih.gov/pubmed/23017962">York 2012:1384</a>, my emphasis)</p>
</blockquote>
<p>Quite right. Apart from the non-solution that York (2012) mentioned (residualisation), other common statistical “solutions” to collinearity include dropping predictors, averaging collinear predictors, and resorting to different estimation methods such as ridge regression. Since this blog post is long enough as it is, I’ll comment on these only briefly. Further suggested articles are <a href="https://doi.org/10.1007/s11135-006-9018-6">O’Brien (2007)</a> and <a href="https://doi.org/10.1016/j.jml.2013.12.003">Wurm and Fisicaro (2014)</a>.</p>
<ul>
<li>Dropping predictors: I don’t mind this “solution”, but the problem it solves isn’t collinearity but rather that the previous model was misspecified. This is obviously only a solution to the extent that the new model is capable of answering the researchers’ question since, crucially, estimated coefficients from different models don’t have the same meaning (see the previous section). Something to be particularly aware of is that by dropping one of the collinear predictors, you bias the estimates of the other predictors as shown in <strong>Figure 8</strong>.</li>
</ul>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-09-11-collinearity/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid figure-img" width="864"></p>
<figcaption class="figure-caption"><strong>Figure 8.</strong> Dropping a collinear predictor biases the estimate for the predictor retained as well as its meaning.</figcaption>
</figure>
</div>
</div>
</div>
<ul>
<li><p>Averaging predictors: Again, I don’t mind this solution per se, but please be aware that your model now answers a different question.</p></li>
<li><p>Ridge regression and other forms of deliberately biased estimation: Ridge regression and its cousins try to reduce the sample-to-sample variability in the regression estimates by deliberately biasing them. The result is, quite naturally, that you end up with biased estimates: The estimates for the weaker predictor will tend to be biased upwards (see <strong>Figure 9</strong>), and those for the stronger predictor will be biased downwards. Moreover, the usefulness of standard errors and confidence intervals for ridge regression and the like is contested, see <a href="https://cran.r-project.org/web/packages/penalized/vignettes/penalized.pdf">Goeman et al.&nbsp;(2018, p.&nbsp;18)</a>.</p></li>
</ul>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-09-11-collinearity/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid figure-img" width="912"></p>
<figcaption class="figure-caption"><strong>Figure 9.</strong> Ridge regression is a form of biased estimation, so naturally the estimates it yields are biased.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="tldr" class="level2">
<h2 class="anchored" data-anchor-id="tldr">tl;dr</h2>
<ol type="1">
<li>Collinearity is a form of lack of information that is appropriately reflected in the output of your statistical model.</li>
<li>When collinearity is associated with interpretational difficulties, these difficulties aren’t caused by the collinearity itself. Rather, they reveal that the model was poorly specified (in that it answers a question different to the one of interest), that the analyst overly focuses on significance rather than estimates and the uncertainty about them or that the analyst took a mental shortcut in interpreting the model that could’ve also led them astray in the absence of collinearity.</li>
<li>If you do decide to “deal with” collinearity, make sure you can still answer the question of interest.</li>
</ol>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Goeman, Jelle, Rosa Meijer and Nimisha Chaturvedi. 2018. <a href="https://cran.r-project.org/web/packages/penalized/vignettes/penalized.pdf">L1 and L2 penalized regression models.</a></p>
<p>O’Brien, Robert M. 2007. <a href="https://doi.org/10.1007/s11135-006-9018-6">A caution regarding rules of thumb of variance inflation factors.</a> <em>Quality &amp; Quantity</em> 41. 673-690.</p>
<p>Vanhove, Jan, Audrey Bonvin, Amelia Lambelet and Raphael Berthele. 2019. <a href="https://doi.org/10.17239/jowr-2019.10.03.04">Predicting perceptions of the lexical richness of short French, German, and Portuguese texts using text-based indices.</a> <em>Journal of Writing Research</em> 10(3). 499-525.</p>
<p>Wurm, Lee H. and Sebastiano A. Fisicaro. 2014. <a href="https://doi.org/10.1016/j.jml.2013.12.003">What residualizing predictors in regression analyses does (and what it does not do).</a> <em>Journal of Memory and Language</em> 72. 37-48.</p>
<p>York, Richard. 2012. <a href="https://www.ncbi.nlm.nih.gov/pubmed/23017962">Residualization is not the answer: Rethinking how to address multicollinearity.</a> <em>Social Science Research</em> 41. 1379-1386.</p>
</section>
<section id="r-code" class="level2">
<h2 class="anchored" data-anchor-id="r-code">R code</h2>
<p>This code still ran correctly on August 6, 2023.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(broom)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read in the four generated datasets</span></span>
<span id="cb1-6">strong <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://janhove.github.io/datasets/strong_collinearity.csv"</span>)</span>
<span id="cb1-7">weak <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://janhove.github.io/datasets/weak_collinearity.csv"</span>)</span>
<span id="cb1-8">none <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://janhove.github.io/datasets/no_collinearity.csv"</span>)</span>
<span id="cb1-9">nonlinear <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://janhove.github.io/datasets/nonlinearity.csv"</span>)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the custom function for drawing scatterplot matrices, </span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># then drew Figures 1-4</span></span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://janhove.github.io/RCode/scatterplot_matrix.R"</span>)</span>
<span id="cb1-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scatterplot_matrix</span>(strong[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)])</span>
<span id="cb1-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scatterplot_matrix</span>(weak[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)])</span>
<span id="cb1-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scatterplot_matrix</span>(none[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)])</span>
<span id="cb1-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scatterplot_matrix</span>(nonlinear[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)])</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit multiple regression models</span></span>
<span id="cb1-20">strong.lm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> predictor1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictor2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> strong)</span>
<span id="cb1-21">weak.lm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> predictor1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictor2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> weak)</span>
<span id="cb1-22">none.lm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> predictor1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictor2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> none)</span>
<span id="cb1-23">nonlinear.lm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> predictor1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictor2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> nonlinear)</span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract estimates + 90% CIs</span></span>
<span id="cb1-26">strong_out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(strong.lm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.int =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.90</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"strong"</span>)</span>
<span id="cb1-28">weak_out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(weak.lm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.int =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.90</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weak"</span>)</span>
<span id="cb1-30">none_out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(none.lm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.int =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.90</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span>
<span id="cb1-32">nonlinear_out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(nonlinear.lm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.int =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.90</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nonlinear"</span>)</span>
<span id="cb1-34">outputs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(strong_out, weak_out, none_out, nonlinear_out)</span>
<span id="cb1-35"></span>
<span id="cb1-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw Figure 5</span></span>
<span id="cb1-37">dummy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">term =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(outputs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>term), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prm =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.9</span>))</span>
<span id="cb1-38">outputs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(dataset, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nonlinear"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>, </span>
<span id="cb1-40">                                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weak"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"strong"</span>)),</span>
<span id="cb1-41">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> estimate,</span>
<span id="cb1-42">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> conf.low,</span>
<span id="cb1-43">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> conf.high)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_pointrange</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> term) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dummy, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> prm),</span>
<span id="cb1-47">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"estimated coefficient with 90% confidence interval"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dataset"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-50">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>()</span>
<span id="cb1-51"></span>
<span id="cb1-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function for simulating effect of collinearity on estimates</span></span>
<span id="cb1-53">collinearity <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_sim =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_sample =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb1-54">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rho =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.90</span>,</span>
<span id="cb1-55">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coefs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.9</span>),</span>
<span id="cb1-56">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd_error =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>) {</span>
<span id="cb1-57">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This function generates two correlated</span></span>
<span id="cb1-58">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predictors and an outcome. It then</span></span>
<span id="cb1-59">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># runs regression models (including ridge regression) </span></span>
<span id="cb1-60">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># on these variables and outputs the estimated</span></span>
<span id="cb1-61">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># regression coefficients for the predictors.</span></span>
<span id="cb1-62">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It does this a large number of times (n_sim).</span></span>
<span id="cb1-63">  </span>
<span id="cb1-64">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Package for LASSO/ridge regression</span></span>
<span id="cb1-65">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glmnet"</span>)</span>
<span id="cb1-66"></span>
<span id="cb1-67">  estimates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> n_sim)</span>
<span id="cb1-68"></span>
<span id="cb1-69">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n_sim) {</span>
<span id="cb1-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate correlated predictors</span></span>
<span id="cb1-71">    predictors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> MASS<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mvrnorm</span>(</span>
<span id="cb1-72">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n_sample,</span>
<span id="cb1-73">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb1-74">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Sigma =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(</span>
<span id="cb1-75">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rho),</span>
<span id="cb1-76">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(rho, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-77">      )</span>
<span id="cb1-78">    )</span>
<span id="cb1-79"></span>
<span id="cb1-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate outcome</span></span>
<span id="cb1-81">    outcome <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.vector</span>(coefs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(predictors) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n_sample, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> sd_error))</span>
<span id="cb1-82"></span>
<span id="cb1-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run multiple regression model</span></span>
<span id="cb1-84">    multiple_regression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> predictors[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> predictors[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb1-85">    </span>
<span id="cb1-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run single regression models</span></span>
<span id="cb1-87">    simple_first <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> predictors[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb1-88">    simple_second <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> predictors[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb1-89">    </span>
<span id="cb1-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ridge regression</span></span>
<span id="cb1-91">    lambda_seq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb1-92">    cv_output <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cv.glmnet</span>(predictors, outcome, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfolds =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb1-93">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> lambda_seq)</span>
<span id="cb1-94">    best_lambda <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cv_output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lambda.min</span>
<span id="cb1-95">    ridge_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glmnet</span>(predictors, outcome, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-96">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> best_lambda)</span>
<span id="cb1-97"></span>
<span id="cb1-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save regression coefficients</span></span>
<span id="cb1-99">    estimated_coefficients <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb1-100">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(multiple_regression)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],</span>
<span id="cb1-101">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(multiple_regression)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb1-102">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(simple_first)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb1-103">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(simple_second)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb1-104">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(ridge_model)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb1-105">      )</span>
<span id="cb1-106">                                </span>
<span id="cb1-107">    estimates[i, ] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> estimated_coefficients</span>
<span id="cb1-108">  }</span>
<span id="cb1-109"></span>
<span id="cb1-110">  results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb1-111">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">multiple_est_pred1 =</span> estimates[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb1-112">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">multiple_est_pred2 =</span> estimates[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb1-113">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">multiple_se_pred1 =</span> estimates[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],</span>
<span id="cb1-114">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">multiple_se_pred2 =</span> estimates[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>],</span>
<span id="cb1-115">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simple_est_pred1 =</span> estimates[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>],</span>
<span id="cb1-116">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simple_est_pred2 =</span> estimates[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>],</span>
<span id="cb1-117">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ridge_est_pred1 =</span> estimates[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>],</span>
<span id="cb1-118">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ridge_est_pred2 =</span> estimates[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]</span>
<span id="cb1-119">  )</span>
<span id="cb1-120">  results</span>
<span id="cb1-121">}</span>
<span id="cb1-122"></span>
<span id="cb1-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate effects of strong collinearity</span></span>
<span id="cb1-124">strong_coll <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collinearity</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rho =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.98</span>)</span>
<span id="cb1-125"></span>
<span id="cb1-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate effect of perfect orthogonality (zero collinearity)</span></span>
<span id="cb1-127">no_coll <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collinearity</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rho =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-128"></span>
<span id="cb1-129"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine</span></span>
<span id="cb1-130">strong_coll<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Collinearity <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"strong collinearity</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(r = 0.98)"</span></span>
<span id="cb1-131">no_coll<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Collinearity <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no collinearity</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(r = 0.00)"</span></span>
<span id="cb1-132">all_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(strong_coll, no_coll)</span>
<span id="cb1-133"></span>
<span id="cb1-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Figure 6</span></span>
<span id="cb1-135"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(all_data,</span>
<span id="cb1-136">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> multiple_est_pred1,</span>
<span id="cb1-137">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(density))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-138">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey80"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-139">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Collinearity) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-140">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-141">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"estimated regression coefficient for first predictor</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">in multiple regression models"</span>)</span>
<span id="cb1-142"></span>
<span id="cb1-143"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Table 1</span></span>
<span id="cb1-144"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(strong.lm, weak.lm, none.lm, nonlinear.lm), glance) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-145">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Dataset =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"strong"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weak"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nonlinear"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-146">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Dataset, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">R²</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> r.squared, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p-value of overall fit</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> p.value) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-147">  knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"html"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-148">  kableExtra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable_styling</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_width =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-149"></span>
<span id="cb1-150"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Figure 7</span></span>
<span id="cb1-151">lexdiv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://janhove.github.io/datasets/LexicalDiversityFrench.csv"</span>)</span>
<span id="cb1-152">ratings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://janhove.github.io/datasets/meanRatingPerText_French.csv"</span>)</span>
<span id="cb1-153">ratings<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Text <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">substr</span>(ratings<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Text, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nchar</span>(ratings<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Text))</span>
<span id="cb1-154">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(ratings, lexdiv, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Text"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"textName"</span>))</span>
<span id="cb1-155"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scatterplot_matrix</span>(d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(meanRating, TTR, nTokens) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-156">                  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sqrt_nTokens =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(nTokens)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-157">                  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>nTokens),</span>
<span id="cb1-158">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean diversity rating"</span>,</span>
<span id="cb1-159">                           <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type/token ratio"</span>,</span>
<span id="cb1-160">                           <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log10 tokens"</span>))</span>
<span id="cb1-161"></span>
<span id="cb1-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Figure 8</span></span>
<span id="cb1-163"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(all_data,</span>
<span id="cb1-164">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> simple_est_pred1,</span>
<span id="cb1-165">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(density))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-166">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey80"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-167">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Collinearity) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-168">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-169">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"estimated regression coefficient for first predictor</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">in simple regression models"</span>)</span>
<span id="cb1-170"></span>
<span id="cb1-171"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Figure 9</span></span>
<span id="cb1-172"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(all_data,</span>
<span id="cb1-173">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> ridge_est_pred1,</span>
<span id="cb1-174">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">after_stat</span>(density))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-175">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey80"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-176">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Collinearity) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-177">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-178">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"estimated regression coefficient for first predictor</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">in ridge regression models"</span>)</span></code></pre></div>
</div>
</section>
<section id="software-versions" class="level2">
<h2 class="anchored" data-anchor-id="software-versions">Software versions</h2>
<p>Please note that I reran the code on this page on August 6, 2023.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.2 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-06
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package     * version date (UTC) lib source
 backports     1.4.1   2021-12-13 [1] CRAN (R 4.3.0)
 bit           4.0.5   2022-11-15 [1] CRAN (R 4.3.0)
 bit64         4.0.5   2020-08-30 [1] CRAN (R 4.3.0)
 broom       * 1.0.5   2023-06-09 [1] CRAN (R 4.3.0)
 cachem        1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr         3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 cli           3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 colorspace    2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 crayon        1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 devtools      2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest        0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 dplyr       * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 ellipsis      0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate      0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi         1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 farver        2.1.1   2022-07-06 [1] CRAN (R 4.3.0)
 fastmap       1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)
 fs            1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics      0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2     * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue          1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gtable        0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 highr         0.9     2021-04-16 [2] CRAN (R 4.2.0)
 hms           1.1.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools     0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets   1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv        1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 httr          1.4.6   2023-05-08 [1] CRAN (R 4.3.0)
 jsonlite      1.8.7   2023-06-29 [1] CRAN (R 4.3.1)
 kableExtra    1.3.4   2021-02-20 [1] CRAN (R 4.3.1)
 knitr         1.39    2022-04-26 [2] CRAN (R 4.2.0)
 labeling      0.4.2   2020-10-20 [1] CRAN (R 4.3.0)
 later         1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lifecycle     1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 lubridate   * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)
 magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 memoise       2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mime          0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 munsell       0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 pillar        1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild      1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig     2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload       1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 prettyunits   1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx      3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis       0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises      1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps            1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr       * 1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6            2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 Rcpp          1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 readr       * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)
 remotes       2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 rlang         1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown     2.21    2023-03-26 [1] CRAN (R 4.3.0)
 rstudioapi    0.14    2022-08-22 [1] CRAN (R 4.3.0)
 rvest         1.0.3   2022-08-19 [1] CRAN (R 4.3.0)
 scales        1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo   1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shiny         1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 stringi       1.7.12  2023-01-11 [1] CRAN (R 4.3.1)
 stringr     * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 svglite       2.1.1   2023-01-10 [1] CRAN (R 4.3.1)
 systemfonts   1.0.4   2022-02-11 [1] CRAN (R 4.3.0)
 tibble      * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyr       * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)
 tidyselect    1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 tidyverse   * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)
 timechange    0.2.0   2023-01-11 [1] CRAN (R 4.3.0)
 tzdb          0.4.0   2023-05-12 [1] CRAN (R 4.3.0)
 urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis       2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8          1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 vctrs         0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 viridisLite   0.4.2   2023-05-02 [1] CRAN (R 4.3.0)
 vroom         1.6.3   2023-04-28 [1] CRAN (R 4.3.0)
 webshot       0.5.5   2023-06-26 [1] CRAN (R 4.3.1)
 withr         2.5.0   2022-03-03 [2] CRAN (R 4.2.0)
 xfun          0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xml2          1.3.3   2021-11-30 [2] CRAN (R 4.2.0)
 xtable        1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 yaml          2.3.5   2022-02-21 [2] CRAN (R 4.2.0)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>multiple regression</category>
  <category>assumptions</category>
  <category>collinearity</category>
  <guid>https://janhove.github.io/posts/2019-09-11-collinearity/index.html</guid>
  <pubDate>Tue, 10 Sep 2019 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Interactions in logistic regression models</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2019-08-07-interactions-logistic/index.html</link>
  <description><![CDATA[ 



<p>When you want to know if the difference between two conditions is larger in one group than in another, you’re interested in the <strong>interaction</strong> between ‘condition’ and ‘group’. Fitting interactions statistically is one thing, and I will assume in the following that you know how to do this. Interpreting statistical interactions, however, is another pair of shoes. In this post, I discuss why this is the case and how it pertains to interactions fitted in logistic regression models.</p>
<section id="the-problem-nonlinear-mappings" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-nonlinear-mappings">The problem: Nonlinear mappings</h2>
<p>The crux of the problem was discussed from a psychologist’s perspective by <a href="http://faculty.washington.edu/gloftus/MiscMissingArticles/Loftus.1978.pdf">Loftus (1978</a>; see also <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3267935/">Wagenmakers et al.&nbsp;2012</a>): Even if you find a statistical interaction between ‘condition’ and ‘group’, this doesn’t necessarily mean that one group is more sensitive to the difference in conditions than the other group. By the same token, even if you <em>don’t</em> find a statistical interaction between ‘condition’ and ‘group’, this doesn’t necessarily suggest that both groups <em>are</em> equally sensitive to the difference in conditions. The reason for this ambiguity is that the measured outcome variable (e.g., test score, reaction time, etc.) need not map linearly onto the latent variable of interest (e.g., proficiency, effort, etc.). For example, a 3-point increase on an arbitrary scale from one condition to another may correspond to a greater gain in actual proficiency on the higher end of the scale than on the lower end. If one group progresses from 7 to 10 points and the other from 15 to 18 points, then, the statistical analysis won’t reveal an interaction between ‘condition’ and ‘group’ in terms of the measured outcome variable, even though there is a greater gain in proficiency for the latter group than for the former. By the same token, a 4-point increase for the first group may correspond to a 3-point increase for the second group in terms of proficiency gained. If this doesn’t make much sense to you, I suggest you read the first seven pages of <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3267935/">Wagenmakers et al.&nbsp;(2012)</a>.</p>
<p>Unfortunately, the problem with interpreting interactions doesn’t vanish if you don’t want to infer latent psychological variables and you stick strictly to observable quantities. For instance, if you want to compare the efficiency of two car makes (red vs.&nbsp;blue) depending on fuel type (petrol vs.&nbsp;diesel), you may not find an interaction between car make and fuel type when you express fuel efficiency in litres per 100 kilometres: There may be, say, a one-litre difference between both fuel types for both car makes (Figure 1, left). But if you express fuel consumption in miles per gallon (or kilometres per litre), you’d observe that the difference in distance travelled per amount of fuel consumed between diesel and petrol is larger for one car make than for the other (Figure 1, right). The reason is that, while both measures (litres/100 km and miles/gallon) are perfectly reasonable and use exactly the same information (distance travelled and fuel burnt), the mapping between them is nonlinear.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-2_008991d27e08543e4b7f278ce4489475">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-08-07-interactions-logistic/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="576"></p>
<figcaption class="figure-caption"><strong>Figure 1.</strong> You may not observe an interaction between fuel type and car make when fuel consumption is expressed as fuel burnt per distance covered (litres per 100 km, left) even though you would observe such an interaction when fuel consumption is expressed as distance covered per unit of fuel burnt (miles per gallon, right).</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="log-odds-odds-and-proportions" class="level2">
<h2 class="anchored" data-anchor-id="log-odds-odds-and-proportions">Log-odds, odds, and proportions</h2>
<p>You encounter the same problem when you fit interactions in a logistic model. The coefficients in logistic models are estimated on the log-odds scale, but such models are more easily interpreted when the coefficients or its predictions are converted to odds (by exponentiating the log-odds) or to proportions (by applying the logistic function to predictions obtained in log-odds). Both the exponential and the logistic function are nonlinear, so that you end up with the same problem as above: Whether or not you observe an interaction may depend on how you express the outcome variable.</p>
<p>(Sidebar: A proportion of 0.80 corresponds to odds of 0.80/(1-0.80) = 4 against 1. By taking the natural logarithm of the odds, you end up with the log-odds of ln(0.80) = 1.39. To arrive back at the odds, exponentiate: exp(1.39) = 4. To arrive back at the proportion, apply the logistic function: 1/(1+exp(-1.39)) = 0.80. All these functions are nonlinear.)</p>
<p>Figure 2 illustrates that a non-crossover interaction if the results are expressed in, say, log-odds needn’t remain an interaction if you express the results in another way.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-3_1e68060729478c6a20e04c55e79a3138">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-08-07-interactions-logistic/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="576"></p>
<figcaption class="figure-caption"><strong>Figure 2.</strong> <em>Top row:</em> The difference in proportions between conditions A and B is the same in groups C and D. When the same results are expressed in odds or log-odds, however, the difference is larger in group D than in group C. <em>Middle row:</em> This time, the difference in odds is the same in both groups, but when expressed in proportions or log-odds, the difference is larger in group C than in group D. <em>Bottom row:</em> The difference in log-odds is the same in both groups. When expressed in odds, it is <em>larger</em> in group D, but when expressed in proportions, it is <em>smaller</em> in group D.</figcaption>
</figure>
</div>
</div>
</div>
<p>What’s the practical upshot of all this? First, before you interpret a non-crossover interaction, read <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3267935/">Wagenmakers et al.&nbsp;(2012)</a>. Second, if you’re working with binary data and you predict a non-crossover interaction in a logistic model, be aware that a significant interaction in terms of the log-odds output by your model needn’t correspond to an interaction in terms of proportions, and vice versa.</p>
</section>
<section id="how-to-check-for-interactions-in-terms-of-proportions" class="level2">
<h2 class="anchored" data-anchor-id="how-to-check-for-interactions-in-terms-of-proportions">How to check for interactions in terms of proportions</h2>
<p>At this point, you may be wondering how you can check whether a significant interaction in terms of log-odds in your own model corresponds to a significant interaction in terms of proportions, too. (If you aren’t, check out this <a href="https://garfield.com/comic/random">random Garfield comic</a> instead.) In the following, I show two ways how you can do this: using parametric bootstrapping and by going Bayesian.</p>
<p>We’ll work with a simple made-up dataset. The question is whether variables AB and CD interact with respect to the outcome variable Successes. For each combination of predictor variables, 1000 cases were observed, among which variable numbers of Successes:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a dataset</span></span>
<span id="cb1-2">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand.grid</span>(</span>
<span id="cb1-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AB =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>),</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CD =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>)</span>
<span id="cb1-5">)</span>
<span id="cb1-6">df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Total <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb1-7">df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Successes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">473</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">524</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">898</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">945</span>)</span>
<span id="cb1-8">df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  AB CD Total Successes
1  A  C  1000       473
2  B  C  1000       524
3  A  D  1000       898
4  B  D  1000       945</code></pre>
</div>
</div>
<section id="using-parametric-bootstrapping" class="level3">
<h3 class="anchored" data-anchor-id="using-parametric-bootstrapping">Using parametric bootstrapping</h3>
<p>First, fit the logistic regression model. Unsurprisingly (since this is a made-up dataset), the interaction effect is significant when expressed in log-odds (0.46, 95% confidence interval: [0.08, 0.85], <em>z</em> = 2.38, <em>p</em> = 0.017):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit a logistic regression model</span></span>
<span id="cb3-2">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(Successes, Total <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Successes) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> AB<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>CD, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"binomial"</span>)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>coefficients</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Estimate Std. Error z value Pr(&gt;|z|)
(Intercept)   -0.108     0.0633   -1.71 8.79e-02
ABB            0.204     0.0896    2.28 2.26e-02
CDD            2.283     0.1222   18.69 6.29e-78
ABB:CDD        0.464     0.1954    2.38 1.74e-02</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">confint</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Waiting for profiling to be done...</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>              2.5 % 97.5 %
(Intercept) -0.2324 0.0159
ABB          0.0287 0.3799
CDD          2.0478 2.5271
ABB:CDD      0.0849 0.8519</code></pre>
</div>
</div>
<p>When expressed in proportions, however, the difference between C and D in condition A is pretty much as large as the difference between C and D in condition B. For this example, we could just as well compute this directly from dataset <code>df</code>, but a more general method is to ask the model to predict the proportions and then compute the differences between them:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predicted proportions in condition A</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AB =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CD =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    1 
0.473 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AB =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CD =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    1 
0.898 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># difference:</span></span>
<span id="cb12-2"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.898</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.473</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.425</code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predicted proportions in condition B</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AB =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CD =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    1 
0.524 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AB =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CD =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    1 
0.945 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># difference:</span></span>
<span id="cb18-2"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.945</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.524</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.421</code></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># difference between differences:</span></span>
<span id="cb20-2"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.425</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.421</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.004</code></pre>
</div>
</div>
<p>0.004 is the estimated interaction effect when expressed on the proportion scale. Now we need to express our uncertainty about this number. Here I do this by means of a parametric bootstrap. If you’ve never heard of bootstrapping, you can read my blog post <a href="http://janhove.github.io/teaching/2016/12/20/bootstrapping"><em>Some illustrations of bootstrapping</em></a>. In a nutshell, we’re going to use the model to simulate new datasets, refit the model on those simulate datasets, and calculate the interaction effect according to these refitted models in the same way as we did above. This will yield a large number of estimated interaction effects (some larger than 0.004, others smaller) on the basis of which we can estimate how large our estimation error could be:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-7_b25735edef00f9636360d127f174cf64">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The following code implements a parametric bootstrap</span></span>
<span id="cb22-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   with 'bs_runs' runs.</span></span>
<span id="cb22-3">bs_runs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span></span>
<span id="cb22-4"></span>
<span id="cb22-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Preallocate matrix to contain predicted proportions per cell</span></span>
<span id="cb22-6">bs_proportions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> bs_runs)</span>
<span id="cb22-7"></span>
<span id="cb22-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate new data from model, refit model, and</span></span>
<span id="cb22-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   obtain predicted proportions a large number of times</span></span>
<span id="cb22-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>bs_runs) {</span>
<span id="cb22-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulate a new outcome from the model</span></span>
<span id="cb22-12">  bs_outcome <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate</span>(m)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sim_1</span>
<span id="cb22-13">  </span>
<span id="cb22-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Refit model on simulated outcome</span></span>
<span id="cb22-15">  bs_m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(bs_outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> AB<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>CD, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"binomial"</span>)</span>
<span id="cb22-16">  </span>
<span id="cb22-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predicted proportion ("response") for each cell according to model bs_m</span></span>
<span id="cb22-18">  bs_proportions[i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(bs_m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>,</span>
<span id="cb22-19">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AB =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CD =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>))</span>
<span id="cb22-20">  bs_proportions[i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(bs_m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>,</span>
<span id="cb22-21">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AB =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CD =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>))</span>
<span id="cb22-22">  bs_proportions[i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(bs_m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>,</span>
<span id="cb22-23">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AB =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CD =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>))</span>
<span id="cb22-24">  bs_proportions[i, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(bs_m, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>,</span>
<span id="cb22-25">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AB =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CD =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>))</span>
<span id="cb22-26">}</span>
<span id="cb22-27"></span>
<span id="cb22-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Take the difference between D and C for condition A</span></span>
<span id="cb22-29">bs_differences_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bs_proportions[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> bs_proportions[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb22-30"></span>
<span id="cb22-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Take the difference between D and C for condition B</span></span>
<span id="cb22-32">bs_differences_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bs_proportions[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> bs_proportions[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb22-33"></span>
<span id="cb22-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Take the difference between these differences</span></span>
<span id="cb22-35">bs_differences_diff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bs_differences_B <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> bs_differences_A</span>
<span id="cb22-36"></span>
<span id="cb22-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot</span></span>
<span id="cb22-38"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(bs_differences_diff, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tomato"</span>,</span>
<span id="cb22-39">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bootstrapped interaction effects</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(in proportions)"</span>,</span>
<span id="cb22-40">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"estimates"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-08-07-interactions-logistic/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="384"></p>
<figcaption class="figure-caption"><strong>Figure 3</strong>. Distribution of the bootstrapped interaction effect in proportions. 95% of this distribution falls between -0.054 and 0.046.</figcaption>
</figure>
</div>
</div>
</div>
<p>The confidence interval about the number 0.004 can be obtained as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 95% confidence interval using the percentile approach</span></span>
<span id="cb23-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(bs_differences_diff, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  2.5%  97.5% 
-0.054  0.046 </code></pre>
</div>
</div>
<p>So while the interaction effect is significant when expressed in log-odds, its <a href="https://statmodeling.stat.columbia.edu/2010/12/21/lets_say_uncert/">uncertainty interval</a> nicely straddles 0 when expressed in proportions. (Obviously, the example was contrived to yield this result.)</p>
</section>
<section id="going-the-bayesian-route" class="level3">
<h3 class="anchored" data-anchor-id="going-the-bayesian-route">Going the Bayesian route</h3>
<p>Alternatively, you can fit the data in a Bayesian model. I’ve used the <code>brm()</code> function from the <code>brms</code> package in a <a href="http://janhove.github.io/analysis/2018/12/20/contrasts-interactions">previous blog post</a>, but its syntax should be fairly transparent. The only real difference (in terms of syntax) between <code>brm()</code> and <code>glm()</code> is in how you specify the outcome variable in a binomial logistic model. In this model (a Bayesian binomial logistic model with uninformative priors), too, the interaction effect is ‘significant’ (not a Bayesian term) when expressed in log-odds (0.47, 95% credible interval: [0.08, 0.86]).</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-9_dcf8258aace45b3245e2dc30388f444a">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms)</span>
<span id="cb25-2">m.brm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(Successes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trials</span>(Total) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> AB<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>CD, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df, </span>
<span id="cb25-3">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"binomial"</span>, </span>
<span id="cb25-4">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb25-5">             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># large number of iter(ations) to reduce</span></span>
<span id="cb25-6">             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   effect of randomness on inferences</span></span>
<span id="cb25-7">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warmup =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb25-8">             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># suppress messages</span></span>
<span id="cb25-9">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">silent =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb25-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m.brm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Family: binomial 
  Links: mu = logit 
Formula: Successes | trials(Total) ~ AB * CD 
   Data: df (Number of observations: 4) 
  Draws: 4 chains, each with iter = 10000; warmup = 1000; thin = 1;
         total post-warmup draws = 36000

Population-Level Effects: 
          Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
Intercept    -0.11      0.06    -0.23     0.01 1.00    24798    28727
ABB           0.20      0.09     0.03     0.38 1.00    21190    23420
CDD           2.29      0.12     2.05     2.53 1.00    19101    22207
ABB:CDD       0.47      0.20     0.09     0.86 1.00    18793    21908

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).</code></pre>
</div>
</div>
<p>Bayesian models generate not just estimates but entire distributions of estimates (the ‘posterior distribution’). We can use these to to output distributions of predicted proportions and of the differences between them:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw predictions from posterior distribution (in log-odds):</span></span>
<span id="cb27-2">brm_predictions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">posterior_linpred</span>(m.brm,</span>
<span id="cb27-3">                                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand.grid</span>(</span>
<span id="cb27-4">                                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AB =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>),</span>
<span id="cb27-5">                                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CD =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>),</span>
<span id="cb27-6">                                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Total =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb27-7">                                       )</span>
<span id="cb27-8">                                     )</span>
<span id="cb27-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Instead of using newdata = expand.grid(...),</span></span>
<span id="cb27-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   you could also generate the 4 distributions</span></span>
<span id="cb27-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   one at a time, e.g.:</span></span>
<span id="cb27-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># brm_predictions_AC &lt;- posterior_linpred(m.brm,</span></span>
<span id="cb27-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                                         newdata = data.frame(</span></span>
<span id="cb27-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                                           AB = "A",</span></span>
<span id="cb27-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                                           CD = "C",</span></span>
<span id="cb27-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                                           Total = 1000</span></span>
<span id="cb27-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                                           )</span></span>
<span id="cb27-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                                         )</span></span>
<span id="cb27-19"></span>
<span id="cb27-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert predictions in log-odds to predictions in proportions:</span></span>
<span id="cb27-21">brm_proportions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(brm_predictions)</span>
<span id="cb27-22"></span>
<span id="cb27-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Take the difference between D and C for condition A</span></span>
<span id="cb27-24">brm_difference_A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> brm_proportions[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> brm_proportions[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb27-25"></span>
<span id="cb27-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Take the difference between D and C for condition B</span></span>
<span id="cb27-27">brm_difference_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> brm_proportions[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> brm_proportions[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb27-28"></span>
<span id="cb27-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Take the difference between these differences</span></span>
<span id="cb27-30">brm_difference_diff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> brm_difference_B <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> brm_difference_A</span>
<span id="cb27-31"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(brm_difference_diff, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>,</span>
<span id="cb27-32">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posterior distribution of interaction</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(in proportions)"</span>,</span>
<span id="cb27-33">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"estimates"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-08-07-interactions-logistic/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="384"></p>
<figcaption class="figure-caption"><strong>Figure 4.</strong> Posterior distribution of the interaction effect in proportions. 95% of this distribution falls between -0.054 and 0.047.</figcaption>
</figure>
</div>
</div>
</div>
<p>The credible interval about the number 0.004 can be obtained as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 95% credible interval</span></span>
<span id="cb28-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(brm_difference_diff, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   2.5%   97.5% 
-0.0533  0.0460 </code></pre>
</div>
</div>
<p>The parametric and the bootstrap approach thus yield essentially the same results in this case.</p>
</section>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Loftus, Geffrey R. 1978. On interpretation of interactions. <em>Memory &amp; Cognition</em> 6(3). 312-319.</p>
<p>Wagenmakers, Eric-Jan, Angelos-Miltiadis Krypotos, Amy H. Criss and Geoff Iverson. 2012. On the interpretation of removable interactions: A survey of the field 33 years after Loftus. <em>Memory &amp; Cognition</em> 40(2). 145-160.</p>
</section>
<section id="software-versions" class="level2">
<h2 class="anchored" data-anchor-id="software-versions">Software versions</h2>
<p>Please note that I reran the code on this page on August 6, 2023.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.2 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-06
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package        * version date (UTC) lib source
 abind            1.4-5   2016-07-21 [1] CRAN (R 4.3.1)
 backports        1.4.1   2021-12-13 [1] CRAN (R 4.3.0)
 base64enc        0.1-3   2015-07-28 [1] CRAN (R 4.3.0)
 bayesplot        1.10.0  2022-11-16 [1] CRAN (R 4.3.1)
 bridgesampling   1.1-2   2021-04-16 [1] CRAN (R 4.3.1)
 brms           * 2.19.0  2023-03-14 [1] CRAN (R 4.3.1)
 Brobdingnag      1.2-9   2022-10-19 [1] CRAN (R 4.3.1)
 cachem           1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr            3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 checkmate        2.2.0   2023-04-27 [1] CRAN (R 4.3.1)
 cli              3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 coda             0.19-4  2020-09-30 [1] CRAN (R 4.3.1)
 codetools        0.2-19  2023-02-01 [4] CRAN (R 4.2.2)
 colorspace       2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 colourpicker     1.2.0   2022-10-28 [1] CRAN (R 4.3.1)
 crayon           1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 crosstalk        1.2.0   2021-11-04 [1] CRAN (R 4.3.1)
 curl             5.0.1   2023-06-07 [1] CRAN (R 4.3.1)
 devtools         2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest           0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 distributional   0.3.2   2023-03-22 [1] CRAN (R 4.3.1)
 dplyr          * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 DT               0.28    2023-05-18 [1] CRAN (R 4.3.1)
 dygraphs         1.1.1.6 2018-07-11 [1] CRAN (R 4.3.1)
 ellipsis         0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate         0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi            1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 farver           2.1.1   2022-07-06 [1] CRAN (R 4.3.0)
 fastmap          1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 forcats        * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)
 fs               1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics         0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2        * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue             1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gridExtra        2.3     2017-09-09 [1] CRAN (R 4.3.0)
 gtable           0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 gtools           3.9.4   2022-11-27 [1] CRAN (R 4.3.1)
 hms              1.1.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools        0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets      1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv           1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 igraph           1.5.0.1 2023-07-23 [1] CRAN (R 4.3.1)
 inline           0.3.19  2021-05-31 [1] CRAN (R 4.3.1)
 jsonlite         1.8.7   2023-06-29 [1] CRAN (R 4.3.1)
 knitr            1.39    2022-04-26 [2] CRAN (R 4.2.0)
 later            1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lattice          0.21-8  2023-04-05 [4] CRAN (R 4.3.0)
 lifecycle        1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 loo              2.6.0   2023-03-31 [1] CRAN (R 4.3.1)
 lubridate      * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)
 magrittr         2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 markdown         1.7     2023-05-16 [1] CRAN (R 4.3.0)
 MASS             7.3-60  2023-05-04 [4] CRAN (R 4.3.1)
 Matrix           1.6-0   2023-07-08 [4] CRAN (R 4.3.1)
 matrixStats      1.0.0   2023-06-02 [1] CRAN (R 4.3.1)
 memoise          2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mime             0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI           0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 munsell          0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 mvtnorm          1.2-2   2023-06-08 [1] CRAN (R 4.3.1)
 nlme             3.1-162 2023-01-31 [4] CRAN (R 4.2.2)
 pillar           1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild         1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig        2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload          1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 plyr             1.8.8   2022-11-11 [1] CRAN (R 4.3.1)
 posterior        1.4.1   2023-03-14 [1] CRAN (R 4.3.1)
 prettyunits      1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx         3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis          0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises         1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps               1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr          * 1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6               2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 Rcpp           * 1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 RcppParallel     5.1.7   2023-02-27 [1] CRAN (R 4.3.1)
 readr          * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)
 remotes          2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 reshape2         1.4.4   2020-04-09 [1] CRAN (R 4.3.1)
 rlang            1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown        2.21    2023-03-26 [1] CRAN (R 4.3.0)
 rstan            2.26.22 2023-08-01 [1] local
 rstantools       2.3.1.1 2023-07-18 [1] CRAN (R 4.3.1)
 rstudioapi       0.14    2022-08-22 [1] CRAN (R 4.3.0)
 scales           1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo      1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shiny            1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 shinyjs          2.1.0   2021-12-23 [1] CRAN (R 4.3.1)
 shinystan        2.6.0   2022-03-03 [1] CRAN (R 4.3.1)
 shinythemes      1.2.0   2021-01-25 [1] CRAN (R 4.3.1)
 StanHeaders      2.26.27 2023-06-14 [1] CRAN (R 4.3.1)
 stringi          1.7.12  2023-01-11 [1] CRAN (R 4.3.1)
 stringr        * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 tensorA          0.36.2  2020-11-19 [1] CRAN (R 4.3.1)
 threejs          0.3.3   2020-01-21 [1] CRAN (R 4.3.1)
 tibble         * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyr          * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)
 tidyselect       1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 tidyverse      * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)
 timechange       0.2.0   2023-01-11 [1] CRAN (R 4.3.0)
 tzdb             0.4.0   2023-05-12 [1] CRAN (R 4.3.0)
 urlchecker       1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis          2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8             1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 V8               4.3.0   2023-04-08 [1] CRAN (R 4.3.0)
 vctrs            0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 withr            2.5.0   2022-03-03 [2] CRAN (R 4.2.0)
 xfun             0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xtable           1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 xts              0.13.1  2023-04-16 [1] CRAN (R 4.3.1)
 yaml             2.3.5   2022-02-21 [2] CRAN (R 4.2.0)
 zoo              1.8-12  2023-04-13 [1] CRAN (R 4.3.1)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>logistic regression</category>
  <category>tutorial</category>
  <category>bootstrapping</category>
  <category>Bayesian statistics</category>
  <category>brms</category>
  <guid>https://janhove.github.io/posts/2019-08-07-interactions-logistic/index.html</guid>
  <pubDate>Tue, 06 Aug 2019 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Walkthrough: A significance test for a two-group comparison</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2019-04-16-walkthrough-p-value/index.html</link>
  <description><![CDATA[ 



<p>I wrote an R function that’s hopefully useful to teach students what significance tests do and how they can and can’t be interpreted.</p>
<p><strong>Update (2023-08-06):</strong> By now, this function has long been integrated in the <code>cannonball</code> package. I’ve edited this blog post correspondingly. The installation instructions for the <code>cannonball</code> package are available from its <a href="https://github.com/janhove/cannonball">GitHub page</a>.</p>
<p>The basic use is simple. Just run <code>walkthrough_p()</code> and follow the on-screen instructions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">cannonball<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">walkthrough_p</span>()</span></code></pre></div>
</div>
<section id="what-does-the-function-do" class="level2">
<h2 class="anchored" data-anchor-id="what-does-the-function-do">What does the function do?</h2>
<p>Data are generated from a normal distribution with the requested standard deviation. Then, the data points are randomly assigned to two equal-sized groups. Data points in the intervention group receive a boost as specified by <code>diff</code>. Finally, a significance test is run on the data.</p>
<p>By default, the significance test is a two-sample Student’s t-test. Technically, the p-value from this test is the probability that a t-statistic larger than the one observed would’ve been observed if only chance were at play, but the walkthrough text says that is the probability that a mean difference larger than the one observed would’ve been observed if only chance were at play. That is, I use the t-test as an approximation to a permutation test. Switch on pedant mode if you want to run a permutation test.</p>
</section>
<section id="parameters" class="level2">
<h2 class="anchored" data-anchor-id="parameters">Parameters</h2>
<ul>
<li><code>n</code>: the number of data points per group</li>
<li><code>diff</code>: The boost that participants in the intervention group receive.</li>
<li><code>sd</code>: The standard deviation of the normal distribution from which the data were generated.</li>
<li><code>showdata</code>: Do you want to output a dataframe containing the plotted data (TRUE) or not (FALSE, default)?</li>
<li><code>pedant</code>: Do you want to run the significance test in pedant mode (TRUE; performs a permutation test) or not (FALSE, default; performs Student’s t-test)?</li>
</ul>
</section>
<section id="examples" class="level2">
<h2 class="anchored" data-anchor-id="examples">Examples</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">cannonball<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">walkthrough_p</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diff =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save data and double check results</span></span>
<span id="cb2-4">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cannonball<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">walkthrough_p</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diff =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, </span>
<span id="cb2-5">                                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showdata =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(score <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var.equal =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run in pedant mode (= permutation test)</span></span>
<span id="cb2-9">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cannonball<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">walkthrough_p</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diff =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, </span>
<span id="cb2-10">                                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pedant =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showdata =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(score <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var.equal =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>significance</category>
  <category>R</category>
  <category>teaching materials</category>
  <guid>https://janhove.github.io/posts/2019-04-16-walkthrough-p-value/index.html</guid>
  <pubDate>Mon, 15 Apr 2019 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Guarantees in the long run vs. interpreting the data at hand: Two analyses of clustered data</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2019-01-14-clustered-data-different-results/index.html</link>
  <description><![CDATA[ 



<p>An analytical procedure may have excellent long-run properties but still produce nonsensical results in individual cases. I recently encountered a real-life illustration of this, but since those data aren’t mine, I’ll use simulated data with similar characteristics for this blog post.</p>
<section id="the-data" class="level2">
<h2 class="anchored" data-anchor-id="the-data">The data</h2>
<p>The illustration occurred for a study with clustered data (pupils in classes) in which there were only one or two clusters per condition. In the dataset that I simulated, there are three classes that were assigned in their entirety to either the control condition (1 class) or the intervention condition (2 classes):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read in data</span></span>
<span id="cb1-2">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://homeweb.unifr.ch/VanhoveJ/Pub/Data/simulated_clustered_data.csv"</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pupils per class and per condition</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xtabs</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> class <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> group_class, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     group_class
class control intervention
    1      17            0
    2       0           13
    3       0           18</code></pre>
</div>
</div>
<p>Crucially, the clusters in the data need to be taken into consideration during the analysis (see Vanhove 2015). Having just one or two clusters per condition is far from ideal, but this dataset is, in principle, analysable. Let’s start by plotting the data:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d,</span>
<span id="cb3-3">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(class),</span>
<span id="cb3-4">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> outcome,</span>
<span id="cb3-5">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> group_class)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-01-14-clustered-data-different-results/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="384"></p>
<figcaption class="figure-caption"><strong>Figure 1.</strong> Simulated data for a cluster-randomised experiment in which one class (= cluster) was assigned to the control condition and two were assigned to the intervention condition.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="analysis-1-a-hierarchical-model" class="level2">
<h2 class="anchored" data-anchor-id="analysis-1-a-hierarchical-model">Analysis 1: A hierarchical model</h2>
<p>One option is to analyse these data in a hierarchical (mixed-effects) model in which random effects are used to account for class-to-class variability. Based on the present dataset, this variability is in fact estimated to be non-existent: the estimated standard deviation of the distribution of class effects is essentially 0 (0.00003). This seems implausible - not least of all because I simulated data with a class effect. The estimated intervention effect, meanwhile is -0.24 with a standard error of 0.31, which means that the intervention effect is not significant in this analysis (<em>t</em>(1) = 0.77, <em>p</em> = 0.58).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(nlme)</span>
<span id="cb4-2">lme_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lme</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group_class, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">random =</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>class, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(lme_fit)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Linear mixed-effects model fit by REML
  Data: d 
    AIC   BIC logLik
  146.2 153.5 -69.11

Random effects:
 Formula: ~1 | class
        (Intercept) Residual
StdDev:   3.079e-05    1.016

Fixed effects:  outcome ~ group_class 
                          Value Std.Error DF t-value p-value
(Intercept)              0.1793    0.2463 45  0.7278  0.4705
group_classintervention -0.2370    0.3065  1 -0.7734  0.5809
 Correlation: 
                        (Intr)
group_classintervention -0.804

Standardized Within-Group Residuals:
    Min      Q1     Med      Q3     Max 
-2.1958 -0.4982 -0.1049  0.5869  2.5309 

Number of Observations: 48
Number of Groups: 3 </code></pre>
</div>
</div>
<p>This procedure is somewhat too conservative, which means that the p-values it produces tend to be too large. Alternatively, you could fit the mixed-effects model using the <code>lmer()</code> function from the <code>lme4</code> package, but then you have to take care that your p-values aren’t too low. But in practical terms, this doesn’t matter much: with a t-value of 0.77, you’re never going to end up with a p-value anywhere close to 0.05.</p>
</section>
<section id="analysis-2-a-t-test-on-the-group-means" class="level2">
<h2 class="anchored" data-anchor-id="analysis-2-a-t-test-on-the-group-means">Analysis 2: A t-test on the group means</h2>
<p>If mixed-effects models aren’t your thing, you may be tempted to run an analysis that is both easy to report and perfectly accounts for the effect of clustering on inferential statistics: you’d compute the mean outcome per class and then run a t-test on the class means instead. This procedure has excellent long-run properties: it returns a significant result for the intervention effect in 5% of cases when no such effect exists. That is, it isn’t too liberal (as t-test on the individual-level data would be) nor too conservative (like the analysis with <code>lme()</code>). (Incidentally, an analysis on individual level data would give you pretty much the same result as the <code>lme_fit</code> model above for the present data – but as a <em>procedure</em> it’s much too liberal.)</p>
<p>For the present data, this means that we first compute our three class means and then run a t-test on these three means (i.e., a t-test with one degree of freedom).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute summary per class (cluster):</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  mean outcome, standard deviation of outcome,</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  n data points, estimated standard error of mean outcome</span></span>
<span id="cb6-4">d_summary <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(class, group_class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_outcome =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(outcome),</span>
<span id="cb6-7">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd_outcome =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(outcome),</span>
<span id="cb6-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb6-9">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se_mean =</span> sd_outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()),</span>
<span id="cb6-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span>)</span>
<span id="cb6-11">d_summary</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 6
  class group_class  mean_outcome sd_outcome     n se_mean
  &lt;int&gt; &lt;chr&gt;               &lt;dbl&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt;
1     1 control            0.179       1.30     17   0.315
2     2 intervention      -0.0587      0.864    13   0.240
3     3 intervention      -0.0571      0.825    18   0.194</code></pre>
</div>
</div>
<p>I write the t-test in the form of a linear model as the output is more informative.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># t-test on class means</span></span>
<span id="cb8-2">ttest_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(mean_outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group_class, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d_summary)</span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(ttest_fit)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = mean_outcome ~ group_class, data = d_summary)

Residuals:
        1         2         3 
 7.69e-20 -7.87e-04  7.87e-04 

Coefficients:
                        Estimate Std. Error t value Pr(&gt;|t|)
(Intercept)              0.17926    0.00111     161   0.0040
group_classintervention -0.23717    0.00136    -174   0.0037

Residual standard error: 0.00111 on 1 degrees of freedom
Multiple R-squared:     1,  Adjusted R-squared:     1 
F-statistic: 3.03e+04 on 1 and 1 DF,  p-value: 0.00366</code></pre>
</div>
</div>
<p>The estimated intervention effect is still -0.24, but now the standard error is merely 0.001, yielding a t-value of a whopping 174. Even with one degree of freedom, this corresponds to a highly significant effect (p = 0.004). (The data were simulated without an intervention effect, so this is a Type-I error. But you wouldn’t know this.)</p>
</section>
<section id="which-analysis-is-better" class="level2">
<h2 class="anchored" data-anchor-id="which-analysis-is-better">Which analysis is better?</h2>
<p>So we’ve got two analyses that are both defensible but give rise to wildly different inferences. The estimate for the class-by-class variability in the <code>lme()</code> fit seems implausibly small, but the estimated intervention effect and its standard error wouldn’t raise any eyebrows. By contrast, the t-test on the class means seems to produce absurdly low standard errors – not to mention a ridiculous R² value of 1. Yet it is this latter procedure that has the better long-run characteristics. So which analysis is the better one?</p>
<p>The boring answer is that it depends on what you’re looking for in an analysis. The second analysis yields a very low p-value, but it would be incorrect to say that it is <em>too</em> low: If you simulate lots and lots of datasets similar in structure to the one analysed (clustered data with one and two clusters per condition, respectively) and without any intervention effect present, this procedure will only find a p-value lower than 0.05 in 5% of cases, and it’ll only find a p-value lower than 0.004 in 0.4% of cases. If you analyse those same simulated datasets using <code>lme()</code>, you may not find a single significant result (I didn’t in 20,000 simulations). So if the long-run behaviour of the analytical procedure is your chief concern, running a t-test on the class means is the better option.</p>
<p>You may, however, also be interested in estimating the intervention effect and, crucially, quantifying your uncertainty about this estimate in the form of a standard error or confidence interval. In this respect, the hierarchical model produces a more plausible result - even though for want of data, this uncertainty estimate may be highly inaccurate.</p>
<p>(The actual simulation-to-simulation variation was such that 90% of the estimated intervention effects lay between -0.83 and 0.83, a range of 1.65 units. The 90% confidence interval for the intervention effect in <code>ttest_fit</code> ranges from -0.25 to -0.23, for a range of merely 0.02 units. For <code>lme_fit</code>, it ranges from -2.17 to 1.70, for a range of 3.87 units. So the true accuracy lies pretty much half-way between these two estimates. But in real life, you’d only have the confidence intervals to go by, and one spanning merely 0.02 units would be considerably more suspicious than one spanning nearly 4 units. Incidentally, if you fit the same model using <code>lme4</code>’s <code>lmer()</code> function, you get a 90% confidence interval from -0.74 to 0.26, though with a couple of warnings.)</p>
</section>
<section id="whats-causing-the-problem" class="level2">
<h2 class="anchored" data-anchor-id="whats-causing-the-problem">What’s causing the problem?</h2>
<p>The ridiculously low standard errors and huge R² values in <code>ttest_fit</code> are consequences of the small residuals that this model produces:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">resid</span>(ttest_fit)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         1          2          3 
 7.691e-20 -7.869e-04  7.869e-04 </code></pre>
</div>
</div>
<p>The first value is the residual for the class that served as the single control class. The corresponding fitted value equals the class mean, so the residual is 0 (which is what the ‘e-20’ part essentially means). The second and third value are the residuals for the classes that served as the intervention classes. Their fitted values equal the mean of both class means, and the residuals are the deviations from that mean of means. Since these class means are so similar, the deviations are small, too. Crucially, the similarity in the means of classes 2 and 3 is atypical: Based on the variability <em>within</em> each class, we’d expect their means to differ more than they do.</p>
<p>To demonstrate this, let’s first compute the standard deviation of these two class means:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(d_summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mean_outcome[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.001113</code></pre>
</div>
</div>
<p>Now we take bootstrap samples within classes 2 and 3, compute their respective means, and compute the standard deviation of these means.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split off classes 2 and 3</span></span>
<span id="cb14-2">class2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(class <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb14-3">class3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(class <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb14-4"></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bootstrap the outcomes of class 2 and take the mean</span></span>
<span id="cb14-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bootstrap the outcomes of class 3 and take the mean</span></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output the standard deviation of the bootstrapped means</span></span>
<span id="cb14-8">sds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span>, {</span>
<span id="cb14-9">  mean_bs_class2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(class2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>outcome, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb14-10">  mean_bs_class3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(class3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>outcome, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb14-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(mean_bs_class2, mean_bs_class3))</span>
<span id="cb14-12">}</span>
<span id="cb14-13">)</span>
<span id="cb14-14"></span>
<span id="cb14-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the standard deviations of the bootstrapped means</span></span>
<span id="cb14-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(sds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb14-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(d_summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mean_outcome[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2019-01-14-clustered-data-different-results/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="384"></p>
<figcaption class="figure-caption"><em>Figure 2.</em> Bootstrapping the outcomes within each class demonstrates that the class means are more similar to each other than they ordinarily would be.</figcaption>
</figure>
</div>
</div>
</div>
<p>As Figure 2 shows, given the variability within each class, you would typically expect their class means to differ considerably more than they actually do. In fact, only in about 0.4% of bootstrap runs did the class means differ less than in our dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(sds <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(d_summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mean_outcome[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.00365</code></pre>
</div>
</div>
<p>The <code>ttest_fit</code> model doesn’t know that the class means are much more similar to each other than they normally would be, so it doesn’t account for this. (Mind you, if only the long-run behaviour of the model is of importance, it doesn’t <em>need</em> to know this.)</p>
</section>
<section id="conclusions" class="level2">
<h2 class="anchored" data-anchor-id="conclusions">Conclusions</h2>
<p>It isn’t unheard of that different defensible analyses of the same data lead to different inferences (see, e.g., Poarch et al., 2018, and Silberzahn et al., 2018). But I think it’s instructive to come across a case where the objectives of achieving the desired long-run behaviour and of sensibly interpreting the data that were actually observed clash.</p>
<p>If I had to analyse a dataset like this one in earnest, I would look into fitting a Bayesian model with reasonably informed priors in order to offset the lack of information present in the data. (A hierarchical model with <code>brms</code>’s default priors experiences convergence issues.) If that doesn’t work, I’d probably fit a frequentist hierarchical model (using <code>lme</code> or <code>lmer()</code>) as the results it yields are more plausible in the present case than that those of the class mean analysis.</p>
<p>Oh, and I’d rant to whoever collected these data that they should’ve dropped by before running the study :) I’d then have told them that it would be great if they could collect data in two or three more classes. Or that it might perhaps be possible to assign half of the pupils within each class to each condition. Still, they were extremely unlucky that the class means were so similar given the within-class variance.</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Gregory J. Poarch, Jan Vanhove and Raphael Berthele. 2018. <a href="https://doi.org/10.1177/1367006918763132">The effect of bidialectalism on executive function.</a> <em>International Journal of Bilingualism</em>.</p>
<p>R. Silberzahn et al.. 2018. <a href="https://doi.org/10.1177/2515245917747646">Many analysts, one data set: Making transparent how variations in analytic choices affect results.</a> <em>Advances in Methods and Practices in Psychological Science</em> 1(3). 337-356.</p>
<p>Jan Vanhove. 2015. <a href="http://dx.doi.org/10.14746/ssllt.2015.5.1.7">Analyzing randomized controlled interventions: Three notes for applied linguists.</a> <em>Studies in Second Language Learning and Teaching</em> 5(1). 135-152.</p>
</section>
<section id="software-versions" class="level2">
<h2 class="anchored" data-anchor-id="software-versions">Software versions</h2>
<p>Please note that I reran the code on this page on August 6, 2023.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.3 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-27
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package     * version date (UTC) lib source
 cachem        1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr         3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 cli           3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 colorspace    2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 crayon        1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 devtools      2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest        0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 dplyr       * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 ellipsis      0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate      0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi         1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 farver        2.1.1   2022-07-06 [1] CRAN (R 4.3.0)
 fastmap       1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)
 fs            1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics      0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2     * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue          1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gtable        0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 hms           1.1.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools     0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets   1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv        1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 jsonlite      1.8.7   2023-06-29 [1] CRAN (R 4.3.1)
 knitr         1.39    2022-04-26 [2] CRAN (R 4.2.0)
 labeling      0.4.2   2020-10-20 [1] CRAN (R 4.3.0)
 later         1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lattice       0.21-8  2023-04-05 [4] CRAN (R 4.3.0)
 lifecycle     1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 lubridate   * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)
 magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 memoise       2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mime          0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 munsell       0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 nlme        * 3.1-162 2023-01-31 [4] CRAN (R 4.2.2)
 pillar        1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild      1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig     2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload       1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 prettyunits   1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx      3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis       0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises      1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps            1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr       * 1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6            2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 Rcpp          1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 readr       * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)
 remotes       2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 rlang         1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown     2.21    2023-03-26 [1] CRAN (R 4.3.0)
 rstudioapi    0.14    2022-08-22 [1] CRAN (R 4.3.0)
 scales        1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo   1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shiny         1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 stringi       1.7.12  2023-01-11 [1] CRAN (R 4.3.1)
 stringr     * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 tibble      * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyr       * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)
 tidyselect    1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 tidyverse   * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)
 timechange    0.2.0   2023-01-11 [1] CRAN (R 4.3.0)
 tzdb          0.4.0   2023-05-12 [1] CRAN (R 4.3.0)
 urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis       2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8          1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 vctrs         0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 withr         2.5.0   2022-03-03 [2] CRAN (R 4.2.0)
 xfun          0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xtable        1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 yaml          2.3.5   2022-02-21 [2] CRAN (R 4.2.0)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>mixed-effects models</category>
  <category>cluster-randomised experiments</category>
  <guid>https://janhove.github.io/posts/2019-01-14-clustered-data-different-results/index.html</guid>
  <pubDate>Sun, 13 Jan 2019 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Baby steps in Bayes: Recoding predictors and homing in on specific comparisons</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2018-12-20-contrasts-interaction/index.html</link>
  <description><![CDATA[ 



<p>Interpreting models that take into account a host of possible interactions between predictor variables can be a pain, especially when some of the predictors contain more than two levels. In this post, I show how I went about fitting and then making sense of a multilevel model containing a three-way interaction between its categorical fixed-effect predictors. To this end, I used the <a href="https://github.com/paul-buerkner/brms"><code>brms</code></a> package, which makes it relatively easy to fit Bayesian models using a notation that hardly differs from the one used in the popular <code>lme4</code> package. I won’t discuss the Bayesian bit much here (I don’t think it’s too important), and I will instead cover the following points:</p>
<ol type="1">
<li>How to fit a multilevel model with <code>brms</code> using <code>R</code>’s default way of handling categorical predictors (treatment coding).</li>
<li>How to interpret this model’s fixed parameter estimates.</li>
<li>How to visualise the modelled effects.</li>
<li>How to recode predictors to obtain more useful parameter estimates.</li>
<li>How to extract information from the model to home in on specific comparisons.</li>
</ol>
<section id="the-data" class="level2">
<h2 class="anchored" data-anchor-id="the-data">The data</h2>
<p>For a longitudinal project, 328 children wrote narrative and argumentative texts in Portuguese at three points in time. About a third of the children hailed from Portugal, about a third were children of Portuguese heritage living in the French-speaking part of Switzerland, and about a third were children of Portuguese heritage living in the German-speaking part of Switzerland. Not all children wrote both kinds of texts at all three points in time, and 1,040 texts were retained for the analysis. For each text, we computed the Guiraud index, which is a function of the number of words (tokens) and the number of <em>different</em> words (types) in the texts. Higher values are assumed to reflect greater diversity in vocabulary use.</p>
<p>If you want to know more about this project, check out Bonvin et al.&nbsp;(2018), Lambelet et al.&nbsp;(2017a,b) and Vanhove et al.&nbsp;(2019); you’ll find the references at the bottom of this page.</p>
<p><strong>Update (2023-08-06):</strong> I ran all of the R code again with newer software versions when converting the format of this blog.</p>
<p>Read in the data:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-2_5fd675094ea081642804e6ed87094a1c">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load tidyverse suite</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read in data from my webspace</span></span>
<span id="cb1-5">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://homeweb.unifr.ch/VanhoveJ/Pub/Data/portuguese_guiraud.csv"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Need to code factors explicitly</span></span>
<span id="cb1-8">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Group    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Group)</span>
<span id="cb1-9">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>TextType <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>TextType)</span>
<span id="cb1-10">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time     <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time)</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>spc_tbl_ [1,040 × 6] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ Group   : Factor w/ 3 levels "monolingual Portuguese",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ Class   : chr [1:1040] "monolingual Portuguese_AI" "monolingual Portuguese_AI" "monolingual Portuguese_AI" "monolingual Portuguese_AI" ...
 $ Child   : chr [1:1040] "monolingual Portuguese_AI_1" "monolingual Portuguese_AI_1" "monolingual Portuguese_AI_1" "monolingual Portuguese_AI_10" ...
 $ Time    : Factor w/ 3 levels "T1","T2","T3": 1 1 2 1 1 3 3 1 3 1 ...
 $ TextType: Factor w/ 2 levels "argumentative",..: 1 2 2 1 2 1 2 2 2 1 ...
 $ Guiraud : num [1:1040] 4.73 5.83 3.9 4.22 4.57 ...
 - attr(*, "spec")=
  .. cols(
  ..   Group = col_character(),
  ..   Class = col_character(),
  ..   Child = col_character(),
  ..   Time = col_character(),
  ..   TextType = col_character(),
  ..   Guiraud = col_double()
  .. )
 - attr(*, "problems")=&lt;externalptr&gt; </code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                    Group        Class              Child           Time    
 monolingual Portuguese:360   Length:1040        Length:1040        T1:320  
 Portuguese-French     :360   Class :character   Class :character   T2:340  
 Portuguese-German     :320   Mode  :character   Mode  :character   T3:380  
                                                                            
                                                                            
                                                                            
          TextType      Guiraud    
 argumentative:560   Min.   :2.32  
 narrative    :480   1st Qu.:3.93  
                     Median :4.64  
                     Mean   :4.75  
                     3rd Qu.:5.48  
                     Max.   :8.43  </code></pre>
</div>
</div>
<p>Let’s also plot the data. Incidentally, and contrary to popular belief, I don’t write <code>ggplot</code> code such as this from scratch. What you see is the result of drawing and redrawing (see comments).</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-3_4fc648f55fb3bf21c5ec379f9f91f622">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot Guiraud scores</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d,</span>
<span id="cb5-3">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Time,</span>
<span id="cb5-4">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Guiraud,</span>
<span id="cb5-5">           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reorder: sort the Groups by their median Guiraud value</span></span>
<span id="cb5-6">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(Group, Guiraud, median))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I prefer empty (shape = 1) to filled circles (shape = 16).</span></span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_grid</span>(. <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> TextType) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The legend name ("Group") seems superfluous, so suppress it;</span></span>
<span id="cb5-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the default colours contain red and green, which can be hard to</span></span>
<span id="cb5-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  distinguish for some people.</span></span>
<span id="cb5-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qual"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># I prefer the black and white look to the default grey one.</span></span>
<span id="cb5-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Put the legend at the bottom rather than on the right</span></span>
<span id="cb5-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2018-12-20-contrasts-interaction/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="576"></p>
<figcaption class="figure-caption"><strong>Figure 1.</strong> The texts’ Guiraud values by time of data collection, text type, and language background.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="a-multilevel-model-with-treatment-coding" class="level2">
<h2 class="anchored" data-anchor-id="a-multilevel-model-with-treatment-coding">A multilevel model with treatment coding</h2>
<p>Our data are nested: Each child wrote up to 6 texts, and the data were collected in classes, with each child belong to one class. It’s advisable to take such nesting into account since you may end up overestimating your degree of certainty about the results otherwise. I mostly use <code>lme4</code>’s <code>lmer()</code> and <code>glmer()</code> functions to handle such data, but as will become clearer in a minute, <code>brms</code>’s <code>brm()</code> function offers some distinct advantages. So let’s load that package:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-4_4864913cf7f8beec7fc61b15469bbb5b">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms)</span></code></pre></div>
</div>
<section id="fitting-the-model" class="level3">
<h3 class="anchored" data-anchor-id="fitting-the-model">Fitting the model</h3>
<p>We’ll fit a model with a three-way fixed-effect interaction between <code>Time</code>, <code>TextType</code> and <code>Group</code> as well as with by-<code>Child</code> and by-<code>Class</code> random intercepts. In order to take into account the possibility that children vary in the development of their lexical diversity, we add a random slope of <code>Time</code> by <code>Child</code>, and in order to take into account the possibility that their lexical diversity varies by text type, we do the same for <code>TextType</code>. Similarly, we add by-<code>Class</code> random slopes for <code>Time</code> and <code>TextType</code>.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-5_ff84924836479965f5d4a231c1f63b23">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">m_default <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(Guiraud <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TextType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-2">                   (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TextType <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-3">                   (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TextType <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Child),</span>
<span id="cb7-4">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>,</span>
<span id="cb7-5">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">silent =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb7-6">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>),</span>
<span id="cb7-7">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running /usr/lib/R/bin/R CMD SHLIB foo.c
using C compiler: ‘gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0’
gcc -I"/usr/share/R/include" -DNDEBUG   -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/Rcpp/include/"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/unsupported"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/BH/include" -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/StanHeaders/include/src/"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/StanHeaders/include/"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppParallel/include/"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/rstan/include" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DUSE_STANC3 -DSTRICT_R_HEADERS  -DBOOST_PHOENIX_NO_VARIADIC_EXPRESSION  -DBOOST_NO_AUTO_PTR  -include '/home/jan/R/x86_64-pc-linux-gnu-library/4.3/StanHeaders/include/stan/math/prim/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1       -fpic  -g -O2 -ffile-prefix-map=/build/r-base-1upgAf/r-base-4.3.1=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c foo.c -o foo.o
In file included from /home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/Core:88,
                 from /home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/Dense:1,
                 from /home/jan/R/x86_64-pc-linux-gnu-library/4.3/StanHeaders/include/stan/math/prim/fun/Eigen.hpp:22,
                 from &lt;command-line&gt;:
/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name ‘namespace’
  628 | namespace Eigen {
      | ^~~~~~~~~
/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:17: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  628 | namespace Eigen {
      |                 ^
In file included from /home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/Dense:1,
                 from /home/jan/R/x86_64-pc-linux-gnu-library/4.3/StanHeaders/include/stan/math/prim/fun/Eigen.hpp:22,
                 from &lt;command-line&gt;:
/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/Core:96:10: fatal error: complex: No such file or directory
   96 | #include &lt;complex&gt;
      |          ^~~~~~~~~
compilation terminated.
make: *** [/usr/lib/R/etc/Makeconf:191: foo.o] Error 1</code></pre>
</div>
</div>
</section>
<section id="interpreting-the-parameter-estimates" class="level3">
<h3 class="anchored" data-anchor-id="interpreting-the-parameter-estimates">Interpreting the parameter estimates</h3>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-6_1bb13395fbaa8c7621406930e8f1e5c4">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m_default)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Family: gaussian 
  Links: mu = identity; sigma = identity 
Formula: Guiraud ~ Time * TextType * Group + (1 + TextType + Time | Class) + (1 + TextType + Time | Child) 
   Data: d (Number of observations: 1040) 
  Draws: 4 chains, each with iter = 4000; warmup = 2000; thin = 1;
         total post-warmup draws = 8000

Group-Level Effects: 
~Child (Number of levels: 328) 
                                 Estimate Est.Error l-95% CI u-95% CI Rhat
sd(Intercept)                        0.42      0.05     0.33     0.52 1.00
sd(TextTypenarrative)                0.26      0.09     0.07     0.43 1.01
sd(TimeT2)                           0.09      0.07     0.00     0.25 1.01
sd(TimeT3)                           0.39      0.09     0.19     0.55 1.01
cor(Intercept,TextTypenarrative)     0.23      0.28    -0.26     0.80 1.00
cor(Intercept,TimeT2)               -0.10      0.41    -0.80     0.74 1.00
cor(TextTypenarrative,TimeT2)        0.06      0.43    -0.77     0.82 1.00
cor(Intercept,TimeT3)                0.16      0.24    -0.25     0.67 1.01
cor(TextTypenarrative,TimeT3)       -0.06      0.30    -0.60     0.60 1.00
cor(TimeT2,TimeT3)                   0.05      0.45    -0.79     0.83 1.04
                                 Bulk_ESS Tail_ESS
sd(Intercept)                        2748     4437
sd(TextTypenarrative)                 462     1266
sd(TimeT2)                           1314     2095
sd(TimeT3)                            523      969
cor(Intercept,TextTypenarrative)      697     1957
cor(Intercept,TimeT2)                5842     5625
cor(TextTypenarrative,TimeT2)        3522     4685
cor(Intercept,TimeT3)                 474     1509
cor(TextTypenarrative,TimeT3)         546      696
cor(TimeT2,TimeT3)                    152      478

~Class (Number of levels: 25) 
                                 Estimate Est.Error l-95% CI u-95% CI Rhat
sd(Intercept)                        0.16      0.08     0.01     0.33 1.00
sd(TextTypenarrative)                0.24      0.08     0.09     0.42 1.00
sd(TimeT2)                           0.11      0.07     0.00     0.28 1.00
sd(TimeT3)                           0.10      0.07     0.00     0.28 1.00
cor(Intercept,TextTypenarrative)    -0.13      0.37    -0.76     0.66 1.00
cor(Intercept,TimeT2)               -0.09      0.42    -0.83     0.74 1.00
cor(TextTypenarrative,TimeT2)        0.07      0.40    -0.72     0.78 1.00
cor(Intercept,TimeT3)                0.11      0.43    -0.72     0.84 1.00
cor(TextTypenarrative,TimeT3)       -0.14      0.42    -0.84     0.71 1.00
cor(TimeT2,TimeT3)                   0.11      0.44    -0.76     0.85 1.00
                                 Bulk_ESS Tail_ESS
sd(Intercept)                        1094     1326
sd(TextTypenarrative)                1827     1824
sd(TimeT2)                           1983     2669
sd(TimeT3)                           2187     2828
cor(Intercept,TextTypenarrative)     1479     2428
cor(Intercept,TimeT2)                4581     5429
cor(TextTypenarrative,TimeT2)        5598     5821
cor(Intercept,TimeT3)                5042     4693
cor(TextTypenarrative,TimeT3)        5856     5884
cor(TimeT2,TimeT3)                   4193     5326

Population-Level Effects: 
                                                Estimate Est.Error l-95% CI
Intercept                                           5.25      0.13     4.99
TimeT2                                              0.57      0.13     0.31
TimeT3                                              0.91      0.14     0.64
TextTypenarrative                                  -0.26      0.17    -0.60
GroupPortugueseMFrench                             -1.06      0.17    -1.40
GroupPortugueseMGerman                             -1.30      0.17    -1.63
TimeT2:TextTypenarrative                           -0.24      0.16    -0.56
TimeT3:TextTypenarrative                           -0.06      0.17    -0.39
TimeT2:GroupPortugueseMFrench                      -0.55      0.18    -0.91
TimeT3:GroupPortugueseMFrench                      -0.38      0.19    -0.74
TimeT2:GroupPortugueseMGerman                      -0.64      0.19    -1.00
TimeT3:GroupPortugueseMGerman                      -0.23      0.19    -0.60
TextTypenarrative:GroupPortugueseMFrench            0.14      0.24    -0.32
TextTypenarrative:GroupPortugueseMGerman            0.17      0.23    -0.29
TimeT2:TextTypenarrative:GroupPortugueseMFrench     0.37      0.24    -0.11
TimeT3:TextTypenarrative:GroupPortugueseMFrench     0.25      0.24    -0.23
TimeT2:TextTypenarrative:GroupPortugueseMGerman     0.55      0.25     0.05
TimeT3:TextTypenarrative:GroupPortugueseMGerman     0.27      0.25    -0.23
                                                u-95% CI Rhat Bulk_ESS Tail_ESS
Intercept                                           5.50 1.00     2481     3890
TimeT2                                              0.83 1.00     2430     4080
TimeT3                                              1.18 1.00     2750     4480
TextTypenarrative                                   0.07 1.00     2323     3570
GroupPortugueseMFrench                             -0.72 1.00     2655     3588
GroupPortugueseMGerman                             -0.96 1.00     2574     4200
TimeT2:TextTypenarrative                            0.08 1.00     2586     4743
TimeT3:TextTypenarrative                            0.27 1.00     2454     4467
TimeT2:GroupPortugueseMFrench                      -0.18 1.00     2706     3864
TimeT3:GroupPortugueseMFrench                       0.00 1.00     3087     5057
TimeT2:GroupPortugueseMGerman                      -0.28 1.00     2642     4234
TimeT3:GroupPortugueseMGerman                       0.15 1.00     3000     4337
TextTypenarrative:GroupPortugueseMFrench            0.62 1.00     2668     4283
TextTypenarrative:GroupPortugueseMGerman            0.62 1.00     2537     4079
TimeT2:TextTypenarrative:GroupPortugueseMFrench     0.84 1.00     2969     5155
TimeT3:TextTypenarrative:GroupPortugueseMFrench     0.72 1.00     2858     4537
TimeT2:TextTypenarrative:GroupPortugueseMGerman     1.03 1.00     2896     4577
TimeT3:TextTypenarrative:GroupPortugueseMGerman     0.76 1.00     2666     4880

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sigma     0.60      0.02     0.55     0.65 1.01      730     1692

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).</code></pre>
</div>
</div>
<p>The output looks pretty similar to what we’d obtain when using <code>lmer()</code>, but let’s review what these estimates actually refer to. By default, <code>R</code> uses treatment coding. This entails that the <code>Intercept</code> refers to a specific combination of factors: the combination of all reference levels. Again by default, the reference levels are chosen alphabetically:</p>
<ul>
<li><code>Time</code> consists of three levels (<code>T1</code>, <code>T2</code>, <code>T3</code>); for alphabetical reasons, <code>T1</code> is chosen as the default reference level.</li>
<li><code>Group</code> also consists of three levels (<code>monolingual Portuguese</code>, <code>Portuguese-French</code>, <code>Portuguese-German</code>); <code>monolingual Portuguese</code> is chosen as the default level.</li>
<li><code>TextType</code> consists of two levels (<code>argumentative</code>, <code>narrative</code>); <code>argumentative</code> is the default reference level.</li>
</ul>
<p>The <code>Intercept</code>, then, shows the modelled mean Guiraud value of <code>argumentative</code> texts written by <code>monolingual Portuguese</code> children at <code>T1</code>: 5.25.</p>
<p>If you’re unsure which factor level was used as the reference level, you can use the <code>contrasts()</code> function. The reference level is the one in whose rows only zeroes occur.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-7_9b1fea8dfbc73a2e28ddeae1c52d8774">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Group)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                       Portuguese-French Portuguese-German
monolingual Portuguese                 0                 0
Portuguese-French                      1                 0
Portuguese-German                      0                 1</code></pre>
</div>
</div>
<p>Crucially, all other estimated effects are computed with respect to this intercept. That is, <code>TimeT2</code> (0.57) shows the difference between T1 and T2 <em>for monolingual Portuguese children writing argumentative texts</em>. Similarly, <code>TimeT3</code> (0.91) shows the difference between <em>T1</em> and T3 for monolingual Portuguese children writing argumentative texts, and <code>TextTypenarrative</code> (-0.27) shows the difference between the mean Guiraud values of argumentative and narrative texts written by monolingual Portuguese children writing at T1. The texts written by the Portuguese-German and Portuguese-French bilinguals don’t enter into these estimates.</p>
<p>Now, it’s possible to piece together the mean values associated with each combination of predictor values, but questions such as the following remain difficult to answer with just these estimates at hand:</p>
<ul>
<li>What’s the overall difference between T2 and T3 and its uncertainty?</li>
<li>What’s the overall difference between the Guiraud values of texts written by Portuguese-French and Portuguese-German children and its uncertainty?</li>
<li>…</li>
</ul>
<p>We’ll tackle these questions in a minute; for now, the point is merely that the estimated parameters above all refer to highly specific comparisons that may not be the most relevant.</p>
</section>
<section id="plotting-the-fitted-values-and-the-uncertainty-about-them" class="level3">
<h3 class="anchored" data-anchor-id="plotting-the-fitted-values-and-the-uncertainty-about-them">Plotting the fitted values and the uncertainty about them</h3>
<p>When working with <code>brms</code>, it’s relatively easy to obtain the modelled average outcome value for each combination of the predictor variables as well as a measure of the uncertainty associated with them.</p>
<p>First construct a small data frame containing the unique combinations of predictor variables in our dataset:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-8_a7cbaa858703c3ea9ad402af83a55405">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">d_pred <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Group, Time, TextType) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(Group, Time, TextType)</span>
<span id="cb13-5">d_pred</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 18 × 3
   Group                  Time  TextType     
   &lt;fct&gt;                  &lt;fct&gt; &lt;fct&gt;        
 1 monolingual Portuguese T1    argumentative
 2 monolingual Portuguese T1    narrative    
 3 monolingual Portuguese T2    argumentative
 4 monolingual Portuguese T2    narrative    
 5 monolingual Portuguese T3    argumentative
 6 monolingual Portuguese T3    narrative    
 7 Portuguese-French      T1    argumentative
 8 Portuguese-French      T1    narrative    
 9 Portuguese-French      T2    argumentative
10 Portuguese-French      T2    narrative    
11 Portuguese-French      T3    argumentative
12 Portuguese-French      T3    narrative    
13 Portuguese-German      T1    argumentative
14 Portuguese-German      T1    narrative    
15 Portuguese-German      T2    argumentative
16 Portuguese-German      T2    narrative    
17 Portuguese-German      T3    argumentative
18 Portuguese-German      T3    narrative    </code></pre>
</div>
</div>
<p>If you feed the model (here: <code>m_default</code>) and the data frame we’ve just created (<code>d_pred</code>) to the <code>fitted()</code> function, it outputs the modelled mean estimate for each combination of predictor values (<code>Estimate</code>), the estimated error of this mean estimate (<code>Est.Error</code>), and a 95% uncertainty interval about the estimate (<code>Q2.5</code> and <code>Q97.5</code>). One more thing: The <code>re_formula = NA</code> line specifies that we do not want the variability associated with the by-<code>Class</code> and by-<code>Child</code> random effects to affect the estimates and their uncertainty. This is what I typically want.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-9_fd67894cf4d4aa9b936bc35120c8a60c">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(</span>
<span id="cb15-2">  d_pred, </span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fitted</span>(m_default, </span>
<span id="cb15-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> d_pred, </span>
<span id="cb15-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re_formula =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb15-6">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                    Group Time      TextType Estimate Est.Error Q2.5 Q97.5
1  monolingual Portuguese   T1 argumentative     5.25     0.128 4.99  5.50
2  monolingual Portuguese   T1     narrative     4.99     0.172 4.65  5.33
3  monolingual Portuguese   T2 argumentative     5.82     0.143 5.54  6.10
4  monolingual Portuguese   T2     narrative     5.32     0.186 4.95  5.69
5  monolingual Portuguese   T3 argumentative     6.16     0.157 5.85  6.47
6  monolingual Portuguese   T3     narrative     5.84     0.189 5.47  6.23
7       Portuguese-French   T1 argumentative     4.19     0.115 3.97  4.42
8       Portuguese-French   T1     narrative     4.07     0.163 3.76  4.39
9       Portuguese-French   T2 argumentative     4.21     0.123 3.97  4.46
10      Portuguese-French   T2     narrative     4.21     0.156 3.91  4.53
11      Portuguese-French   T3 argumentative     4.73     0.130 4.48  4.99
12      Portuguese-French   T3     narrative     4.80     0.157 4.49  5.11
13      Portuguese-German   T1 argumentative     3.95     0.109 3.73  4.17
14      Portuguese-German   T1     narrative     3.86     0.148 3.56  4.15
15      Portuguese-German   T2 argumentative     3.88     0.116 3.65  4.11
16      Portuguese-German   T2     narrative     4.10     0.157 3.78  4.41
17      Portuguese-German   T3 argumentative     4.64     0.127 4.38  4.89
18      Portuguese-German   T3     narrative     4.76     0.147 4.47  5.04</code></pre>
</div>
</div>
<p>So where do these estimates and uncertainty intervals come from? In the Bayesian approach, every model parameter hasn’t got just one estimate but an entire distribution of estimates. Moreover, everything that <em>depends</em> on model parameters also has an entire distribution of estimates associated with it. The mean modelled outcome values per cell depend on the model parameters, so they, too, have entire distributions associated with them. The <code>fitted()</code> function summarises these distributions for us: it returns their means as <code>Estimate</code>, their standard deviations as <code>Est.Error</code> and their 2.5th and 97.5 percentiles as <code>Q2.5</code> and <code>Q97.5</code>. If so inclined, you can generate these distributions yourself using the <code>posterior_linpred()</code> function:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-10_0fdb96bfca25f89d3a6cea85d87d533d">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">posterior_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">posterior_linpred</span>(m_default, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> d_pred, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re_formula =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(posterior_fit)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 8000   18</code></pre>
</div>
</div>
<p>This returns matrix of 4000 rows and 18 columns. 4000 is the number of ‘post-warmup samples’ (see the output of <code>summary(m_default)</code>; 18 is the number of combinations of predictor values in <code>d_pred</code>.</p>
<p>The first <em>column</em> of <code>posterior_fit</code> contains the distribution associated with the first <em>row</em> in <code>d_pred</code>. If you compute its mean, standard deviation and 2.5th and 97.5th percentiles, you end up with the same numbers as above:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-11_5ec1671dc42cc6e295e6f4d48fa7de01">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5.25</code></pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.128</code></pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 2.5% 97.5% 
 4.99  5.50 </code></pre>
</div>
</div>
<p>Or similarly for the 10th row of <code>d_pred</code> (Portuguese-French, T2, narrative):</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-12_a1d11f116dbcb3508987521a47791bdd">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4.21</code></pre>
</div>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.156</code></pre>
</div>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> 2.5% 97.5% 
 3.91  4.53 </code></pre>
</div>
</div>
<p>At the moment, using <code>posterior_linpred()</code> has no added value, but it’s good to know where these numbers come from.</p>
<p>Let’s draw a graph showing these modelled averages and the uncertainty about them. 95% uncertainty intervals are typically used, but they may instill dichotomous thinking. To highlight that such an interval highlights but two points on a continuum, I’m tempted to add 80% intervals as well:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-13_0fe81022f2eaa776eeb4b3ec8aece0c8">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Obtain fitted values + uncertainty</span></span>
<span id="cb31-2">fitted_values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fitted</span>(m_default, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> d_pred, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re_formula =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, </span>
<span id="cb31-3">                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 95% interval: between 2.5th and 97.5th percentile</span></span>
<span id="cb31-4">                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 80% interval: between 10th and 90th percentile</span></span>
<span id="cb31-5">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.90</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>))</span>
<span id="cb31-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine fitted values with predictor values</span></span>
<span id="cb31-7">fitted_values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(d_pred, fitted_values)</span>
<span id="cb31-8">fitted_values</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                    Group Time      TextType Estimate Est.Error Q2.5  Q10  Q90
1  monolingual Portuguese   T1 argumentative     5.25     0.128 4.99 5.09 5.41
2  monolingual Portuguese   T1     narrative     4.99     0.172 4.65 4.77 5.20
3  monolingual Portuguese   T2 argumentative     5.82     0.143 5.54 5.64 6.00
4  monolingual Portuguese   T2     narrative     5.32     0.186 4.95 5.09 5.55
5  monolingual Portuguese   T3 argumentative     6.16     0.157 5.85 5.97 6.36
6  monolingual Portuguese   T3     narrative     5.84     0.189 5.47 5.60 6.08
7       Portuguese-French   T1 argumentative     4.19     0.115 3.97 4.04 4.33
8       Portuguese-French   T1     narrative     4.07     0.163 3.76 3.86 4.28
9       Portuguese-French   T2 argumentative     4.21     0.123 3.97 4.06 4.36
10      Portuguese-French   T2     narrative     4.21     0.156 3.91 4.02 4.41
11      Portuguese-French   T3 argumentative     4.73     0.130 4.48 4.56 4.89
12      Portuguese-French   T3     narrative     4.80     0.157 4.49 4.60 5.00
13      Portuguese-German   T1 argumentative     3.95     0.109 3.73 3.81 4.09
14      Portuguese-German   T1     narrative     3.86     0.148 3.56 3.68 4.05
15      Portuguese-German   T2 argumentative     3.88     0.116 3.65 3.73 4.03
16      Portuguese-German   T2     narrative     4.10     0.157 3.78 3.90 4.30
17      Portuguese-German   T3 argumentative     4.64     0.127 4.38 4.48 4.80
18      Portuguese-German   T3     narrative     4.76     0.147 4.47 4.57 4.94
   Q97.5
1   5.50
2   5.33
3   6.10
4   5.69
5   6.47
6   6.23
7   4.42
8   4.39
9   4.46
10  4.53
11  4.99
12  5.11
13  4.17
14  4.15
15  4.11
16  4.41
17  4.89
18  5.04</code></pre>
</div>
</div>
<p>And now for the graph:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-15_d5c16483368064d50fcc566fa61112f2">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move all points apart horizontally to reduce overlap</span></span>
<span id="cb33-2">position_adjustment <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_dodge</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb33-3"></span>
<span id="cb33-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(fitted_values,</span>
<span id="cb33-5">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Time,</span>
<span id="cb33-6">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Estimate,</span>
<span id="cb33-7">           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort Groups from low to high</span></span>
<span id="cb33-8">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reorder</span>(Group, Estimate),</span>
<span id="cb33-9">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> Group)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move point apart:</span></span>
<span id="cb33-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> position_adjustment) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move lines apart:</span></span>
<span id="cb33-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_path</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> position_adjustment) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add 95% intervals; move them apart, too</span></span>
<span id="cb33-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_linerange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> Q2<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> Q97<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>,</span>
<span id="cb33-16">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> position_adjustment) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add 80% intervals; move them apart, too</span></span>
<span id="cb33-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_linerange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> Q10, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> Q90), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb33-19">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> position_adjustment) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> TextType) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Override default colour</span></span>
<span id="cb33-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_colour_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"qual"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Modelled mean Guiraud"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2018-12-20-contrasts-interaction/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid figure-img" width="576"></p>
<figcaption class="figure-caption"><strong>Figure 2.</strong> The modelled mean Guiraud values and their uncertainty (thick vertical lines: 80% interval; thin vertical lines: 95% interval).</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="a-model-with-more-sensible-coding" class="level2">
<h2 class="anchored" data-anchor-id="a-model-with-more-sensible-coding">A model with more sensible coding</h2>
<section id="tailoring-the-coding-of-categorical-predictors-to-the-research-questions" class="level3">
<h3 class="anchored" data-anchor-id="tailoring-the-coding-of-categorical-predictors-to-the-research-questions">Tailoring the coding of categorical predictors to the research questions</h3>
<p>The <code>summary()</code> output for <code>m_default</code> was difficult to interpret because treatment coding was used. However, we can override this default behaviour to end up with estimates that are more readily and more usefully interpretable.</p>
<p>The first thing we can do is to override the default refence level. Figure 1 showed that the Guiraud values at T2 tend to be somewhere midway between those at T1 and T3, so we can make the intercept estimate more representative of the dataset as a whole by making T2 the reference level of <code>Time</code> rather than T1. A benefit of doing so is that we will now have two parameters, <code>TimeT1</code> and <code>TimeT3</code> that specify the difference between T1-T2 and T2-T3, respectively. In other words, the estimated parameters will directly reflect the progression from data collection to data collection. (Before, the parameter estimates specified the differences between T1-T2 and <em>T1</em>-T3, so a direct estimate for T2-T3 was lacking.)</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-16_a2504940a6c66eb5627601838fb5a227">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set T2 as default time; retain treatment coding</span></span>
<span id="cb34-2">d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">relevel</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Time, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T2"</span>)</span></code></pre></div>
</div>
<p>Second, there’s no reason for preferring <code>argumentative</code> or <code>narrative</code> texts as the reference level. If we sum-code this predictor, the intercept reflects the <em>grand mean</em> of the argumentative and narrative texts (at T2), and the estimated parameter then specifies how far the mean Guiraud value of each text type is removed from this mean:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-17_eafd4019f30a243ed3cb50d5e54580c1">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sum (or deviation) coding for TextType (2 levels)</span></span>
<span id="cb35-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>TextType) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contr.sum</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
<p>Similarly, there are a couple of reasonable ways to choose the reference level for <code>Group</code> when using treatment coding. But you can also sum-code this predictor so that the intercept reflects the grand mean of the Guiraud values of texts written by monolingual Portuguese and bilingual Portuguese-French and Portuguese-German kids (at T2).</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-18_1570e59fba86c6266e14bedc909a401b">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sum (or deviation) coding for Group (3 levels)</span></span>
<span id="cb36-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Group) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contr.sum</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
</div>
</section>
<section id="refitting-the-model" class="level3">
<h3 class="anchored" data-anchor-id="refitting-the-model">Refitting the model</h3>
<p>No difference here.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-19_13384626695bfca8622d4a1f6cb74950">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1">m_recoded <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(Guiraud <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TextType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>Group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-2">                   (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TextType <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-3">                   (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TextType <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>Child),</span>
<span id="cb37-4">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>,</span>
<span id="cb37-5">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">silent =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb37-6">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adapt_delta =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>),</span>
<span id="cb37-7">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running /usr/lib/R/bin/R CMD SHLIB foo.c
using C compiler: ‘gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0’
gcc -I"/usr/share/R/include" -DNDEBUG   -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/Rcpp/include/"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/unsupported"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/BH/include" -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/StanHeaders/include/src/"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/StanHeaders/include/"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppParallel/include/"  -I"/home/jan/R/x86_64-pc-linux-gnu-library/4.3/rstan/include" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DUSE_STANC3 -DSTRICT_R_HEADERS  -DBOOST_PHOENIX_NO_VARIADIC_EXPRESSION  -DBOOST_NO_AUTO_PTR  -include '/home/jan/R/x86_64-pc-linux-gnu-library/4.3/StanHeaders/include/stan/math/prim/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1       -fpic  -g -O2 -ffile-prefix-map=/build/r-base-1upgAf/r-base-4.3.1=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2  -c foo.c -o foo.o
In file included from /home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/Core:88,
                 from /home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/Dense:1,
                 from /home/jan/R/x86_64-pc-linux-gnu-library/4.3/StanHeaders/include/stan/math/prim/fun/Eigen.hpp:22,
                 from &lt;command-line&gt;:
/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:1: error: unknown type name ‘namespace’
  628 | namespace Eigen {
      | ^~~~~~~~~
/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/src/Core/util/Macros.h:628:17: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  628 | namespace Eigen {
      |                 ^
In file included from /home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/Dense:1,
                 from /home/jan/R/x86_64-pc-linux-gnu-library/4.3/StanHeaders/include/stan/math/prim/fun/Eigen.hpp:22,
                 from &lt;command-line&gt;:
/home/jan/R/x86_64-pc-linux-gnu-library/4.3/RcppEigen/include/Eigen/Core:96:10: fatal error: complex: No such file or directory
   96 | #include &lt;complex&gt;
      |          ^~~~~~~~~
compilation terminated.
make: *** [/usr/lib/R/etc/Makeconf:191: foo.o] Error 1</code></pre>
</div>
</div>
</section>
<section id="interpreting-the-parameter-estimates-1" class="level3">
<h3 class="anchored" data-anchor-id="interpreting-the-parameter-estimates-1">Interpreting the parameter estimates</h3>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-20_1a825d4f956f1fbec85b72c379e981eb">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(m_recoded)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Family: gaussian 
  Links: mu = identity; sigma = identity 
Formula: Guiraud ~ Time * TextType * Group + (1 + TextType + Time | Class) + (1 + TextType + Time | Child) 
   Data: d (Number of observations: 1040) 
  Draws: 4 chains, each with iter = 4000; warmup = 2000; thin = 1;
         total post-warmup draws = 8000

Group-Level Effects: 
~Child (Number of levels: 328) 
                         Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS
sd(Intercept)                0.47      0.04     0.38     0.55 1.00     2449
sd(TextType1)                0.13      0.05     0.02     0.22 1.01      597
sd(TimeT1)                   0.10      0.07     0.00     0.27 1.00     1114
sd(TimeT3)                   0.38      0.09     0.19     0.55 1.01      616
cor(Intercept,TextType1)    -0.47      0.22    -0.86    -0.00 1.00     2195
cor(Intercept,TimeT1)       -0.03      0.39    -0.74     0.74 1.00     5843
cor(TextType1,TimeT1)        0.03      0.43    -0.79     0.81 1.00     3610
cor(Intercept,TimeT3)        0.14      0.22    -0.24     0.64 1.01      945
cor(TextType1,TimeT3)        0.05      0.32    -0.65     0.64 1.01      412
cor(TimeT1,TimeT3)          -0.07      0.42    -0.82     0.74 1.01      280
                         Tail_ESS
sd(Intercept)                4309
sd(TextType1)                1011
sd(TimeT1)                   1881
sd(TimeT3)                   1077
cor(Intercept,TextType1)     2927
cor(Intercept,TimeT1)        5186
cor(TextType1,TimeT1)        4759
cor(Intercept,TimeT3)        1621
cor(TextType1,TimeT3)         672
cor(TimeT1,TimeT3)            823

~Class (Number of levels: 25) 
                         Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS
sd(Intercept)                0.18      0.08     0.03     0.34 1.00     1193
sd(TextType1)                0.12      0.04     0.05     0.21 1.00     2767
sd(TimeT1)                   0.10      0.07     0.00     0.27 1.00     2164
sd(TimeT3)                   0.10      0.07     0.00     0.27 1.00     2111
cor(Intercept,TextType1)    -0.19      0.35    -0.79     0.53 1.00     2478
cor(Intercept,TimeT1)       -0.12      0.43    -0.85     0.74 1.00     5476
cor(TextType1,TimeT1)       -0.02      0.42    -0.78     0.76 1.00     5773
cor(Intercept,TimeT3)        0.04      0.43    -0.77     0.81 1.00     6506
cor(TextType1,TimeT3)        0.15      0.41    -0.69     0.85 1.00     5899
cor(TimeT1,TimeT3)           0.13      0.44    -0.76     0.86 1.00     4553
                         Tail_ESS
sd(Intercept)                1273
sd(TextType1)                2274
sd(TimeT1)                   3196
sd(TimeT3)                   3346
cor(Intercept,TextType1)     3033
cor(Intercept,TimeT1)        5363
cor(TextType1,TimeT1)        5650
cor(Intercept,TimeT3)        5504
cor(TextType1,TimeT3)        6160
cor(TimeT1,TimeT3)           5721

Population-Level Effects: 
                        Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS
Intercept                   4.59      0.06     4.46     4.72 1.00     4216
TimeT1                     -0.20      0.06    -0.32    -0.08 1.00     6096
TimeT3                      0.56      0.06     0.44     0.69 1.00     5736
TextType1                   0.05      0.05    -0.05     0.14 1.00     4230
Group1                      0.98      0.09     0.78     1.16 1.00     3129
Group2                     -0.38      0.09    -0.55    -0.20 1.00     2923
TimeT1:TextType1            0.03      0.05    -0.07     0.13 1.00     6671
TimeT3:TextType1           -0.02      0.05    -0.12     0.07 1.00     5945
TimeT1:Group1              -0.24      0.08    -0.40    -0.07 1.00     5325
TimeT3:Group1              -0.13      0.09    -0.31     0.05 1.00     5069
TimeT1:Group2               0.12      0.09    -0.05     0.29 1.00     5178
TimeT3:Group2              -0.01      0.09    -0.18     0.16 1.00     5133
TextType1:Group1            0.21      0.07     0.07     0.34 1.00     3122
TextType1:Group2           -0.04      0.07    -0.18     0.09 1.00     3293
TimeT1:TextType1:Group1    -0.15      0.07    -0.29    -0.01 1.00     5085
TimeT3:TextType1:Group1    -0.07      0.07    -0.20     0.07 1.00     5624
TimeT1:TextType1:Group2     0.03      0.07    -0.12     0.17 1.00     5303
TimeT3:TextType1:Group2    -0.01      0.07    -0.15     0.12 1.00     5218
                        Tail_ESS
Intercept                   4839
TimeT1                      5507
TimeT3                      5002
TextType1                   5381
Group1                      3741
Group2                      4022
TimeT1:TextType1            6505
TimeT3:TextType1            5426
TimeT1:Group1               5184
TimeT3:Group1               5097
TimeT1:Group2               5426
TimeT3:Group2               5284
TextType1:Group1            4089
TextType1:Group2            4598
TimeT1:TextType1:Group1     5711
TimeT3:TextType1:Group1     6277
TimeT1:TextType1:Group2     5777
TimeT3:TextType1:Group2     5951

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sigma     0.60      0.02     0.55     0.65 1.00      867     2169

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).</code></pre>
</div>
</div>
<p>Now the <code>Intercept</code> reflects the grand mean of the Guiraud values for both argumentative and narrative texts for all three groups <strong>written at T2</strong>. The <code>TimeT1</code> estimate (-0.20) shows the difference between T1 and T2 averaged over all text types and all groups (0.20 points worse at T1); the <code>TimeT3</code> estimate (0.56) shows the difference between T2 and T3 averaged over all text types and all groups (0.56 points better at T3).</p>
<p><code>TextType1</code> (0.05) shows that the mean Guiraud value of one text type (still written at T2!) averaged over all groups is 0.05 points higher than the grand mean; and by implication that the mean Guiraud value of the other text type is 0.05 lower than the grand mean. To find out which text type is which, use <code>contrasts()</code>:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-21_83b40e196a47af589ac9ad106e9eeccb">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>TextType)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>              [,1]
argumentative    1
narrative       -1</code></pre>
</div>
</div>
<p>Since <code>argumentative</code> is coded as 1, it’s the argumentative texts that have the higher Guiraud values at T2.</p>
<p>Similarly, <code>Group1</code> (0.98) shows that one group has higher-than-average Guiraud values averaged across text types at T2, whereas <code>Group2</code> (-0.38) shows that another group has a mean Guiraud value that lies 0.38 points below the average at T2. By implication, the third group’s mean Guiraud value lies 0.60 points below average ((0.98-0.38-0.60)/3 = 0). To see which group is which, use <code>contrasts()</code>:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-22_1c67751db99cfa765a3a96e806a2a054">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Group)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                       [,1] [,2]
monolingual Portuguese    1    0
Portuguese-French         0    1
Portuguese-German        -1   -1</code></pre>
</div>
</div>
<p><code>monolingual Portuguese</code> is ‘1’ for the purposes of <code>Group1</code>, <code>Portuguese-French</code> is <code>1</code> for the purposes of <code>Group2</code>, and <code>Portuguese-German</code> is the third group.</p>
<p>We can double-check these numbers by generating the modelled mean values for each predictor value combination:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-23_87b0f9ad2fb35b7867cc325331d6865b">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1">double_check <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(</span>
<span id="cb45-2">  d_pred, </span>
<span id="cb45-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fitted</span>(m_recoded, </span>
<span id="cb45-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> d_pred, </span>
<span id="cb45-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re_formula =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb45-6">  )</span>
<span id="cb45-7">double_check</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                    Group Time      TextType Estimate Est.Error Q2.5 Q97.5
1  monolingual Portuguese   T1 argumentative     5.25     0.147 4.96  5.54
2  monolingual Portuguese   T1     narrative     4.98     0.166 4.65  5.32
3  monolingual Portuguese   T2 argumentative     5.82     0.142 5.54  6.10
4  monolingual Portuguese   T2     narrative     5.31     0.159 4.99  5.62
5  monolingual Portuguese   T3 argumentative     6.16     0.169 5.82  6.49
6  monolingual Portuguese   T3     narrative     5.84     0.176 5.48  6.18
7       Portuguese-French   T1 argumentative     4.19     0.128 3.94  4.45
8       Portuguese-French   T1     narrative     4.06     0.163 3.75  4.38
9       Portuguese-French   T2 argumentative     4.21     0.125 3.97  4.47
10      Portuguese-French   T2     narrative     4.21     0.138 3.94  4.48
11      Portuguese-French   T3 argumentative     4.73     0.135 4.47  5.00
12      Portuguese-French   T3     narrative     4.80     0.152 4.49  5.10
13      Portuguese-German   T1 argumentative     3.95     0.116 3.71  4.18
14      Portuguese-German   T1     narrative     3.87     0.147 3.58  4.16
15      Portuguese-German   T2 argumentative     3.88     0.115 3.65  4.10
16      Portuguese-German   T2     narrative     4.11     0.148 3.81  4.40
17      Portuguese-German   T3 argumentative     4.63     0.137 4.36  4.90
18      Portuguese-German   T3     narrative     4.75     0.141 4.47  5.03</code></pre>
</div>
</div>
<p>Some sanity checks:</p>
<ol type="1">
<li>Intercept = 4.59 = grand mean at T2:</li>
</ol>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-25_4e79502911494be26c4bd4471759f9e3">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb47-1">double_check <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb47-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T2"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb47-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Estimate))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  mean_est
1     4.59</code></pre>
</div>
</div>
<ol start="2" type="1">
<li>TimeT3 = 0.56 = T2/T3 difference across texts and groups:</li>
</ol>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-26_916450f4fed1370dfa15544560e383c8">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb49-1">double_check <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb49-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb49-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb49-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread</span>(Time, mean_est) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb49-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diff_T2T3 =</span> T3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> T2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 × 1
  diff_T2T3
      &lt;dbl&gt;
1     0.562</code></pre>
</div>
</div>
<ol start="3" type="1">
<li>Portuguese-German lies 0.60 below average at T2 across texts:</li>
</ol>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-27_8831207deed123fc247baa038d3b12ff">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb51-1">double_check <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb51-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T2"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb51-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Group) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb51-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_est =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb51-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diff_mean =</span> mean_est <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(mean_est))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 3
  Group                  mean_est diff_mean
  &lt;fct&gt;                     &lt;dbl&gt;     &lt;dbl&gt;
1 monolingual Portuguese     5.56     0.975
2 Portuguese-French          4.21    -0.378
3 Portuguese-German          3.99    -0.597</code></pre>
</div>
</div>
<p>I won’t plot the modelled averages and their uncertainty, because the result will be the same as before: Recoding the predictors in this way doesn’t affect the modelled averages per cell; it just makes the summary output easier to parse.</p>
</section>
<section id="homing-in-on-specific-comparisons" class="level3">
<h3 class="anchored" data-anchor-id="homing-in-on-specific-comparisons">Homing in on specific comparisons</h3>
<p>Finally, let’s see how we can target some specific comparisons without having to refit the model several times. A specific comparison you might be interested in could be “How large is the difference in Guiraud scores for narrative texts written by Portuguese-French bilinguals between T1 and T2?” Or a more complicated one: “How large is the difference in the progression from T1 to T3 for argumentative texts between Portuguese-French and Portuguese-German children?”</p>
<p>To answer such questions, we need to generate the distribution of the modelled averages per predictor value combination:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-28_09822324a6f81d887a6567fbe0f703a2">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb53-1">posterior_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">posterior_linpred</span>(m_recoded, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> d_pred, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">re_formula =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span></code></pre></div>
</div>
<section id="question-1-progression-t1-t2-for-narrative-texts-portuguese-french-bilinguals" class="level4">
<h4 class="anchored" data-anchor-id="question-1-progression-t1-t2-for-narrative-texts-portuguese-french-bilinguals">Question 1: Progression T1-T2 for narrative texts, Portuguese-French bilinguals?</h4>
<p>This question requires us to compare the modelled average for narrative texts written by Portuguese-French bilinguals at T2 to that of the narrative texts written by Portuguese-French bilinguals at T1. The first combination of predictor values can be found in row 10 in <code>d_pred</code>, so the corresponding estimates are in <em>column</em> 10 in <code>posterior_fit</code>. The second combination of predictor values can be found in row 8 in <code>d_pred</code>, so the corresponding estimates are in <em>column</em> 8 in <code>posterior_fit</code>.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-30_6a81140db864c1a211e46f0288ee6ef9">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb54-1">t2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span>
<span id="cb54-2">t1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]</span>
<span id="cb54-3">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(t2, t1)</span></code></pre></div>
</div>
<p>Now compute and plot the pairwise differences:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-31_a0f695d05777eaa7c860be1737b8896d">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb55-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb55-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">progression =</span> t2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t1)</span>
<span id="cb55-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df,</span>
<span id="cb55-4">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> progression)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb55-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb55-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2018-12-20-contrasts-interaction/index_files/figure-html/unnamed-chunk-31-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption"><strong>Figure 3.</strong> Estimate of the progression in Guiraud values for narrative texts by Portuguese-French bilinguals from T1 to T2.</figcaption>
</figure>
</div>
</div>
</div>
<p>The mean progression is easily calculated:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-32_53aa11b4f23dc85a4703e9f7b3f3cedb">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb56-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>progression)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.148</code></pre>
</div>
</div>
<p>The estimated error for this estimate is:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-33_1dcbf1505ddbc5f77fd1875e181e7f81">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb58-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>progression)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.149</code></pre>
</div>
</div>
<p>And its 95% uncertainty interval is:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-34_c4e304205d36fe85b99c2e082f83a9b5">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb60-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>progression, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  2.5%  97.5% 
-0.152  0.436 </code></pre>
</div>
</div>
<p>According to the model, there’s about a 84% chance that there’s indeed some progression going from T1 to T2.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-35_c8871a294c2f6bb52744ac00354c2350">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb62-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>progression <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.845</code></pre>
</div>
</div>
</section>
<section id="question-2-t1-t3-progression-for-argumentative-texts-portuguese-french-vs.-portuguese-german" class="level4">
<h4 class="anchored" data-anchor-id="question-2-t1-t3-progression-for-argumentative-texts-portuguese-french-vs.-portuguese-german">Question 2: T1-T3 progression for argumentative texts, Portuguese-French vs.&nbsp;Portuguese-German?</h4>
<p>This question requires us to take into consideration the modelled average for argumentative texts written by Portuguese-French bilinguals at T1, that for argumentative texts written by Portuguese-French bilinguals at T3, and the same for the texts written by Portuguese-German bilinguals. We need the following columns in <code>posterior_fit</code>:</p>
<ul>
<li>7 (Portuguese-French, T1, argumentative)</li>
<li>11 (Portuguese-French, T3, argumentative)</li>
<li>13 (Portuguese-German, T1, argumentative)</li>
<li>17 (Portuguese-German, T3, argumentative)</li>
</ul>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-36_8cf94067ed36194386f5483f98760439">
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb64-1">fr_t1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]</span>
<span id="cb64-2">fr_t3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>]</span>
<span id="cb64-3">gm_t1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>]</span>
<span id="cb64-4">gm_t3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> posterior_fit[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>]</span>
<span id="cb64-5">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(fr_t1, fr_t3, gm_t1, gm_t3)</span></code></pre></div>
</div>
<p>We compute the progression for the Portuguese-French bilinguals and that for the Portuguese-German bilinguals. Then we compute the difference between these progressions:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-37_9c2f701682d5a3d9d460534f6ed3d25c">
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb65-1">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb65-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prog_fr =</span> fr_t3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> fr_t1,</span>
<span id="cb65-3">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prog_gm =</span> gm_t3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> gm_t1,</span>
<span id="cb65-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diff_prog =</span> prog_gm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> prog_fr)</span></code></pre></div>
</div>
<p>The mean progression for the Portuguese-French bilinguals was 0.54 compared to 0.68 for the Portuguese-German bilinguals:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-38_1cf31ef6acd59931f51efa272cf83f11">
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb66-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>prog_fr)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.542</code></pre>
</div>
<div class="sourceCode cell-code" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb68-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>prog_gm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.684</code></pre>
</div>
</div>
<p>The mean difference between these progressions, then, is 0.14 in favour of the Portuguese-German bilinguals:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-39_eae8a0f244d445280b43cd478c455eb5">
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb70-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>diff_prog)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.142</code></pre>
</div>
</div>
<p>However, there is considerable uncertainty about this difference:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-40_e89eac3afecced7a8ef27d14132ebda0">
<div class="sourceCode cell-code" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb72-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df,</span>
<span id="cb72-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> diff_prog)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb72-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb72-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2018-12-20-contrasts-interaction/index_files/figure-html/unnamed-chunk-40-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The probability that the Portuguese-German bilinguals make more progress than the Portuguese-French bilinguals is 77%, and according to the model, there’s a 95% chance its size is somewhere between -0.25 and 0.52 points.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-41_177c742d4e276b13a0483fb42eecf231">
<div class="sourceCode cell-code" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb73-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>diff_prog <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.768</code></pre>
</div>
<div class="sourceCode cell-code" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb75-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>diff_prog, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  2.5%  97.5% 
-0.251  0.530 </code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>By investing some time in recoding your predictors, you can make the parameter estimates more relevant to your questions. Any specific comparisons you may be interested in can additionally be addressed by making use of the entire distribution of estimates. You can also use these estimate distributions to draw effect plots.</p>
</section>
<section id="further-resources" class="level2">
<h2 class="anchored" data-anchor-id="further-resources">Further resources</h2>
<ul>
<li><a href="https://stats.idre.ucla.edu/r/library/r-library-contrast-coding-systems-for-categorical-variables/">R Library Contrast Coding Systems for categorical variables</a></li>
<li>Matthew Kay. 2018. <a href="https://mjskay.github.io/tidybayes/articles/tidy-brms.html">Extracting and visualizing tidy draws from brms models</a></li>
<li>Daniel J. Schad, Sven Hohenstein, Shravan Vasishth and Reinhold Kliegl. 2018. <a href="https://arxiv.org/abs/1807.10451">How to capitalize on a priori contrasts in linear (mixed) models: A tutorial</a>.</li>
<li>In simpler models, you can use bootstrapping to generate distributions of estimates. This would be possible for these data, too, but it would take a considerable amount of time.</li>
</ul>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Audrey Bonvin, Jan Vanhove, Raphael Berthele and Amelia Lambelet. 2018. <a href="http://tujournals.ulb.tu-darmstadt.de/index.php/zif/article/view/886">Die Entwicklung von produktiven lexikalischen Kompetenzen bei Schüler(innen) mit portugiesischem Migrationshintergrund in der Schweiz.</a> <em>Zeitschrift für Interkulturellen Fremdsprachenunterricht</em> 23(1). 135-148. Data and R code available from <a href="http://dx.doi.org/10.6084/m9.figshare.4578991">figshare</a>.</p>
<p>Amelia Lambelet, Raphael Berthele, Magalie Desgrippes, Carlos Pestana and Jan Vanhove. 2017a. Chapter 2: Testing interdependence in Portuguese Heritage speakers in Switzerland: the HELASCOT project. In Raphael Berthele and Amelia Lambelet (eds.), <a href="http://www.multilingual-matters.com/display.asp?k=9781783099030">Heritage and school language literacy development in migrant children: Interdependence or independence?</a>, pp.&nbsp;26-33. Multilingual Matters.</p>
<p>Amelia Lambelet, Magalie Desgrippes and Jan Vanhove. 2017b. Chapter 5: The development of argumentative and narrative writing skills in Portuguese heritage speakers in Switzerland (HELASCOT project). In Raphael Berthele and Amelia Lambelet (eds.), <a href="http://www.multilingual-matters.com/display.asp?k=9781783099030">Heritage and school language literacy development in migrant children: Interdependence or independence?</a>, pp.&nbsp;83-96. Multilingual Matters.</p>
<p>Jan Vanhove, Audrey Bonvin, Amelia Lambelet and Raphael Berthele. 2019. <a href="https://doi.org/10.17239/jowr-2019.10.03.04">Predicting perceptions of the lexical richness of short French, German, and Portuguese texts.</a> <em>Journal of Writing Research</em>. Technical report, data (including texts), elicitation materials, and R code available from the <a href="https://osf.io/vw4pc/">Open Science Framework</a>.</p>
</section>
<section id="session-info" class="level2">
<h2 class="anchored" data-anchor-id="session-info">Session info</h2>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-42_05ae42c6f95783d525ba5516fe6e7d77">
<div class="sourceCode cell-code" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb77-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.2 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-06
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package        * version date (UTC) lib source
 abind            1.4-5   2016-07-21 [1] CRAN (R 4.3.1)
 backports        1.4.1   2021-12-13 [1] CRAN (R 4.3.0)
 base64enc        0.1-3   2015-07-28 [1] CRAN (R 4.3.0)
 bayesplot        1.10.0  2022-11-16 [1] CRAN (R 4.3.1)
 bit              4.0.5   2022-11-15 [1] CRAN (R 4.3.0)
 bit64            4.0.5   2020-08-30 [1] CRAN (R 4.3.0)
 bridgesampling   1.1-2   2021-04-16 [1] CRAN (R 4.3.1)
 brms           * 2.19.0  2023-03-14 [1] CRAN (R 4.3.1)
 Brobdingnag      1.2-9   2022-10-19 [1] CRAN (R 4.3.1)
 cachem           1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr            3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 checkmate        2.2.0   2023-04-27 [1] CRAN (R 4.3.1)
 cli              3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 coda             0.19-4  2020-09-30 [1] CRAN (R 4.3.1)
 codetools        0.2-19  2023-02-01 [4] CRAN (R 4.2.2)
 colorspace       2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 colourpicker     1.2.0   2022-10-28 [1] CRAN (R 4.3.1)
 crayon           1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 crosstalk        1.2.0   2021-11-04 [1] CRAN (R 4.3.1)
 curl             4.3.2   2021-06-23 [2] CRAN (R 4.2.0)
 devtools         2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest           0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 distributional   0.3.2   2023-03-22 [1] CRAN (R 4.3.1)
 dplyr          * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 DT               0.28    2023-05-18 [1] CRAN (R 4.3.1)
 dygraphs         1.1.1.6 2018-07-11 [1] CRAN (R 4.3.1)
 ellipsis         0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate         0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi            1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 farver           2.1.1   2022-07-06 [1] CRAN (R 4.3.0)
 fastmap          1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 forcats        * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)
 fs               1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics         0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2        * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue             1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gridExtra        2.3     2017-09-09 [1] CRAN (R 4.3.0)
 gtable           0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 gtools           3.9.4   2022-11-27 [1] CRAN (R 4.3.1)
 hms              1.1.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools        0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets      1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv           1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 igraph           1.5.0.1 2023-07-23 [1] CRAN (R 4.3.1)
 inline           0.3.19  2021-05-31 [1] CRAN (R 4.3.1)
 jsonlite         1.8.5   2023-06-05 [1] CRAN (R 4.3.0)
 knitr            1.39    2022-04-26 [2] CRAN (R 4.2.0)
 labeling         0.4.2   2020-10-20 [1] CRAN (R 4.3.0)
 later            1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lattice          0.21-8  2023-04-05 [4] CRAN (R 4.3.0)
 lifecycle        1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 loo              2.6.0   2023-03-31 [1] CRAN (R 4.3.1)
 lubridate      * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)
 magrittr         2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 markdown         1.7     2023-05-16 [1] CRAN (R 4.3.0)
 Matrix           1.6-0   2023-07-08 [4] CRAN (R 4.3.1)
 matrixStats      1.0.0   2023-06-02 [1] CRAN (R 4.3.1)
 memoise          2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mime             0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI           0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 munsell          0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 mvtnorm          1.2-2   2023-06-08 [1] CRAN (R 4.3.1)
 nlme             3.1-162 2023-01-31 [4] CRAN (R 4.2.2)
 pillar           1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild         1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig        2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload          1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 plyr             1.8.8   2022-11-11 [1] CRAN (R 4.3.1)
 posterior        1.4.1   2023-03-14 [1] CRAN (R 4.3.1)
 prettyunits      1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx         3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis          0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises         1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps               1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr          * 1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6               2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 RColorBrewer     1.1-3   2022-04-03 [1] CRAN (R 4.3.0)
 Rcpp           * 1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 RcppParallel     5.1.7   2023-02-27 [1] CRAN (R 4.3.1)
 readr          * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)
 remotes          2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 reshape2         1.4.4   2020-04-09 [1] CRAN (R 4.3.1)
 rlang            1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown        2.21    2023-03-26 [1] CRAN (R 4.3.0)
 rstan            2.26.22 2023-08-01 [1] local
 rstantools       2.3.1.1 2023-07-18 [1] CRAN (R 4.3.1)
 rstudioapi       0.14    2022-08-22 [1] CRAN (R 4.3.0)
 scales           1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo      1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shiny            1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 shinyjs          2.1.0   2021-12-23 [1] CRAN (R 4.3.1)
 shinystan        2.6.0   2022-03-03 [1] CRAN (R 4.3.1)
 shinythemes      1.2.0   2021-01-25 [1] CRAN (R 4.3.1)
 StanHeaders      2.26.27 2023-06-14 [1] CRAN (R 4.3.1)
 stringi          1.7.6   2021-11-29 [2] CRAN (R 4.2.0)
 stringr        * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 tensorA          0.36.2  2020-11-19 [1] CRAN (R 4.3.1)
 threejs          0.3.3   2020-01-21 [1] CRAN (R 4.3.1)
 tibble         * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyr          * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)
 tidyselect       1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 tidyverse      * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)
 timechange       0.2.0   2023-01-11 [1] CRAN (R 4.3.0)
 tzdb             0.4.0   2023-05-12 [1] CRAN (R 4.3.0)
 urlchecker       1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis          2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8             1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 V8               4.3.0   2023-04-08 [1] CRAN (R 4.3.0)
 vctrs            0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 vroom            1.6.3   2023-04-28 [1] CRAN (R 4.3.0)
 withr            2.5.0   2022-03-03 [2] CRAN (R 4.2.0)
 xfun             0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xtable           1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 xts              0.13.1  2023-04-16 [1] CRAN (R 4.3.1)
 yaml             2.3.5   2022-02-21 [2] CRAN (R 4.2.0)
 zoo              1.8-12  2023-04-13 [1] CRAN (R 4.3.1)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>Bayesian statistics</category>
  <category>brms</category>
  <category>R</category>
  <category>graphs</category>
  <category>mixed-effects models</category>
  <category>contrast coding</category>
  <guid>https://janhove.github.io/posts/2018-12-20-contrasts-interaction/index.html</guid>
  <pubDate>Wed, 19 Dec 2018 23:00:00 GMT</pubDate>
</item>
<item>
  <title>Introducing cannonball - Tools for teaching statistics</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2018-09-26-cannonball/index.html</link>
  <description><![CDATA[ 



<p>I’ve put my first R package on GitHub! It’s called <code>cannonball</code> and contains a couple of functions that I use for teaching; perhaps others will follow. # Installation Make sure you have the <code>devtools</code> package:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"devtools"</span>)</span></code></pre></div>
</div>
<p>Then load it and install <code>cannonball</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(devtools)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"janhove/cannonball"</span>)</span></code></pre></div>
</div>
<p>To use it, load the package as per usual:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cannonball)</span></code></pre></div>
</div>
<section id="overview-of-the-functions" class="level2">
<h2 class="anchored" data-anchor-id="overview-of-the-functions">Overview of the functions</h2>
<section id="plot_r-draw-scatterplots-with-the-same-correlation-coefficient" class="level3">
<h3 class="anchored" data-anchor-id="plot_r-draw-scatterplots-with-the-same-correlation-coefficient">plot_r(): Draw scatterplots with the same correlation coefficient</h3>
<p>People seem to like this function from my blog post <a href="../2016-11-21-what-correlations-look-like"><em>What data patterns can lie behind a correlation coefficient?</em></a>. Specify the number of observations and a desired sample Pearson correlation coefficient, and out come 16 rather different looking scatterplots conforming to these criteria:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2018-09-26-cannonball/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>For more details, type in <code>?plot_r</code> at the R prompt.</p>
</section>
<section id="clustered_data-simulate-data-from-a-cluster-randomised-experiment" class="level3">
<h3 class="anchored" data-anchor-id="clustered_data-simulate-data-from-a-cluster-randomised-experiment">clustered_data(): Simulate data from a cluster-randomised experiment</h3>
<p>Cluster-randomised experiments are experiments in which whole groups of participants (e.g., entire classes) are necessarily assigned to the same condition. If the data from such experiments are analysed as though the participants were assigned to the conditions <em>individually</em> (e.g., by running a <em>t</em>-test on the individual data points), the false positive rate can go <a href="../2015-09-17-cluster-randomised-experiments">through the roof</a>. This function simulates data from such an experiment and allows you to specify unequal cluster sizes (via the <code>parts_per_class</code> parameter):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate data</span></span>
<span id="cb5-2">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clustered_data</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ICC =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># intra-class correlation coefficient</span></span>
<span id="cb5-3">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_class =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sizes of the control clusters</span></span>
<span id="cb5-4">                                    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sizes of the intervention clusters</span></span>
<span id="cb5-5">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">effect =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># population effect size</span></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot</span></span>
<span id="cb5-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb5-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d,</span>
<span id="cb5-10">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> class,</span>
<span id="cb5-11">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> outcome,</span>
<span id="cb5-12">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> condition)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outlier.shape =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb5-15">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2018-09-26-cannonball/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>I mostly use this function in a simulation to illustrate the effects of clustering on p-values. With a null effect, you’d expect only 5% of the p-values to be lower than 0.05. Let’s see what happens when you analyse the individual data from a cluster-randomised experiment using a t-test:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">p_vals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replicate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, {</span>
<span id="cb6-2">  d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clustered_data</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ICC =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>,</span>
<span id="cb6-3">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_per_class =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>),</span>
<span id="cb6-4">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">effect =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-5">  p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> condition, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p.value</span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(p)</span>
<span id="cb6-7">})</span>
<span id="cb6-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(p_vals)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2018-09-26-cannonball/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(p_vals <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.3208</code></pre>
</div>
</div>
<p>The false positive rate is now through the roof (32%).</p>
</section>
<section id="graphically-checking-model-assumptions" class="level3">
<h3 class="anchored" data-anchor-id="graphically-checking-model-assumptions">Graphically checking model assumptions</h3>
<p>See the full-fledged <a href="../../tutorials/assumptions.html">tutorial</a> for these functions.</p>
</section>
</section>
<section id="why-cannonball" class="level2">
<h2 class="anchored" data-anchor-id="why-cannonball">Why <code>cannonball</code>?</h2>
<p>Glad you asked! Julian ‘Cannonball’ Adderley is one of my favourite alto saxophone players (check out his solos on <a href="https://www.youtube.com/watch?v=u37RF5xKNq8"><em>Autumn Leaves</em></a> (from around 2’03”; Somethin’ Else) or <a href="https://www.youtube.com/watch?v=RPfFhfSuUZ4"><em>Freddie Freeloader</em></a> (6’22”; Kind of Blue)!) and he was a consummate jazz educator to boot.</p>
</section>
<section id="software-versions" class="level2">
<h2 class="anchored" data-anchor-id="software-versions">Software versions</h2>
<p>Please note that I reran the code on this page on August 6, 2023.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.3 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-27
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package     * version date (UTC) lib source
 cachem        1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr         3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 cannonball  * 0.1.1   2023-06-21 [1] Github (janhove/cannonball@fe70eff)
 cli           3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 colorspace    2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 crayon        1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 devtools      2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest        0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 dplyr         1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 ellipsis      0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate      0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi         1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 farver        2.1.1   2022-07-06 [1] CRAN (R 4.3.0)
 fastmap       1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 fs            1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics      0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2     * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue          1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gtable        0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools     0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets   1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv        1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 jsonlite      1.8.7   2023-06-29 [1] CRAN (R 4.3.1)
 knitr         1.39    2022-04-26 [2] CRAN (R 4.2.0)
 labeling      0.4.2   2020-10-20 [1] CRAN (R 4.3.0)
 later         1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lifecycle     1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 memoise       2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mime          0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 munsell       0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 pillar        1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild      1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig     2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload       1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 prettyunits   1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx      3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis       0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises      1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps            1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr         1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6            2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 Rcpp          1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 remotes       2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 rlang         1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown     2.21    2023-03-26 [1] CRAN (R 4.3.0)
 rstudioapi    0.14    2022-08-22 [1] CRAN (R 4.3.0)
 scales        1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo   1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shiny         1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 stringi       1.7.12  2023-01-11 [1] CRAN (R 4.3.1)
 stringr       1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 tibble        3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyselect    1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis       2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8          1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 vctrs         0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 withr         2.5.0   2022-03-03 [2] CRAN (R 4.2.0)
 xfun          0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xtable        1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 yaml          2.3.5   2022-02-21 [2] CRAN (R 4.2.0)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>cannonball</category>
  <category>R</category>
  <category>teaching materials</category>
  <guid>https://janhove.github.io/posts/2018-09-26-cannonball/index.html</guid>
  <pubDate>Tue, 25 Sep 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Looking for comments on a paper on model assumptions</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2018-09-12-preprint-assumptions/index.html</link>
  <description><![CDATA[ 



<p>I’ve written a paper titled <em>Checking the assumptions of your statistical model without getting paranoid</em> and I’d like to solicit your feedback. The paper is geared towards beginning analysts, so I’m particularly interested in hearing from readers who don’t consider themselves expert statisticians if there is anything that isn’t entirely clear to them. If you’re a more experienced analyst and you spot an error in the paper or accompanying tutorial, I’d be grateful if you could let me know, too, of course.</p>
<ul>
<li><a href="https://psyarxiv.com/zvawb/">Preprint on PsyArxiv</a></li>
<li><a href="https://janhove.github.io/tutorials/assumptions.html">Online tutorial with R code</a></li>
</ul>



 ]]></description>
  <category>R</category>
  <category>graphs</category>
  <category>tutorial</category>
  <category>preprint</category>
  <category>assumptions</category>
  <category>cannonball</category>
  <guid>https://janhove.github.io/posts/2018-09-12-preprint-assumptions/index.html</guid>
  <pubDate>Tue, 11 Sep 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Baby steps in Bayes: Piecewise regression with two breakpoints</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2018-07-27-bayesian-two-breakpoint-model/index.html</link>
  <description><![CDATA[ 



<p>In this follow-up to the blog post <a href="../2018-07-04-bayesian-breakpoint-model"><em>Baby steps in Bayes: Piecewise regression</em></a>, I’m going to try to model the relationship between two continuous variables using a piecewise regression with not one but two breakpoints. (The rights to the movie about the first installment are still up for grabs, incidentally.)</p>
<p>The kind of relationship I want to model is plotted in Figure 1. According to some applied linguists, relationships similar to these underpin some aspects of language learning, but we don’t need to go into those discussions here.</p>
<p><strong>Update (2023-08-06):</strong> When I reran the code in this blog post using newer versions of Stan and R, I ran into serious convergence issues. I have pulled down this blog post till I figure out how to fix these.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-1_53b534ad284dc7a0378bc08f553af82a">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2018-07-27-bayesian-two-breakpoint-model/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="576"></p>
<figcaption class="figure-caption"><strong>Figure 1.</strong> The underlying form of the x-y relationship is characterised by two breakpoints. The function’s three pieces are connected to each other.</figcaption>
</figure>
</div>
</div>
</div>
<!-- The code below shows how you can generate such an x-y relationship -->
<!-- and adds a modicum of noise to it. Figure 2 shows the simulated -->
<!-- data we'll work with in this blog post. I'm not going to analyse -->
<!-- actual data at this juncture because it's Friday afternoon and -->
<!-- I want to ride my bike. -->
<!-- ```{r, fig.width = 6, fig.height = 4} -->
<!-- # Set random seed (today's date) -->
<!-- set.seed(2018-07-27) -->
<!-- # 56 data points -->
<!-- n <- 56 -->
<!-- # Generate predictor data -->
<!-- x <- runif(n, min = 0, max = 20) -->
<!-- # Set the breakpoints -->
<!-- bp1 <- 4.3 -->
<!-- bp2 <- 13.6 -->
<!-- # Set the intercept and the slope  -->
<!-- # for the first piece (before first breakpoint) -->
<!-- a1 <- 4 -->
<!-- b1 <- 0.2 -->
<!-- # Set the intercept and the slope -->
<!-- # for the *third* piece (after the second breakpoint) -->
<!-- a3 <- 12 -->
<!-- b3 <- 0.1 -->
<!-- # The underlying form of the second piece -->
<!-- # is a straight line connecting the first and third piece -->
<!-- # at the breakpoints. I won't bore you with the derivation, -->
<!-- # but this results in the following intercept and slope: -->
<!-- a2 <- (a1*bp2 + b1*bp1*bp2 - a3*bp1 - b3*bp1*bp2) / (bp2 - bp1) -->
<!-- b2 <- ((a3 + b3*bp2) - (a1 + b1*bp1)) / (bp2 - bp1) -->
<!-- # Generate average conditional y values -->
<!-- y <- vector(length = n) -->
<!-- for (i in 1:n) { -->
<!--   # Before 1st breakpoint -->
<!--   if (x[i] < bp1) { -->
<!--     y[i] <- a1 + b1*x[i] -->
<!--   # After 2nd breakpoint -->
<!--   } else if (x[i] > bp2) { -->
<!--     y[i] <- a3 + b3*x[i] -->
<!--   # Else (between the two breakpoints) -->
<!--   } else { -->
<!--     y[i] <- a2 + b2*x[i] -->
<!--   } -->
<!-- } -->
<!-- # Add some noise -->
<!-- y_obs <- y + rnorm(n = n, sd = 1) -->
<!-- # Plot -->
<!-- plot(x, y_obs) -->
<!-- ``` -->
<!-- > **Figure 2.** The simulated data we'll work with. -->
<!-- ## Specifying the model -->
<!-- If none of this makes sense to you, please refer to the previous -->
<!-- _Baby steps in Bayes_ blog post. -->
<!-- ### `data` -->
<!-- There's an _x_ and a _y_ variable, both of length _N_ (here: N = 56). -->
<!-- ### `parameters` -->
<!-- This model has 7 parameters: -->
<!-- * Two breakpoints. Instead of specifying both breakpoints in the `parameters` block, I specify the first one (`bp1`) as well as the distance between the first and the second one (`bp_distance`). This allows me to tell the model that that the second breakpoint needs to occur after the first one by constraining the distance between them to be positive. -->
<!-- * the intercept and slope of the regression before the first breakpoint -->
<!-- (`a1` and `b1`); -->
<!-- * the intercept and slope of the regression after the _third_ breakpoint -->
<!-- (`a3` and `b3`). Note that I don't specify the intercept and the slope of the model's second piece, i.e., between the two breakpoints. The reason is that I want the three pieces to be connected at the breakpoints. With this constraint, if you know the form of the first and third piece as well as the position of the two breakpoint, you get the intercept and the slope of the second piece for free. -->
<!-- * the standard deviation of the normal error. Standard deviations are always positive; -->
<!--     this constraint is set by including `<lower = 0>` in the declaration. -->
<!-- ### `transformed parameters` -->
<!-- As in the previous blog post, I specify a transformed parameter -->
<!-- that contains the mean of _y_ conditional on the value of _x_. -->
<!-- Additionally, for convenience, I derive three parameters from -->
<!-- those specified in the previous block: the position of the -->
<!-- second breakpoint (from the position of the first and the -->
<!-- distance between them), as well as the intercept and slope -->
<!-- of the second piece (`a2` and `b2`). -->
<!-- (Sidebar: Since the second piece needs to be connected to -->
<!-- the other two pieces at the respective breakpoint, the  -->
<!-- expected _y_ value at the first breakpoint equals -->
<!-- both `a1` + `b1`*`bp1`  -->
<!-- and `a2` + `b2`*`bp1`. Similarly, the expected _y_ value -->
<!-- at the second breakpoint equals both -->
<!-- `a3` + `b3`*`bp2` -->
<!-- and `a2` + `b2`*`bp2`. From these equalities, `a2` and `b2` -->
<!-- can be expressed in terms of the parameters specified above.) -->
<!-- ### `model` -->
<!-- This works similarly to the model specification in the previous blog post. -->
<!-- Since I only work with simulated data here, the priors aren't informed -->
<!-- by any subject-matter knowledge. -->
<!-- ### `generated quantities` -->
<!-- To check if the model picks up on the relevant aspects of the data, -->
<!-- I let it generate alternative datasets. Ideally, these look similar -->
<!-- to the actual data analysed. -->
<!-- ```{r} -->
<!-- model_2bp <- ' -->
<!-- data {  -->
<!--   int<lower=1> N;  // total number of observations (integer); at least 1 -->
<!--   real y[N];       // outcome variable with N elements (real-valued) -->
<!--   real x[N];       // predictor variable with N elements (real-valued) -->
<!-- } -->
<!-- parameters {  -->
<!--   real bp1;                       // breakpoint 1 -->
<!--   real<lower = 0> bp_distance;    // distance between breakpoint1 and 2; -->
<!--                                   // bp2 needs to occur after bp1 -->
<!--   real a_1;          // intercept and slope before breakpoint 1 -->
<!--   real b_1; -->
<!--   real a_3;          // intercept and slope before breakpoint 3 -->
<!--   real b_3; -->
<!--   real<lower = 0> error;  // standard deviation of residuals -->
<!-- }  -->
<!-- transformed parameters{ -->
<!--   vector[N] conditional_mean; // the estimated average -->
<!--   real bp2;  // second breakpoint -->
<!--   real a_2;  // intercept and slope of the second piece -->
<!--   real b_2;  // (between two breakpoints) -->
<!--   bp2 = bp1 + bp_distance; -->
<!--   a_2 = (a_1*bp2 + b_1*bp1*bp2 - a_3*bp1 - b_3*bp1*bp2) / (bp2 - bp1); -->
<!--   b_2 = ((a_3 + b_3*bp2) - (a_1 + b_1*bp1)) / (bp2 - bp1); -->
<!--   // the conditional mean depends on the predictor value s -->
<!--   // position relative to the breakpoints -->
<!--   for (i in 1:N) { -->
<!--     if (x[i] < bp1) { -->
<!--       conditional_mean[i] = a_1 + b_1 * x[i]; -->
<!--     } else if (x[i] > bp2) { -->
<!--       conditional_mean[i] = a_3 + b_3 * x[i]; -->
<!--     } else { -->
<!--       conditional_mean[i] = a_2 + b_2 * x[i]; -->
<!--     } -->
<!--   } -->
<!-- } -->
<!-- model { -->
<!--   // Set priors. These are painfully uninformed. -->
<!--   a_1 ~ normal(0, 25); -->
<!--   a_3 ~ normal(0, 25); -->
<!--   a_1 ~ normal(0, 25); -->
<!--   a_3 ~ normal(0, 25); -->
<!--   bp1 ~ normal(0, 25); -->
<!--   bp_distance ~ normal(0, 25);  // constrained to be positive -->
<!--   error ~ normal(0, 25);        // Residual error, likely between 0 and 2*25 -->
<!--   // How the data are expected to have been generated: -->
<!--   // normal distribution with mu = conditional_mean and  -->
<!--   // std = error, estimated from data. -->
<!--   for (i in 1:N) { -->
<!--     y[i] ~ normal(conditional_mean[i], error); -->
<!--   } -->
<!-- } -->
<!-- generated quantities { -->
<!--   vector[N] sim_y;               // Simulate new data using estimated parameters. -->
<!--   for (i in 1:N) { -->
<!--     sim_y[i] = normal_rng(conditional_mean[i], error); -->
<!--   } -->
<!-- } -->
<!-- ' -->
<!-- ``` -->
<!-- ## Running the model -->
<!-- To fit the model, first put the input data in a list. -->
<!-- Then supply this list and the model code to the `stan()` -->
<!-- function. The `stan()` function prints a lot of output  -->
<!-- to the console, which I didn't reproduce here.  -->
<!-- Unless you receive genuine warnings or error (i.e., red text),  -->
<!-- everything's fine. (Apologies for the blatant self-plagiarism throughout, -->
<!-- by the way.) -->
<!-- ```{r, eval = FALSE} -->
<!-- data_list <- list( -->
<!--   x = x, -->
<!--   y = y_obs, -->
<!--   N = n -->
<!-- ) -->
<!-- fit_2bp_sim <- stan(model_code = model_2bp,  -->
<!--                    data = data_list) -->
<!-- ``` -->
<!-- ## Inspecting the model -->
<!-- ### Model summary -->
<!-- A summary with the parameter estimates and their -->
<!-- uncertainties can be generated using the `print()` function. -->
<!-- ```{r, eval = FALSE} -->
<!-- print(fit_2bp_sim, -->
<!--       par = c("bp1", "bp2", -->
<!--               "a_1", "b_1",  -->
<!--               "a_2", "b_2", -->
<!--               "a_3", "b_3", -->
<!--               "error")) -->
<!-- ``` -->
<!-- <pre><code>Inference for Stan model: ade2f0f31038d9a48e5f69f1db76bc89. -->
<!-- 4 chains, each with iter=2000; warmup=1000; thin=1;  -->
<!-- post-warmup draws per chain=1000, total post-warmup draws=4000. -->
<!--        mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff Rhat -->
<!-- bp1    2.58    0.05 1.30  1.11  1.63  2.15  3.28  6.02   804    1 -->
<!-- bp2   14.53    0.02 0.68 13.04 14.14 14.58 14.97 15.73  1922    1 -->
<!-- a_1    4.57    0.02 0.64  3.40  4.12  4.52  5.00  5.88  1113    1 -->
<!-- b_1   -0.77    0.03 0.89 -2.76 -1.31 -0.61 -0.06  0.40   808    1 -->
<!-- a_2    1.20    0.01 0.56 -0.10  0.92  1.25  1.55  2.11  1433    1 -->
<!-- b_2    0.87    0.00 0.06  0.78  0.84  0.87  0.90  1.00  1552    1 -->
<!-- a_3   15.08    0.09 3.50  8.88 12.63 14.90 17.33 22.32  1552    1 -->
<!-- b_3   -0.08    0.01 0.21 -0.50 -0.21 -0.07  0.06  0.31  1557    1 -->
<!-- error  0.93    0.00 0.10  0.76  0.86  0.92  0.99  1.14  1991    1 -->
<!-- Samples were drawn using NUTS(diag_e) at Fri Jul 27 15:59:51 2018. -->
<!-- For each parameter, n_eff is a crude measure of effective sample size, -->
<!-- and Rhat is the potential scale reduction factor on split chains (at  -->
<!-- convergence, Rhat=1). -->
<!-- </code></pre> -->
<!-- Seems okay! -->
<!-- ### Posterior predictive checks -->
<!-- If the model is any good, data simulated from it should be pretty similar -->
<!-- to the data actually observed. In the `generated quantities` block, I let the -->
<!-- model output such simulated data (`sim_y`). Using the `shinystan` package, -->
<!-- we can perform some 'posterior predictive checks': -->
<!-- ```{r, eval = FALSE} -->
<!-- shinystan::launch_shinystan(fit_2bp_sim) -->
<!-- ``` -->
<!-- Click 'Diagnose' > 'PPcheck'. Under 'Select y (vector of observations)',  -->
<!-- pick `y_obs` (the simulated data analysed above). -->
<!-- Under 'Parameter/generated quantity from model', -->
<!-- pick `sim_y` (the additional simulated data generated in the model code). -->
<!-- Then click on 'Distributions of observed data vs replications' and  -->
<!-- 'Distributions of test statistics' to check if the properties of the simulated data correspond -->
<!-- to those of the real data. -->
<!-- You can also take this a step further and check whether the -->
<!-- model is able to generate scatterplots similar to the one in Figure 2. -->
<!-- If the following doesn't make any immediate sense, please refer -->
<!-- to the blog post [_Checking model assumptions without getting paranoid_](http://janhove.github.io/analysis/2018/04/25/graphical-model-checking), -->
<!-- because the logic is pretty similar. -->
<!-- First extract some vectors of simulated data from the model output: -->
<!-- ```{r, eval = FALSE} -->
<!-- # rstan's 'extract' is likely to conflict with another function -->
<!-- # called 'extract', so specify the package, too. -->
<!-- simulated_data <- rstan::extract(fit_2bp_sim)$sim_y -->
<!-- # simulated_data is a matrix with 4000 rows and 80 columns. -->
<!-- # For the plot, I select 8 rows at random: -->
<!-- simulated_data <- simulated_data[sample(1:4000, 8), ] -->
<!-- ``` -->
<!-- ```{r, echo = FALSE} -->
<!-- simulated_data <- structure(c(13.5683735697402, 12.9081854520952, 10.5768549815246,  -->
<!-- 12.8147367853547, 13.1487244078447, 13.316245208143, 10.959743017377,  -->
<!-- 13.6490194694834, 9.78395987872582, 8.49244837112598, 8.31710825769251,  -->
<!-- 8.48923188703118, 8.72015794019388, 8.41311511132302, 8.18989274986422,  -->
<!-- 9.58925193939856, 8.86238484280032, 6.57686391657304, 7.69795749383113,  -->
<!-- 6.89284501313733, 7.56237520906309, 7.50806761050338, 8.76190042766021,  -->
<!-- 8.67182420785998, 8.6928028288423, 5.55477998539817, 8.50813026981642,  -->
<!-- 6.84861246943879, 7.17618153424334, 7.79669353082753, 8.45511186439401,  -->
<!-- 7.17151846140017, 14.3088093255198, 13.8211717113766, 15.3455923024115,  -->
<!-- 15.2553861144777, 14.2313659913129, 13.2377277088191, 13.3887500248933,  -->
<!-- 15.2527573305137, 15.6460830657283, 12.1309089586467, 14.7136592885399,  -->
<!-- 12.7291103800342, 13.6740725434368, 14.4432535656368, 14.2640154016915,  -->
<!-- 10.9250036664887, 3.9688491270586, 4.87934904974409, 5.34687189743106,  -->
<!-- 4.08595063519405, 7.22681869228831, 4.50583744346245, 2.77695034356361,  -->
<!-- 6.20378141625895, 8.3820321029879, 9.03372834284815, 10.2158734744762,  -->
<!-- 7.11924205336344, 8.17293345543818, 8.86185534907652, 9.33436296563401,  -->
<!-- 8.82486300760958, 12.5453721253363, 13.2316802485173, 13.9815378471748,  -->
<!-- 13.1364291483257, 12.2732901976504, 12.9808185618598, 14.1097354129038,  -->
<!-- 15.1537973647598, 4.69743511321255, 6.26800631733108, 4.38488728390592,  -->
<!-- 3.41700479746604, 6.11247364420876, 3.81711552682839, 4.19157547089119,  -->
<!-- 6.35712566601734, 16.3092084457261, 11.8140685852232, 11.1660561361674,  -->
<!-- 15.6755109971535, 12.4569519390928, 11.8861551266335, 12.6714785452217,  -->
<!-- 14.8460850148032, 4.84357977810708, 4.54151283193202, 5.17640732905581,  -->
<!-- 3.18931343946384, 4.8139448595798, 3.99458221362743, 5.55319059461788,  -->
<!-- 7.13295426372094, 13.7154148968281, 13.3293601768584, 12.0823041480577,  -->
<!-- 13.220908584496, 12.6209859267399, 13.1510004870888, 13.9213813361034,  -->
<!-- 13.5735835765393, 14.0391799190229, 13.9594375745017, 13.8681444785924,  -->
<!-- 11.8273419596164, 12.387024372949, 12.8549516168471, 11.6622810309046,  -->
<!-- 13.1634279942848, 4.74192141272618, 5.69308086320964, 3.82209370650379,  -->
<!-- 4.58741159384222, 4.5585023092884, 5.84183427155652, 2.66277280696669,  -->
<!-- 5.66931172907579, 5.65312847482157, 4.60652378643584, 6.007381097473,  -->
<!-- 5.88679007907044, 3.09541512081622, 5.05504122731778, 6.10349219483331,  -->
<!-- 4.11694422683763, 7.81376134890236, 5.61552820858451, 4.7680441409887,  -->
<!-- 5.9040597706272, 6.76172625964629, 6.56804974156864, 5.70646512426775,  -->
<!-- 8.55959740251826, 14.8859478442859, 12.8641810016763, 13.9507146722941,  -->
<!-- 13.6511939826119, 14.0610036592348, 12.0932309167473, 11.9561690985747,  -->
<!-- 13.3834704224446, 14.9370845695921, 13.2168760021731, 13.175084099748,  -->
<!-- 13.8226169138792, 13.6987999085873, 12.4715790190766, 15.3958701946985,  -->
<!-- 14.7639843784549, 6.63023597536539, 4.59185631372637, 3.69081845690731,  -->
<!-- 2.55220324741457, 6.08125067720779, 4.154016116382, 4.09261142835553,  -->
<!-- 4.44839609665883, 12.9491400387427, 12.1646710164101, 11.9281706710298,  -->
<!-- 12.5054942559561, 12.4518705606822, 12.8143931076607, 12.5628211995582,  -->
<!-- 12.5935228989305, 5.03782815355735, 6.30141606778796, 4.90962012273959,  -->
<!-- 4.29555082720262, 3.365640040133, 6.1998375017999, 4.89742492774428,  -->
<!-- 5.99280211023225, 11.0795191166155, 12.1563578051134, 11.5499275768628,  -->
<!-- 11.5460470765062, 10.6418079744087, 12.5046948087229, 13.0220444883974,  -->
<!-- 10.7715398734765, 14.1235926646024, 13.5711849323716, 13.293079334189,  -->
<!-- 13.8668056795503, 15.3982482508425, 13.8165055735617, 13.987151892333,  -->
<!-- 13.4651718288937, 14.1293028566529, 12.4610748421791, 13.95930013212,  -->
<!-- 15.1496812165805, 12.4467128550288, 11.9201443851972, 14.2938945127407,  -->
<!-- 13.4066073658686, 1.8101398270232, 3.13735180697985, 4.06687006860786,  -->
<!-- 3.89865020805013, 5.81466464359527, 2.61065079229029, 4.27585757686367,  -->
<!-- 3.27178852774207, 13.2357022873919, 14.3087840566066, 15.3682303130033,  -->
<!-- 13.348208323644, 13.6500209655888, 11.5510094742505, 13.3892230951155,  -->
<!-- 13.1269537482756, 10.2560945667933, 12.0804359922268, 10.3592910218725,  -->
<!-- 9.54934149735539, 10.293714365207, 11.2643403559912, 11.7239627676568,  -->
<!-- 10.6036279188435, 9.55594327569744, 9.31879581808449, 9.24028715065364,  -->
<!-- 9.73346365867902, 11.8821899020964, 10.5439880763218, 10.7485928152214,  -->
<!-- 9.24117996961579, 10.9292989908077, 10.3619339566336, 12.4045562204842,  -->
<!-- 10.823636029506, 9.72703506764117, 11.106111914153, 11.7094464867645,  -->
<!-- 10.939110443624, 14.5948001230739, 14.8709996411887, 12.9334131023175,  -->
<!-- 11.9492396023828, 15.4453441990957, 13.2087884938439, 13.5428583784485,  -->
<!-- 13.9256903696192, 7.56030693185435, 7.05279956588672, 8.03303336203786,  -->
<!-- 7.5000684143347, 8.31604210107347, 8.2519985263163, 7.68331936264887,  -->
<!-- 8.87907523214119, 10.9293968261616, 10.3447962925712, 10.2716943549776,  -->
<!-- 11.2494034270377, 11.7406773854441, 11.5089046537027, 10.9977949499264,  -->
<!-- 10.4825988894381, 13.9756222629304, 14.6435647781498, 13.9591666595927,  -->
<!-- 13.0617519503357, 14.0499910851471, 14.436761585219, 13.6475792838987,  -->
<!-- 14.4368840474788, 3.69235502717146, 4.5084144797248, 3.38543440756485,  -->
<!-- 4.02977962628335, 4.75084501491881, 4.99414906799036, 4.00899718735494,  -->
<!-- 4.43986622395757, 8.25866880196598, 7.26681716201199, 8.13859200529837,  -->
<!-- 9.1382868059443, 8.50951773899218, 8.36208627120442, 8.65122215224939,  -->
<!-- 7.72185288962409, 11.9367931388013, 10.7142885611107, 11.5803959172978,  -->
<!-- 12.0462874067845, 9.30535534374599, 10.4333645929495, 10.2132803297655,  -->
<!-- 11.1824759331199, 6.75870897352042, 5.52486581742635, 5.86611688239546,  -->
<!-- 5.74685362488144, 6.10326392607041, 5.84743540176226, 5.82204740607404,  -->
<!-- 7.73893990093243, 2.50652052994591, 2.7422587162081, 5.170087994605,  -->
<!-- 3.8028833228593, 2.64661229088362, 3.31285518906668, 3.22363541171269,  -->
<!-- 2.53359866822847, 5.44917984059094, 2.982480347715, 5.20516609042656,  -->
<!-- 4.13851164156202, 5.4885499188388, 4.12993227837141, 3.97687735162155,  -->
<!-- 5.96030753301912, 15.7133395378645, 12.999376471723, 16.1181866932608,  -->
<!-- 12.337071575629, 15.1650607742458, 13.6524161016291, 12.6808178746546,  -->
<!-- 14.1757572717131, 6.62705668591796, 7.09022354219416, 5.05461258038296,  -->
<!-- 6.37251411162891, 7.12223538479519, 5.05307817756348, 7.43204721321097,  -->
<!-- 5.22605149604714, 12.3347697661121, 13.2750963393163, 13.3688010896872,  -->
<!-- 12.0274316026794, 13.1968068946288, 12.4920266312779, 11.5147888360166,  -->
<!-- 12.8291131844521, 8.61364558639231, 6.42030437860931, 8.36775763331026,  -->
<!-- 7.45620504812666, 7.43702839087896, 7.09332024613087, 7.69193621972322,  -->
<!-- 8.20188352613619, 5.59675081602031, 5.94116817748094, 5.48260373028767,  -->
<!-- 5.23254189737255, 4.71129373728976, 5.32941509981951, 6.92392476074608,  -->
<!-- 7.36929265003196, 14.5631963921835, 12.8520189143259, 13.1810576615304,  -->
<!-- 13.1609197935848, 12.5615750714967, 13.7967855277834, 13.1792405064234,  -->
<!-- 14.6000560819013, 15.3106621126363, 12.730319561334, 15.0887431339083,  -->
<!-- 14.1379783628686, 15.0528170622869, 12.7264116685208, 13.7746077080625,  -->
<!-- 13.7404947924029, 7.76330453978015, 9.74164519043531, 9.98340845977725,  -->
<!-- 8.55027450458247, 10.4929426590874, 10.6586458400499, 9.70821281466514,  -->
<!-- 8.79716058278874, 10.0902938182913, 12.4397650040982, 9.5459481324861,  -->
<!-- 8.64339793702649, 10.206756265369, 8.59608018612427, 9.53678212351657,  -->
<!-- 9.5422304863076, 13.5273182873046, 14.0635439907617, 12.566198054847,  -->
<!-- 14.6083181046382, 12.9262806117314, 12.5533302454073, 12.3662145987562,  -->
<!-- 12.5621843721202, 12.3545304956476, 12.7279311345207, 11.7796594955452,  -->
<!-- 11.4554515289435, 10.6683999472386, 12.7829441539383, 12.158232007489,  -->
<!-- 11.1482039398415, 3.5712996604042, 3.11366522727335, 4.72275537041487,  -->
<!-- 3.30382029727844, 3.26414102007094, 2.87225684372709, 4.6919729371398,  -->
<!-- 1.66382921530937, 10.6343605636659, 10.5084714811187, 8.72264030609084,  -->
<!-- 10.3377622551636, 10.7367359599381, 10.933497779381, 10.2066249999531,  -->
<!-- 11.4966330910903, 3.82760779139892, 4.52121058841527, 1.43736292466022,  -->
<!-- 1.21402735476862, 4.56051060448518, 4.8193457278838, 3.62777744374615,  -->
<!-- 4.3842572968243, 13.6640162109695, 13.1730907941801, 14.1383885169289,  -->
<!-- 13.5062904896795, 15.1144064762676, 15.1239863338965, 14.9798815485757,  -->
<!-- 14.4981417778829, 4.01690805760752, 4.18092247443039, 4.19945198754768,  -->
<!-- 2.03601517531419, 4.22055458670584, 3.56944471594118, 3.34938683742488,  -->
<!-- 3.76091903444052), .Dim = c(8L, 56L), .Dimnames = structure(list( -->
<!--     iterations = NULL, NULL), .Names = c("iterations", ""))) -->
<!-- data_list <- list( -->
<!--   x = x, -->
<!--   y = y_obs, -->
<!--   N = n -->
<!-- ) -->
<!-- ``` -->
<!-- Then plot both the observed vectors and the simulated vectors: -->
<!-- ```{r, message = FALSE, echo = TRUE, fig.width = 8, fig.height = 6} -->
<!-- par(mfrow = c(3, 3)) -->
<!-- # Plot the observed data -->
<!-- plot(data_list$x, data_list$y, -->
<!--      xlab = "x", ylab = "y", -->
<!--      main = "observed") -->
<!-- # Plot the simulated data -->
<!-- for (i in 1:8) { -->
<!--   plot(data_list$x, simulated_data[i, ], -->
<!--        xlab = "x", ylab = "y", -->
<!--        main = "simulated") -->
<!-- } -->
<!-- par(mfrow = c(1, 1)) -->
<!-- ``` -->
<!-- > **Figure 3.** The actual input data (top left) and eight -->
<!-- > simulated datasets. If the simulated datasets are highly -->
<!-- > similar to the actual data, the model was able to learn -->
<!-- > the relevant patterns in the data. -->
<!-- Seems fine by me! -->



 ]]></description>
  <category>R</category>
  <category>piecewise regression</category>
  <category>non-linearities</category>
  <category>Bayesian statistics</category>
  <category>Stan</category>
  <guid>https://janhove.github.io/posts/2018-07-27-bayesian-two-breakpoint-model/index.html</guid>
  <pubDate>Thu, 26 Jul 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Baby steps in Bayes: Piecewise regression</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2018-07-04-bayesian-breakpoint-model/index.html</link>
  <description><![CDATA[ 



<p>Inspired by Richard McElreath’s excellent book <em>Statistical rethinking: A Bayesian course with examples in R and Stan</em>, I’ve started dabbling in Bayesian statistics. In essence, Bayesian statistics is an approach to statistical inference in which the analyst specifies a generative model for the data (i.e., an equation that describes the factors they suspect gave rise to the data) as well as (possibly vague) relevant information or beliefs that are external to the data proper. This information or these beliefs are then adjusted in light of the data observed.</p>
<p>I’m hardly an expert in Bayesian statistics (or the more commonly encountered ‘orthodox’ or ‘frequentist’ statistics, for that matter), but I’d like to understand it better – not only conceptually, but also in terms of how the statistical model should be specified. While quite a few statisticians and methodologists tout Bayesian statistics for a variety of reasons, my interest is primarily piqued by the prospect of being able to tackle problems that would be impossible or at least awkward to tackle with the tools I’m pretty comfortable with at the moment.</p>
<p>In order to gain some familiarity with Bayesian statistics, I plan to set myself a couple of problems and track my efforts in solving them here in a <em>Dear diary</em> fashion. Perhaps someone else finds them useful, too.</p>
<p>The first problem that I’ll tackle is fitting a regression model in which the relationship between the predictor and the outcome may contain a breakpoint at one unknown predictor value. One domain in which such models are useful is in testing hypotheses that claim that the relationship between the age of onset of second language acquisition (AOA) and the level of ultimate attainment in that second language flattens after a certain age (typically puberty). It’s possible to fit frequentist breakpoint models, but estimating the breakpoint age is a bit cumbersome (see blog post <a href="../2014-08-20-adjusted-pvalues-breakpoint-regression"><em>Calibrating p-values in ‘flexible’ piecewise regression models</em></a>). But in a Bayesian approach, it should be possible to estimate both the regression parameters as well as the breakpoint itself in the same model. That’s what I’ll try here.</p>
<section id="software" class="level2">
<h2 class="anchored" data-anchor-id="software">Software</h2>
<p>Apart from R, you’ll need RStan. Follow the installation instructions on RStan’s <a href="https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started">GitHub page</a>.</p>
<p>Once you’ve installed RStan, fire up a new R session and run these commands.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-1_3c8370e7d47616681fde281647049b0c">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load rstan package</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rstan)</span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Avoid unnecessary recompiling</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rstan_options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">auto_write =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># optional: Distribute work over multiple CPU cores</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mc.cores =</span> parallel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">detectCores</span>())</span></code></pre></div>
</div>
</section>
<section id="simulating-some-data" class="level2">
<h2 class="anchored" data-anchor-id="simulating-some-data">Simulating some data</h2>
<p>I’ll analyse some real data in a minute. But I think it’s useful to analyse some data I know the true data generating mechanism of first in order to make sure that the model works as intended. The commands below generate data with properties comparable to the real data I’ll analyse in a bit.</p>
<p>The first graph below shows the mean outcome value (‘GJT’, i.e., L2 grammaticality judgement task result) depending on the age of onset of acquisition. As you can see, there’s a bend in the function at age 10.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-2_c3ca601d014784ad46a087450cbfee71">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set random seed (today's date)</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RNGversion</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.5.3"</span>)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2018-07-04</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 80 data points</span></span>
<span id="cb2-6">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate 'age of acquisition' data (integers between 1 and 50)</span></span>
<span id="cb2-9">AOA <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set breakpoint at some plausible age</span></span>
<span id="cb2-12">BP <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate average values on GJT (~ 'grammar test') outcome</span></span>
<span id="cb2-15">meanGJT <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(AOA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> BP,</span>
<span id="cb2-16">                  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">176</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (AOA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> BP),</span>
<span id="cb2-17">                  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">176</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (AOA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> BP))</span>
<span id="cb2-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(AOA, meanGJT, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Underlying function"</span>)</span>
<span id="cb2-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">segments</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> BP, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">176</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">segments</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> BP, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">176</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2018-07-04-bayesian-breakpoint-model/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="576"></p>
<figcaption class="figure-caption"><strong>Figure 1.</strong> In the simulated data, the underlying relationship between AOA and GJT has a steeper slope for AOA values below 10 than for AOA values over 10.</figcaption>
</figure>
</div>
</div>
</div>
<p>In the second graph, some random normal error has been added to these mean values; it is the data in this figure that I’ll analyse first.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-3_e56959e9f5232934d0c647bd2128652b">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate observed values</span></span>
<span id="cb3-2">error <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb3-3">obsGJT <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> meanGJT, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> error)</span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(AOA, obsGJT, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Observed data"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2018-07-04-bayesian-breakpoint-model/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="576"></p>
<figcaption class="figure-caption">&gt; <strong>Figure 2.</strong> Interindividual differences obfuscate the nonlinear relationship and the true position of the breakpoint age somewhat.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="specifying-the-model" class="level2">
<h2 class="anchored" data-anchor-id="specifying-the-model">Specifying the model</h2>
<p>While there exist some (truly excellent) front-end interfaces for fitting Bayesian models (e.g., <a href="https://github.com/paul-buerkner/brms">brms</a>), I’ll specify the model in RStan proper. This is considerably more involved than writing out a model using R’s <code>lm()</code> function, but this added complexity buys you something in terms of flexibility.</p>
<p>A Stan model specification has three required blocks.</p>
<section id="data" class="level3">
<h3 class="anchored" data-anchor-id="data"><code>data</code></h3>
<p>This is where you specify what the input data looks like. Below I specified that the model should accept two variables (<code>GJT</code> and <code>AOA</code>) both with the same number of observations (<code>N</code>). Unlike <code>lm()</code>, <code>stan()</code> accepts non-rectangular data (e.g., variables with different lengths), so you need to prespecify the number of observations per variable.</p>
</section>
<section id="parameters" class="level3">
<h3 class="anchored" data-anchor-id="parameters"><code>parameters</code></h3>
<p>The model parameters you want to estimate. A breakpoint regression model has five parameters:</p>
<ul>
<li>The breakpoint. I constrained the breakpoint to be between 1 and 20 since breakpoints beyond that range are inconsistent with any proposed theory;</li>
<li>the slope of the regression before the breakpoint;</li>
<li>the slope of the regression after the breakpoint;</li>
<li>a constant term (‘intercept’), most easily written as the expected outcome value at the breakpoint;</li>
<li>the standard deviation of the normal error. Standard deviations are always positive; this constraint is set by including <code>&lt;lower = 0&gt;</code> in the declaration. (Incidentally, the error term doesn’t have to be normal.)</li>
</ul>
</section>
<section id="model" class="level3">
<h3 class="anchored" data-anchor-id="model"><code>model</code></h3>
<p>This is where you specify how the parameters and the data relate to each other. The assumed (and for the simulated data: correct) data generating mechanism is that the observed GJT values were drawn from a normal distribution whose mean depends on the participant’s AOA (see <code>transformed parameters</code> below) and the breakpoint and which has the same standard deviation everywhere.</p>
<p>You also have to provide so-called prior distributions for any parameters. These encode the information or beliefs you have about the parameters which you didn’t need the data for. I set the following priors:</p>
<ul>
<li>A truncated normal prior for the breakpoint centred at 12 and with a standard deviation of 6. The prior is truncated at 1 and at 20; this was specified in the <code>parameters</code> block. This prior essentially encodes that, for all I know, the breakpoint occurs somewhere between the ages of 1 and 20 and is slightly more likely to occur around age 10 to 14 and around ages 2 or 19. I tried specifying a uniform prior, but that didn’t work.</li>
<li>Normal priors centred around 0 and with standard deviations of 5 for both slope parameters. What this means is that I think it’s highly unlikely that these slopes are incredibly steep (say, a 100-point increase or decrease per additional AOA). These priors aren’t particularly informative, though: According to them, negative and positive slopes are equally likely. If you have a sufficient amount of data, such priors only have a minimal effect on the results. But when you don’t have this luxury, even such slightly informative priors may be better than none at all for keeping the inferences within reasonable bounds.</li>
<li>A normal prior centred around 150 with a standard deviation of 25 for the intercept. This essentially means that I expect the average outcome at the breakpoint to lie somewhere between 100 and 200. For the real data I’ll analyse later, this assumption is reasonable enough since the data were pretty much guaranteed to be bound between 102 and 204.</li>
<li>A half-normal prior starting at 0 with a standard deviation of 20 for the standard deviation of the residuals. The <em>normal</em> part is specified in this prior, the <em>half</em> part results from the constraint set in the <code>parameters</code> block. A half-normal distribution starting at 0 with a standard deviation of 20 in essence encodes the belief that the residual error will probably have a standard deviation of less than 2*20 = 40, with smaller values being more likely than large ones. If you don’t set a prior for this parameter (or any other parameter, for that matter), a uniform prior spanning to infinity is assumed. So even when you don’t specify a prior, you’re using one.</li>
</ul>
<p>I also added two optional blocks:</p>
</section>
<section id="transformed-parameters" class="level3">
<h3 class="anchored" data-anchor-id="transformed-parameters"><code>transformed parameters</code></h3>
<p>This block specifies derivations of model parameters, be it because they’re the actual object of inference or just because it simplifies the notation. I specified two derived parameters.</p>
<ul>
<li><code>conditional_mean</code> describes the outcome of the regression equation without the error term for each observation:
<ul>
<li>If the participant’s AOA is <em>before</em> the breakpoint, <code>conditional_mean</code> = <code>intercept</code> + <code>slope1</code> * <code>AOA</code>.</li>
<li>If the participant’s AOA is <em>after</em> the breakpoint, <code>conditional_mean</code> = <code>intercept</code> + <code>slope2</code> * <code>AOA</code>.</li>
</ul></li>
<li><code>slope_difference</code> is just the difference between the slope after and the slope before the breakpoint.</li>
</ul>
</section>
<section id="generated-quantities" class="level3">
<h3 class="anchored" data-anchor-id="generated-quantities"><code>generated quantities</code></h3>
<p>Here you can specify some model outputs. I specified three such outputs:</p>
<ul>
<li><code>sim_GJT</code>: Using the <code>normal_rng()</code> function, I simulate new GJT data from the model for each AOA observation in the original dataset. If the model is approximately accurate, the actually observed data should look fairly similar to these simulated data points. I’ll check this later.</li>
<li><code>log_lik</code>: I won’t discuss this in this post.</li>
<li><code>sim_conditional_mean</code>: For each AOA between 1 and 50 (hence: a vector of length 50), I’ll ask the model to output what it thinks is the conditional GJT mean. This will be useful for drawing effect plots.</li>
</ul>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-4_f67a7fce4a23de2bc2d0a7267c0b7962">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">bp_code <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb4-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">// You need to specify the kind of input data, incl. number of observations.</span></span>
<span id="cb4-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">data { </span></span>
<span id="cb4-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  int&lt;lower=1&gt; N;  // total number of observations (integer); at least 1</span></span>
<span id="cb4-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real GJT[N];     // outcome variable with N elements (real-valued)</span></span>
<span id="cb4-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real AOA[N];     // predictor variable with N elements (real-valued)</span></span>
<span id="cb4-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">// the parameters to be estimated from the data</span></span>
<span id="cb4-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">parameters { </span></span>
<span id="cb4-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real intercept;                 // = predicted outcome at breakpoint</span></span>
<span id="cb4-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_before;              // slope before the breakpoint</span></span>
<span id="cb4-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_after;               // slope after the breakpoint</span></span>
<span id="cb4-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 1, upper = 20&gt; bp; // the breakpoint age, with some constraints</span></span>
<span id="cb4-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real&lt;lower = 0&gt; error;          // standard deviation of residuals</span></span>
<span id="cb4-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                  //  (always positive, hence &lt;lower = 0&gt;)</span></span>
<span id="cb4-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">} </span></span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">// Functions of estimated parameters.</span></span>
<span id="cb4-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">transformed parameters{</span></span>
<span id="cb4-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] conditional_mean; // the estimated average GJT for each AOA observation</span></span>
<span id="cb4-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  real slope_difference;      // the difference between slope_after and slope_before</span></span>
<span id="cb4-23"></span>
<span id="cb4-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_difference = slope_after - slope_before;  </span></span>
<span id="cb4-25"></span>
<span id="cb4-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // conditional_mean depends on whether AOA is before or after bp</span></span>
<span id="cb4-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  for (i in 1:N) {</span></span>
<span id="cb4-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    if (AOA[i] &lt; bp) {</span></span>
<span id="cb4-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      conditional_mean[i] = intercept + slope_before * (AOA[i] - bp);</span></span>
<span id="cb4-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    } else {</span></span>
<span id="cb4-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      conditional_mean[i] = intercept + slope_after * (AOA[i] - bp);</span></span>
<span id="cb4-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb4-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  }</span></span>
<span id="cb4-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-35"></span>
<span id="cb4-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">// The model itself specifies how the data are expected to have</span></span>
<span id="cb4-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">// been generated and what the prior expectations for the model parameters are.</span></span>
<span id="cb4-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">model {</span></span>
<span id="cb4-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Set priors</span></span>
<span id="cb4-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  intercept ~ normal(150, 25);  // Average GJT at breakpoint</span></span>
<span id="cb4-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_before ~ normal(0, 5);  // Slope before breakpoint</span></span>
<span id="cb4-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  slope_after ~ normal(0, 5);   // Slope after breakpoint</span></span>
<span id="cb4-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  bp ~ normal(12, 6);           // Breakpoint age, pretty wide, but somewhere in childhood/puberty</span></span>
<span id="cb4-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  error ~ normal(0, 20);        // Residual error, likely between 0 and 2*20</span></span>
<span id="cb4-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb4-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // How the data are expected to have been generated:</span></span>
<span id="cb4-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // normal distribution with mu = conditional_mean and </span></span>
<span id="cb4-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // std = error, estimated from data.</span></span>
<span id="cb4-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  for (i in 1:N) {</span></span>
<span id="cb4-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    GJT[i] ~ normal(conditional_mean[i], error);</span></span>
<span id="cb4-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  }</span></span>
<span id="cb4-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-53"></span>
<span id="cb4-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">generated quantities {</span></span>
<span id="cb4-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] sim_GJT;               // Simulate new data using estimated parameters.</span></span>
<span id="cb4-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[N] log_lik;               // Useful for model comparisons; not done here.</span></span>
<span id="cb4-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  vector[50] sim_conditional_mean; // Useful for plotting.</span></span>
<span id="cb4-58"></span>
<span id="cb4-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  // Compute conditional means for AOAs between 1 and 50.</span></span>
<span id="cb4-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  for (i in 1:50) {</span></span>
<span id="cb4-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    if (i &lt; bp) {</span></span>
<span id="cb4-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      sim_conditional_mean[i] = intercept + slope_before * (i - bp);</span></span>
<span id="cb4-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    } else {</span></span>
<span id="cb4-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      sim_conditional_mean[i] = intercept + slope_after * (i - bp);</span></span>
<span id="cb4-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb4-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  }</span></span>
<span id="cb4-67"></span>
<span id="cb4-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  for (i in 1:N) {</span></span>
<span id="cb4-69"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    sim_GJT[i] = normal_rng(conditional_mean[i], error);</span></span>
<span id="cb4-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    log_lik[i] = normal_lpdf(GJT[i] | conditional_mean[i], error);</span></span>
<span id="cb4-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  }</span></span>
<span id="cb4-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span></code></pre></div>
</div>
</section>
</section>
<section id="running-the-model" class="level2">
<h2 class="anchored" data-anchor-id="running-the-model">Running the model</h2>
<p>To fit the model, first put the input data in a list. Then supply this list and the model code to the <code>stan()</code> function. The <code>stan()</code> function prints a lot of output to the console, which I didn’t reproduce here. Unless you receive genuine warnings or error (i.e., red text), everything’s fine.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-5_a687a4e236e6a42b87a5bc59f45725f2">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">data_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AOA =</span> AOA,</span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">GJT =</span> obsGJT,</span>
<span id="cb5-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(AOA)</span>
<span id="cb5-5">)</span>
<span id="cb5-6">fit_bp_sim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stan</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_code =</span> bp_code, </span>
<span id="cb5-7">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data_list,</span>
<span id="cb5-8">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8000</span>)</span></code></pre></div>
</div>
</section>
<section id="inspecting-the-model" class="level2">
<h2 class="anchored" data-anchor-id="inspecting-the-model">Inspecting the model</h2>
<section id="model-summary" class="level3">
<h3 class="anchored" data-anchor-id="model-summary">Model summary</h3>
<p>A summary with the parameter estimates and their uncertainties can be generated using the <code>print()</code> function.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-6_6d14aea95073b5d2ca32eddf99f1ef97">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(fit_bp_sim,</span>
<span id="cb6-2">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">par =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"intercept"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_before"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_after"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_difference"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Inference for Stan model: anon_model.
4 chains, each with iter=8000; warmup=4000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=16000.

                   mean se_mean   sd   2.5%    25%    50%    75%  97.5% n_eff
intercept        175.41    0.02 1.36 172.99 174.53 175.32 176.20 178.36  4271
bp                10.31    0.03 2.32   5.73   8.91  10.33  11.69  15.11  4639
slope_before      -1.21    0.01 0.36  -1.97  -1.35  -1.16  -1.00  -0.74  3927
slope_after       -0.38    0.00 0.03  -0.44  -0.40  -0.38  -0.36  -0.32  6081
slope_difference   0.83    0.01 0.36   0.34   0.62   0.78   0.97   1.57  4119
error              2.92    0.00 0.24   2.49   2.75   2.90   3.07   3.44  8623
                 Rhat
intercept           1
bp                  1
slope_before        1
slope_after         1
slope_difference    1
error               1

Samples were drawn using NUTS(diag_e) at Sun Aug  6 15:33:51 2023.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).</code></pre>
</div>
</div>
<p>For each parameter, the <code>mean</code> column contains the mean estimate of that parameter, whereas the <code>50%</code> column contains its median estimate. The <code>sd</code> column shows the standard deviation of the parameter estimates; this corresponds to the parameter estimate’s standard error. The <code>2.5%</code>, <code>25%</code>, <code>75%</code> and <code>97.5%</code> columns contain the respective percentiles of the distribution of the parameter estimates. So the average estimated breakpoint (<code>bp</code>) occurs somewhere between age 10 and 11, with 95% of the estimates contained in an interval between roughly 6 and 15 years. Similarly, the average estimated slope before the breakpoint is about -1.2 with a 95% ‘credibility’ interval from -1.98 to -0.75, and so on. The parameter estimates, then, are neatly centred around their true values, suggesting that the model does what it’s supposed to do.</p>
</section>
<section id="posterior-predictive-checks" class="level3">
<h3 class="anchored" data-anchor-id="posterior-predictive-checks">Posterior predictive checks</h3>
<p>If the model is any good, data simulated from it should be pretty similar to the data actually observed. In the <code>generated quantities</code> block, I let the model output such simulated data (<code>sim_GJT</code>). Using the <code>shinystan</code> package, we can perform some ‘posterior predictive checks’:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-7_69edbe7b25d0710185c67de9dfac4478">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">shinystan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">launch_shinystan</span>(fit_bp_sim)</span></code></pre></div>
</div>
<p>Click ‘Diagnose’ &gt; ‘PPcheck’. Under ‘Select y (vector of observations)’, pick <code>obsGJT</code> (the simulated data analysed above). Under ‘Parameter/generated quantity from model’, pick <code>sim_GJT</code> (the additional simulated data generated in the model code). Then click on ‘Distributions of observed data vs replications’ and ‘Distributions of test statistics’ to check if the properties of the simulated data correspond to those of the real data.</p>
<p>You can also take this a step further and check whether the model is able to generate scatterplots similar to the one in Figure 2. If the following doesn’t make any immediate sense, please refer to the blog post <a href="../2018-04-25-graphical-model-checking"><em>Checking model assumptions without getting paranoid</em></a>, because the logic is pretty similar.</p>
<p>First extract some vectors of simulated data from the model output:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-8_7a4c7237d94e8ac2bfbfdaa65466507e">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rstan's 'extract' is likely to conflict with another function</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># called 'extract', so specify the package, too.</span></span>
<span id="cb9-3">simulated_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rstan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract</span>(fit_bp_sim)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sim_GJT</span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulated_data is a matrix with 4000 rows and 80 columns.</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For the plot, I select 8 rows at random:</span></span>
<span id="cb9-6">simulated_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> simulated_data[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>), ]</span></code></pre></div>
</div>
<p>Then plot both the observed vectors and the simulated vectors:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-9_6cec63be8111f75826c31d46b75bb8d8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the observed data</span></span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(data_list<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>AOA, data_list<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GJT,</span>
<span id="cb10-5">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AOA"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GJT"</span>,</span>
<span id="cb10-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>)</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the simulated data</span></span>
<span id="cb10-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) {</span>
<span id="cb10-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(data_list<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>AOA, simulated_data[i, ],</span>
<span id="cb10-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AOA"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GJT"</span>,</span>
<span id="cb10-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"simulated"</span>)</span>
<span id="cb10-13">}</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2018-07-04-bayesian-breakpoint-model/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="figure-caption"><strong>Figure 3.</strong> The actual input data (top left) and eight simulated datasets. If the simulated datasets are highly similar to the actual data, the model was able to learn the relevant patterns in the data.</figcaption>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</div>
<p>The simulated data look pretty much identical to the observed data, again demonstrating that the model is doing a pretty good job of learning the patterns in the data. This isn’t surprising, since I knew how the data were generated and constructed the model correspondingly. But it’s reassuring.</p>
<p>(Incidentally, I’m sure it’s possible to generate lineups more similar to the ones in that <a href="../2018-04-25-graphical-model-checking">previous blog post</a>, but this blog post is long as it is already.)</p>
</section>
<section id="effect-plot" class="level3">
<h3 class="anchored" data-anchor-id="effect-plot">Effect plot</h3>
<p>To visualise the model, you can draw an effect plot showing the average estimated relationship between AOA and GJT as well as the uncertainty about this relationship. To this end, I had the model output vectors of the fitted conditional means for AOAs 1 through 50 (<code>sim_conditional_mean</code>). With the commands below, I extract these vectors and then compute their mean values as well as some percentiles at each AOA.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-10_3bb385c402405b797a6d8f8192c063a8">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">sim_conditional_means <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rstan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract</span>(fit_bp_sim)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sim_conditional_mean</span>
<span id="cb12-2">df_sim_cond_means <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb12-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AOA =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb12-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meanGJT =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(sim_conditional_means, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, mean),</span>
<span id="cb12-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lo80GJT =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(sim_conditional_means, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, quantile, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.10</span>),</span>
<span id="cb12-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hi80GJT =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(sim_conditional_means, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, quantile, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.90</span>),</span>
<span id="cb12-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lo95GJT =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(sim_conditional_means, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, quantile, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>),</span>
<span id="cb12-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hi95GJT =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(sim_conditional_means, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, quantile, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>)</span>
<span id="cb12-9">)</span>
<span id="cb12-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(df_sim_cond_means)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  AOA  meanGJT  lo80GJT  hi80GJT  lo95GJT  hi95GJT
1   1 186.0867 184.3968 187.7745 183.4985 188.7348
2   2 184.8770 183.4161 186.3232 182.6086 187.1155
3   3 183.6743 182.4180 184.9381 181.6091 185.5990
4   4 182.4817 181.3312 183.6296 180.4895 184.1939
5   5 181.2997 180.1643 182.4048 179.2258 182.9274
6   6 180.1329 178.9212 181.2531 177.9611 181.7475</code></pre>
</div>
</div>
<p>These mean values and percentiles can then be plotted as follows; the black line shows the average regression line, the light grey ribbon its 95% credibility region, and the dark grey ribbon its 80% credibility region.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-11_2096b9556bc5ea04f4e028c8e42c7603">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df_sim_cond_means,</span>
<span id="cb14-3">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> AOA,</span>
<span id="cb14-4">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> meanGJT)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> lo95GJT,</span>
<span id="cb14-6">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> hi95GJT),</span>
<span id="cb14-7">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> lo80GJT,</span>
<span id="cb14-9">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> hi80GJT),</span>
<span id="cb14-10">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkgrey"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2018-07-04-bayesian-breakpoint-model/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="figure-caption"><strong>Figure 4.</strong> The modelled relationship between AOA and GJT for the made-up data with 80% and 95% credibility regions. The bend around AOA = 10 is noticeable but it smoothed out due to the uncertainty about the precise position of the breakpoint.</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="and-now-for-real" class="level2">
<h2 class="anchored" data-anchor-id="and-now-for-real">And now for real</h2>
<p>Let’s now analyse some real data using the same model. These data stem from a study by <a href="https://doi.org/10.1017/S0142716410000056">DeKeyser et al.&nbsp;(2010)</a>.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-12_b9b743b74da3e9587b8120f334e72f04">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://homeweb.unifr.ch/VanhoveJ/Pub/papers/CPH/DeKeyser2010NorthAmerica.csv"</span>)</span>
<span id="cb15-2">data_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb15-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AOA =</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>AOA,</span>
<span id="cb15-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">GJT =</span> d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GJT,</span>
<span id="cb15-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(d)</span>
<span id="cb15-6">)</span>
<span id="cb15-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(data_list<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>AOA, data_list<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GJT)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2018-07-04-bayesian-breakpoint-model/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption"><strong>Figure 5.</strong> AOA–GJT relationship as observed in DeKeyser et al.’s (2010) North America study.</figcaption>
</figure>
</div>
</div>
</div>
<p>Let’s fit the model:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-13_26f93522399ab73abe9c1853bc8aad13">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">fit_bp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stan</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_code =</span> bp_code, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data_list, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</div>
<p>And output summary statistics:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-14_2420e220fa4120b5d28ed0fdee43a7b9">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(fit_bp,</span>
<span id="cb17-2">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">par =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"intercept"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_before"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_after"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope_difference"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Inference for Stan model: anon_model.
4 chains, each with iter=8000; warmup=4000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=16000.

                   mean se_mean   sd   2.5%    25%    50%    75%  97.5% n_eff
intercept        172.27    0.13 7.40 159.77 166.71 171.41 177.45 187.49  3385
bp                12.50    0.07 4.30   3.32   9.40  13.29  15.82  19.25  3436
slope_before      -2.83    0.04 2.38  -7.65  -3.85  -2.85  -1.98   3.29  3759
slope_after       -1.13    0.00 0.13  -1.37  -1.22  -1.13  -1.04  -0.86  5177
slope_difference   1.70    0.04 2.41  -4.45   0.83   1.76   2.77   6.51  3739
error             16.38    0.01 1.37  13.94  15.42  16.30  17.24  19.32  8827
                 Rhat
intercept           1
bp                  1
slope_before        1
slope_after         1
slope_difference    1
error               1

Samples were drawn using NUTS(diag_e) at Sun Aug  6 15:35:52 2023.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).</code></pre>
</div>
</div>
<p>The model doesn’t seem to have learnt a whole lot about the position of the breakpoint: the 95% credibility interval ranges from age 3 till age 19. Furthermore, it doesn’t really seem to know about what happens at this breakpoint: the 95% CrI for the difference between the <em>after</em> and the <em>before</em> slopes ranges from about -5.1 till 6.4.</p>
<p>We ought to perform some posterior predictive checks to make sure the model makes sense, though:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-15_d9c9aef7bfba365078103e7a133ae002">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rstan's 'extract' is likely to conflict with another function</span></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># called 'extract', so specify the package, too.</span></span>
<span id="cb19-3">simulated_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rstan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract</span>(fit_bp)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sim_GJT</span>
<span id="cb19-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulated_data is a matrix with 4000 rows and 80 columns.</span></span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For the plot, I select 8 rows at random:</span></span>
<span id="cb19-6">simulated_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> simulated_data[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>), ]</span></code></pre></div>
</div>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-16_4006629f75c73ad4e3b1aae0763ead0c">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the observed data</span></span>
<span id="cb20-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(data_list<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>AOA, data_list<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>GJT,</span>
<span id="cb20-5">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AOA"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GJT"</span>,</span>
<span id="cb20-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"observed"</span>)</span>
<span id="cb20-7"></span>
<span id="cb20-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the simulated data</span></span>
<span id="cb20-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) {</span>
<span id="cb20-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(data_list<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>AOA, simulated_data[i, ],</span>
<span id="cb20-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AOA"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GJT"</span>,</span>
<span id="cb20-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"simulated"</span>)</span>
<span id="cb20-13">}</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2018-07-04-bayesian-breakpoint-model/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="figure-caption">&gt; <strong>Figure 6.</strong> The actual input data (top left) and eight simulated datasets. Some patterns in the simulated data couldn’t have occurred in the actual dataset: the maximum possible GJT result was 204, yet a couple of datasets contain values above that. This is something that may be worth taking into account in a more refined model, but baby steps.</figcaption>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</div>
<p>Figure 6 suggests that it may be possible to improve the model since the simulated data display some patterns that would have been impossible to observe in the actual study (viz., GJT values larger than 204). But this should suffice for now.</p>
<p>As a final step, we can draw an effect plot as before:</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-17_3b78d2ba8bbce5af5aad704142821c48">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">sim_conditional_means <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract</span>(fit_bp)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sim_conditional_mean</span>
<span id="cb22-2">df_sim_cond_means <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb22-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">AOA =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb22-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meanGJT =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(sim_conditional_means, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, mean),</span>
<span id="cb22-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lo80GJT =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(sim_conditional_means, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, quantile, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.10</span>),</span>
<span id="cb22-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hi80GJT =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(sim_conditional_means, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, quantile, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.90</span>),</span>
<span id="cb22-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lo95GJT =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(sim_conditional_means, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, quantile, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>),</span>
<span id="cb22-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hi95GJT =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(sim_conditional_means, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, quantile, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>)</span>
<span id="cb22-9">)</span></code></pre></div>
</div>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-18_7f503efea85de1df47239d701091ea49">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df_sim_cond_means,</span>
<span id="cb23-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> AOA,</span>
<span id="cb23-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> meanGJT)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> lo95GJT,</span>
<span id="cb23-5">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> hi95GJT),</span>
<span id="cb23-6">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> lo80GJT,</span>
<span id="cb23-8">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> hi80GJT),</span>
<span id="cb23-9">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkgrey"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://janhove.github.io/posts/2018-07-04-bayesian-breakpoint-model/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid figure-img" width="768"></p>
<figcaption class="figure-caption"><strong>Figure 7.</strong> Effect plot for the piecewise regression model applied to DeKeyser et al.’s (2010) North America data. There is substantial uncertainty about whether the regression line should indeed contain a breakpoint.</figcaption>
</figure>
</div>
</div>
</div>
<p>Given the uncertainty about the position of the breakpoint and what happens to the regression line at that breakpoint, it would make sense to fit a linear regression model to these data and then estimate how much allowing for a breakpoint actually buys us in terms of fit to the data. This is why I had the model generate <code>log_lik</code> values, too, but I’ll discuss those another time.</p>
</section>
<section id="software-versions" class="level2">
<h2 class="anchored" data-anchor-id="software-versions">Software versions</h2>
<p>Please note that I reran the code on this page on August 6, 2023.</p>
<div class="cell" data-hash="index_cache/html/unnamed-chunk-19_cccf19116477280919f0cc5cd4e34363">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.2 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-06
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package      * version date (UTC) lib source
 cachem         1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr          3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 cli            3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 codetools      0.2-19  2023-02-01 [4] CRAN (R 4.2.2)
 colorspace     2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 crayon         1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 curl           5.0.1   2023-06-07 [1] CRAN (R 4.3.1)
 devtools       2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest         0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 dplyr          1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 ellipsis       0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate       0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi          1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 fastmap        1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 fs             1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics       0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2      * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue           1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gridExtra      2.3     2017-09-09 [1] CRAN (R 4.3.0)
 gtable         0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools      0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets    1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv         1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 inline         0.3.19  2021-05-31 [1] CRAN (R 4.3.1)
 jsonlite       1.8.7   2023-06-29 [1] CRAN (R 4.3.1)
 knitr          1.39    2022-04-26 [2] CRAN (R 4.2.0)
 later          1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lifecycle      1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 loo            2.6.0   2023-03-31 [1] CRAN (R 4.3.1)
 magrittr       2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 matrixStats    1.0.0   2023-06-02 [1] CRAN (R 4.3.1)
 memoise        2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mime           0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI         0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 munsell        0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 pillar         1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild       1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig      2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload        1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 prettyunits    1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx       3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis        0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises       1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps             1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr          1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6             2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 Rcpp           1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 RcppParallel   5.1.7   2023-02-27 [1] CRAN (R 4.3.1)
 remotes        2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 rlang          1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown      2.21    2023-03-26 [1] CRAN (R 4.3.0)
 rstan        * 2.26.22 2023-08-01 [1] local
 rstudioapi     0.14    2022-08-22 [1] CRAN (R 4.3.0)
 scales         1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo    1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shiny          1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 StanHeaders  * 2.26.27 2023-06-14 [1] CRAN (R 4.3.1)
 stringi        1.7.12  2023-01-11 [1] CRAN (R 4.3.1)
 stringr        1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 tibble         3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyselect     1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 urlchecker     1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis        2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8           1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 V8             4.3.0   2023-04-08 [1] CRAN (R 4.3.0)
 vctrs          0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 withr          2.5.0   2022-03-03 [2] CRAN (R 4.2.0)
 xfun           0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xtable         1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 yaml           2.3.5   2022-02-21 [2] CRAN (R 4.2.0)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>R</category>
  <category>Stan</category>
  <category>piecewise regression</category>
  <category>non-linearities</category>
  <category>Bayesian statistics</category>
  <guid>https://janhove.github.io/posts/2018-07-04-bayesian-breakpoint-model/index.html</guid>
  <pubDate>Tue, 03 Jul 2018 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Checking model assumptions without getting paranoid</title>
  <dc:creator>Jan Vanhove</dc:creator>
  <link>https://janhove.github.io/posts/2018-04-25-graphical-model-checking/index.html</link>
  <description><![CDATA[ 



<p>Statistical models come with a set of assumptions, and violations of these assumptions can render irrelevant or even invalid the inferences drawn from these models. It is important, then, to verify that your model’s assumptions are at least approximately tenable for your data. To this end, statisticians commonly recommend that you check the distribution of your model’s residuals (i.e., the difference between your actual data and the model’s fitted values) graphically. An excellent piece of advice that, unfortunately, causes some students to become paranoid and see violated assumptions everywhere they look. This blog post is for them.</p>
<p>In the following, I’ll outline the assumptions of the simple linear regression and how they can be checked visually without succumbing to paranoia. t-tests, ANOVA and ANCOVA all make essentially the same assumptions. These assumptions can be checked in the same way as illustrated below, but doing so requires that they are rewritten as regression models. For instance, if you want to test whether the mean of a variable called <img src="https://latex.codecogs.com/png.latex?Y"> varies between group encoded in variable <img src="https://latex.codecogs.com/png.latex?X"> using a t-test, you’d ordinarily do this in R using the following syntax:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> X, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var.equal =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>
<p>But you’ll get the same results if you rewrite this as a linear model:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> X, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat)</span></code></pre></div>
</div>
<p>To make use of the techniques below, you need to use the second notation.</p>
<section id="assumptions-of-the-simple-linear-regression-model" class="level2">
<h2 class="anchored" data-anchor-id="assumptions-of-the-simple-linear-regression-model">Assumptions of the simple linear regression model</h2>
<p>A simple linear regression model relates one continuous predictor to a continuous outcome in terms of a straight line and some random scatter about that line. Its key assumptions are the following:</p>
<ol type="1">
<li><p>A straight line adequately captures the trend in the data. The model will still gladly estimate the form of the linear relationship in the data even if this relationship isn’t approximately linear, but its estimates won’t be as relevant.</p></li>
<li><p>The residuals are independent of one another. While this extremely important assumption can sometimes be checked, in most cases you’ll need to know how the data were collected to know whether it is tenable. For this reason, I won’t go into this assumption.</p></li>
<li><p>The amount of scatter of the residuals doesn’t vary with the predictor or (equivalently) with the fitted values for the outcome.</p></li>
<li><p>If you compute p-values or construct confidence intervals based on t-distributions, you tacitly assume that the residuals are drawn from a normal distribution. This assumption isn’t <em>that</em> important inasmuch as the Central Limit Theorem tends to kick in for reasonably-sized samples. Perhaps more importantly in such cases, the regression line captures the conditional means of <img src="https://latex.codecogs.com/png.latex?y"> given <img src="https://latex.codecogs.com/png.latex?x"> (e.g., the estimated mean for the outcome when the predictor value is 15). But if the distribution of the residuals is bimodal, skewed or otherwise wonky, the mean may not be such a relevant summary of the distribution lying behind it.</p></li>
</ol>
</section>
<section id="assumption-checks-and-sampling-error" class="level2">
<h2 class="anchored" data-anchor-id="assumption-checks-and-sampling-error">Assumption checks and sampling error</h2>
<p>When checking model assumptions, it’s important to keep <strong>sampling error</strong> in mind. <em>Even if</em> the residuals were actually drawn from a normal distribution, their distribution needn’t look normal in any given sample, as the figure below shows. Similarly, the residuals in a given sample may seem like they don’t have constant variance even if they actually do in the population, and a relationship may seem somewhat nonlinear in a sample even if it’s perfectly linear in the population at large.</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2018-04-25-graphical-model-checking/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>But what’s important isn’t whether the normality, constant variance and linearity exist in the sample, but whether they exist in the population at large. Now it’s pretty difficult to tell conclusively whether this is indeed the case based on a smallish sample. But what you <em>can</em> do is check whether you could plausibly find the same degree of nonlinearity, non-constant variance and nonnormality that you observe in your sample even if they actually don’t occur in the population. Buja et al.&nbsp;(2009) and Majumder et al.&nbsp;(2013) introduce a visual inferencing procedure that allows you to judge whether the residual patterns in your sample are cause for concern or whether they are in fact to be expected even if everything were peachy. Below I illustrate this procedure (also see an earlier blog post for another example of visual inferencing: <a href="../2014-09-12-a-graphical-explanation-of-p-values"><em>A purely graphical explanation of p-values</em></a>).</p>
</section>
<section id="an-example" class="level2">
<h2 class="anchored" data-anchor-id="an-example">An example</h2>
<p>I’m going to use an old dataset of mine to fit a simple linear regression model between an outcome (<code>TotCorrect</code>, which in principle can take integer values between 0 and 45) and a predictor (<code>WST</code>, which takes integer values between 0 and 42) using <code>R</code>. The data can be read in directly from my webspace.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read in data</span></span>
<span id="cb3-2">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://homeweb.unifr.ch/VanhoveJ/Pub/Data/VanhoveBerthele2015.csv"</span>,</span>
<span id="cb3-3">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.strings =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-9999"</span>)</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Only retain complete cases</span></span>
<span id="cb3-6">dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dat[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">complete.cases</span>(dat), ]</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit regression model</span></span>
<span id="cb3-9">wst.lm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(TotCorrect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> WST, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> dat)</span></code></pre></div>
</div>
<p>If you want to inspect the estimated coefficients and their standard errors, run the command <code>summary(wst.lm)</code>. Here I’ll skip right to the assumption checks.</p>
<section id="checking-for-non-linearity" class="level3">
<h3 class="anchored" data-anchor-id="checking-for-non-linearity">Checking for non-linearity</h3>
<p>I fitted the relationship between <code>WST</code> and <code>TotCorrect</code> linearly. This assumption is typically checked by inspecting whether the model’s residuals still show some trend when plotted against the model’s fitted values. If the relationship is linear, there shouldn’t be no such trend. However, due to random variation, you’re bound to find some pattern in the residuals if you squint hard enough. To help analysts evaluate whether such patterns are compatible with a truly linear relationship tainted by some random variation, Buja et al.&nbsp;(2009) and Majumder et al.&nbsp;(2013) suggest the following procedure:</p>
<ol>
<li>
Fit your model.
</li>
<li>
<p>Simulate new outcome data from your model. In our example, the estimated intercept is about 7.83 and the estimated slope parameter for the <code>WST</code> variable is about 0.29.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Estimated coefficients</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(wst.lm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(Intercept)         WST 
  7.8321310   0.2860069 </code></pre>
</div>
</div>
<p>For a participant with a <code>WST</code> value of 13, the fitted <code>TotCorrect</code> value is consequently <img src="https://latex.codecogs.com/png.latex?7.83%20+%200.29%20%5Ctimes%2013%20=%2011.6">. To simulate a new datum for such a participant, this fitted value (<img src="https://latex.codecogs.com/png.latex?11.6">) is combined with a random number drawn from a normal distribution whose mean is 0 and whose standard deviation equals the model estimate for the standard deviation of the residuals – in our case about 4.81.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Estimated standard deviation of residuals</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sigma</span>(wst.lm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4.814969</code></pre>
</div>
</div>
<p>Such new outcome data are simulated a couple of times for each observation in the dataset. (This can be achieved quickly using the <code>simulate()</code> function.)</p>
<p>Importantly, the new outcome data were simulated from a regression model that assumes that the relationship between the predictor and the outcome is linear, that the residuals are randomly sampled from one and the same normal distribution and so have constant variance. In a word, <em>all assumptions we want to test are literally true in the simulated data</em>.</p>
</li>
<li>
Now refit your model to the simulated datasets and extract the residuals from each model.
</li>
<li>
Draw diagnostic plots for both your actual model and the models fitted on the simulated datasets (for which the model’s assumptions are literally true) and jumble up the different plots.
</li>
<li>
If you can’t distinguish the diagnostic plot based on your actual data from the ones based on the simulated datasets, it doesn’t suggest that your model violates the assumption that you were testing.
</li>
</ol>
<p>We’ll carry out these steps in <code>R</code>, of course; the <a href="https://cran.r-project.org/web/packages/nullabor/vignettes/nullabor.html"><code>nullabor</code></a> package is helpful for this.</p>
<p>The visual inferencing procedure is based on randomly generated data so if you want to obtain the same results as in this blog post, be sure to run the <code>set.seed()</code> command below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set seed for generating random numbers</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2018-04-25</span>)</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the tidyverse packages;</span></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  use install.packages("tidyverse")</span></span>
<span id="cb8-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  to install if needed.</span></span>
<span id="cb8-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the nullabor package (for visual inferencing);</span></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  use install.packages("nullabor")</span></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  to install if needed.</span></span>
<span id="cb8-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(nullabor)</span></code></pre></div>
</div>
<p>Then construct a data frame that contains the real data and the real model’s residuals and fitted values. Importantly, the column with the residuals should be called <code>.resid</code> and the one with the fitted values <code>.fitted</code>, otherwise the next steps won’t work.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">real_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(dat,</span>
<span id="cb9-2">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.resid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">residuals</span>(wst.lm),</span>
<span id="cb9-3">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.fitted =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fitted</span>(wst.lm))</span></code></pre></div>
</div>
<p>Now create a new object (here <code>parade</code>) that combines the newly created <code>real_data</code> with (by default) 19 similar but simulated datasets based on the same model. This is accomplished using <code>nullabor</code>’s convenience function <code>null_lm()</code> (for generating the simulated datasets) and the <code>lineup()</code> function (for combining the real and simulated datasets and shuffling their positions).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">parade <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lineup</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">null_lm</span>(TotCorrect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> WST), real_data)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>decrypt("sFZM ldbd 32 PN43b3N2 ux")</code></pre>
</div>
</div>
<p>We’ll come back to this “decrypt” message in a minute. First let’s plot the relevant diagnostic plots to check for remaining trends in the residuals:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(parade,</span>
<span id="cb12-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .fitted,             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot residuals against</span></span>
<span id="cb12-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .resid)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  fitted values</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot values as points</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y ~ x"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add a scatterplot smoother (optional)</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .sample)             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># separate panels for each dataset</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`geom_smooth()` using method = 'loess'</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2018-04-25-graphical-model-checking/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="960"></p>
</div>
</div>
<p>In your view, which plot shows the strongest residual trend?</p>
<p>After you’ve made up your mind, copy-paste <code>decrypt("sFZM ldbd 32 PN43b3N2 ux")</code> (the output of the <code>lineup()</code> command above) to the R prompt. If this confirms your answer, then perhaps you ought to consider reading up on models that can take into account nonlinear patterns. But if you thought another plot was more conspicuous, then that shows that randomness alone can plausibly account for any departures from linearity in your actual data.</p>
<p>(In case you already knew beforehand what the diagnostic plot for your model looks like, just mail this type of lineup to a couple of colleagues of yours and ask them to identify the most conspicuous pattern.)</p>
</section>
<section id="checking-for-non-constant-variance" class="level3">
<h3 class="anchored" data-anchor-id="checking-for-non-constant-variance">Checking for non-constant variance</h3>
<p>To check for non-constant variance (heteroskedasticity), the idea is exactly the same as before. The only thing that changes is the diagnostic plot. We’ll create a new lineup with new simulated datasets, though.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">parade <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lineup</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">null_lm</span>(TotCorrect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> WST), real_data)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>decrypt("sFZM ldbd 32 PN43b3N2 5J")</code></pre>
</div>
</div>
<p>To check for heteroskedasticity, statisticians typically plot the square roots of the absolute residuals against the fitted values against the fitted data. If the variance around the regression line is constant, then you’d expect a horizontal trend line in this type of plot.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(parade,</span>
<span id="cb16-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .fitted, </span>
<span id="cb16-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(.resid)))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y ~ x"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .sample)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`geom_smooth()` using method = 'loess'</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2018-04-25-graphical-model-checking/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="960"></p>
</div>
</div>
<p>Again, ask yourself which plot looks most conspicuously heteroskedastic? Then check your answer with <code>decrypt()</code>. If you guessed right, then perhaps you need to consider brushing up on methods that can take into account heteroskedasticity, but otherwise, you can conclude the residual plot doesn’t give you much reason to doubt that the residuals are homoskedastic.</p>
</section>
<section id="checking-for-non-normality" class="level3">
<h3 class="anchored" data-anchor-id="checking-for-non-normality">Checking for non-normality</h3>
<p>The same procedure as every year, James. A useful diagnostic plot for checking for non-normal residuals is the quantile-quantile plot. If the residuals are distributed normally, the points in such plots fall on a diagonal line.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">parade <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lineup</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">null_lm</span>(TotCorrect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> WST), real_data)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>decrypt("sFZM ldbd 32 PN43b3N2 5x")</code></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(parade,</span>
<span id="cb20-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sample =</span> TotCorrect)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_qq</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .sample)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2018-04-25-graphical-model-checking/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="960"></p>
</div>
</div>
<p>Again, decide which pattern is most conspicuous and check your answer. If the normality assumption is clearly violated, you need to ask yourself whether the degree of normality is such that it would affect your inferences. If you want to play it safe, you can try computing p-values and constructing confidence intervals using a bootstrap procedure that doesn’t assume normality, for instance.</p>
</section>
<section id="impossible-data" class="level3">
<h3 class="anchored" data-anchor-id="impossible-data">Impossible data</h3>
<p>The technique illustrated above is also useful to make it clearer for yourself what you know about your data but your model doesn’t. Let’s generate a new lineup:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">parade <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lineup</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">null_lm</span>(TotCorrect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> WST), real_data)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>decrypt("sFZM ldbd 32 PN43b3N2 5O")</code></pre>
</div>
</div>
<p>Now draw scatterplots as you would:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(parade,</span>
<span id="cb23-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> WST, </span>
<span id="cb23-3">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> TotCorrect)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y ~ x"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .sample)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`geom_smooth()` using method = 'loess'</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2018-04-25-graphical-model-checking/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="960"></p>
</div>
</div>
<p>Take a closer look at each of these plots. Do you find patterns or data points that are just <em>impossible</em> given what you know about how the data were collected?</p>
<p>Several of these plots contain <code>TotCorrect</code> values below 0, but such values are impossible. I’m not saying categorically that this is a problem, but it does show that the model doesn’t ‘know’ everything about the problem at hand that I do know.</p>
<p>Let’s try this once more. Instead of drawing scatterplots, I visualise the distribution of the outcome variable using empirical cumulative density plots.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">parade <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lineup</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">null_lm</span>(TotCorrect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> WST), real_data)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>decrypt("sFZM ldbd 32 PN43b3N2 5t")</code></pre>
</div>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(parade,</span>
<span id="cb27-2">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(TotCorrect)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_ecdf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"step"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .sample)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://janhove.github.io/posts/2018-04-25-graphical-model-checking/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="960"></p>
</div>
</div>
<p>What you’ll notice here is that there’s one empirical cumulative density plot that’s considerably more step-like than the others. This is the plot for our actual data and it reflects the fact that our actual outcome variable is measured in integers (0, 1, 2, …) rather than decimals. This is something I know, but clearly the model doesn’t and so it happily generates non-integer values for the outcome. This doesn’t dramatically affect the inferences from the model, but it still goes to show that fairly run-of-the-mill models such as these don’t encode everything the analyst knows about the problem at hand.</p>
</section>
</section>
<section id="an-important-caveat" class="level2">
<h2 class="anchored" data-anchor-id="an-important-caveat">An important caveat</h2>
<p>Saying that a diagnostic plot is still compatible with the model’s assumptions doesn’t mean that the diagnostic plot confirms that the model’s assumptions are true. This is particulary important if you’re dealing with small samples: Assumptions such as normality are more important yet harder to verify in small samples.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>If your diagnostic plots suggest departures from linearity, homoskedasticity and normality, don’t panic: Such deviations may just be due to randomness. Draw a lineup of plots with both simulated and real data, and see if you can guess which plot show the real data: If you can’t, your diagnostic plot is in fact compatible with the model’s assumptions. If you don’t trust your own judgement, just ask a colleague to identify the most different plot in the lineup.</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>Buja, Andreas, Dianne Cook, Heike Hofmann, Michael Lawrence, Eun-Kyung Lee, Deborah F. Swayne &amp; Hadley Wickham. 2009. Statistical inference for exploratory data analysis and model diagnostics. <em>Philosophical Transactions of the Royal Society A</em> 367(1906). 4361-4383. <a href="http://doi.org/10.1098/rsta.2009.0120">doi:10.1098/rsta.2009.0120</a></p>
<p>Majumder, Mahbubul, Heike Hofmann &amp; Dianne Cook. 2013. Validation of visual statistical inference, applied to linear models. <em>Journal of the American Statistical Association</em> 108(503). 942-956. <a href="http://doi.org/10.1080/01621459.2013.808157">doi:10.1080/01621459.2013.808157</a></p>
</section>
<section id="software-versions" class="level2">
<h2 class="anchored" data-anchor-id="software-versions">Software versions</h2>
<p>Please note that I reran the code on this page on August 6, 2023.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 (2023-06-16)
 os       Ubuntu 22.04.3 LTS
 system   x86_64, linux-gnu
 ui       X11
 language en_US
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Zurich
 date     2023-08-27
 pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package     * version date (UTC) lib source
 cachem        1.0.6   2021-08-19 [2] CRAN (R 4.2.0)
 callr         3.7.3   2022-11-02 [1] CRAN (R 4.3.1)
 class         7.3-22  2023-05-03 [4] CRAN (R 4.3.1)
 cli           3.6.1   2023-03-23 [1] CRAN (R 4.3.0)
 cluster       2.1.4   2022-08-22 [4] CRAN (R 4.2.1)
 colorspace    2.1-0   2023-01-23 [1] CRAN (R 4.3.0)
 crayon        1.5.2   2022-09-29 [1] CRAN (R 4.3.1)
 DEoptimR      1.1-0   2023-07-12 [1] CRAN (R 4.3.1)
 devtools      2.4.5   2022-10-11 [1] CRAN (R 4.3.1)
 digest        0.6.29  2021-12-01 [2] CRAN (R 4.2.0)
 diptest       0.76-0  2021-05-04 [1] CRAN (R 4.3.1)
 dplyr       * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)
 ellipsis      0.3.2   2021-04-29 [2] CRAN (R 4.2.0)
 evaluate      0.15    2022-02-18 [2] CRAN (R 4.2.0)
 fansi         1.0.4   2023-01-22 [1] CRAN (R 4.3.1)
 farver        2.1.1   2022-07-06 [1] CRAN (R 4.3.0)
 fastmap       1.1.0   2021-01-25 [2] CRAN (R 4.2.0)
 flexmix       2.3-19  2023-03-16 [1] CRAN (R 4.3.1)
 forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)
 fpc           2.2-10  2023-01-07 [1] CRAN (R 4.3.1)
 fs            1.5.2   2021-12-08 [2] CRAN (R 4.2.0)
 generics      0.1.3   2022-07-05 [1] CRAN (R 4.3.0)
 ggplot2     * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)
 glue          1.6.2   2022-02-24 [2] CRAN (R 4.2.0)
 gtable        0.3.3   2023-03-21 [1] CRAN (R 4.3.0)
 hms           1.1.3   2023-03-21 [1] CRAN (R 4.3.0)
 htmltools     0.5.5   2023-03-23 [1] CRAN (R 4.3.0)
 htmlwidgets   1.6.2   2023-03-17 [1] CRAN (R 4.3.1)
 httpuv        1.6.11  2023-05-11 [1] CRAN (R 4.3.1)
 jsonlite      1.8.7   2023-06-29 [1] CRAN (R 4.3.1)
 kernlab       0.9-32  2023-01-31 [1] CRAN (R 4.3.1)
 knitr         1.39    2022-04-26 [2] CRAN (R 4.2.0)
 labeling      0.4.2   2020-10-20 [1] CRAN (R 4.3.0)
 later         1.3.1   2023-05-02 [1] CRAN (R 4.3.1)
 lattice       0.21-8  2023-04-05 [4] CRAN (R 4.3.0)
 lifecycle     1.0.3   2022-10-07 [1] CRAN (R 4.3.0)
 lubridate   * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)
 magrittr      2.0.3   2022-03-30 [1] CRAN (R 4.3.0)
 MASS          7.3-60  2023-05-04 [4] CRAN (R 4.3.1)
 Matrix        1.6-0   2023-07-08 [4] CRAN (R 4.3.1)
 mclust        6.0.0   2022-10-31 [1] CRAN (R 4.3.1)
 memoise       2.0.1   2021-11-26 [2] CRAN (R 4.2.0)
 mgcv          1.9-0   2023-07-11 [4] CRAN (R 4.3.1)
 mime          0.10    2021-02-13 [2] CRAN (R 4.0.2)
 miniUI        0.1.1.1 2018-05-18 [1] CRAN (R 4.3.1)
 modeltools    0.2-23  2020-03-05 [1] CRAN (R 4.3.1)
 moments       0.14.1  2022-05-02 [1] CRAN (R 4.3.1)
 munsell       0.5.0   2018-06-12 [1] CRAN (R 4.3.0)
 nlme          3.1-162 2023-01-31 [4] CRAN (R 4.2.2)
 nnet          7.3-19  2023-05-03 [4] CRAN (R 4.3.1)
 nullabor    * 0.3.9   2020-02-25 [1] CRAN (R 4.3.1)
 pillar        1.9.0   2023-03-22 [1] CRAN (R 4.3.0)
 pkgbuild      1.4.2   2023-06-26 [1] CRAN (R 4.3.1)
 pkgconfig     2.0.3   2019-09-22 [2] CRAN (R 4.2.0)
 pkgload       1.3.2.1 2023-07-08 [1] CRAN (R 4.3.1)
 prabclus      2.3-2   2020-01-08 [1] CRAN (R 4.3.1)
 prettyunits   1.1.1   2020-01-24 [2] CRAN (R 4.2.0)
 processx      3.8.2   2023-06-30 [1] CRAN (R 4.3.1)
 profvis       0.3.8   2023-05-02 [1] CRAN (R 4.3.1)
 promises      1.2.0.1 2021-02-11 [1] CRAN (R 4.3.1)
 ps            1.7.5   2023-04-18 [1] CRAN (R 4.3.1)
 purrr       * 1.0.1   2023-01-10 [1] CRAN (R 4.3.0)
 R6            2.5.1   2021-08-19 [2] CRAN (R 4.2.0)
 Rcpp          1.0.11  2023-07-06 [1] CRAN (R 4.3.1)
 readr       * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)
 remotes       2.4.2   2021-11-30 [2] CRAN (R 4.2.0)
 rlang         1.1.1   2023-04-28 [1] CRAN (R 4.3.0)
 rmarkdown     2.21    2023-03-26 [1] CRAN (R 4.3.0)
 robustbase    0.99-0  2023-06-16 [1] CRAN (R 4.3.1)
 rstudioapi    0.14    2022-08-22 [1] CRAN (R 4.3.0)
 scales        1.2.1   2022-08-20 [1] CRAN (R 4.3.0)
 sessioninfo   1.2.2   2021-12-06 [2] CRAN (R 4.2.0)
 shiny         1.7.4.1 2023-07-06 [1] CRAN (R 4.3.1)
 stringi       1.7.12  2023-01-11 [1] CRAN (R 4.3.1)
 stringr     * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)
 tibble      * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)
 tidyr       * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)
 tidyselect    1.2.0   2022-10-10 [1] CRAN (R 4.3.0)
 tidyverse   * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)
 timechange    0.2.0   2023-01-11 [1] CRAN (R 4.3.0)
 tzdb          0.4.0   2023-05-12 [1] CRAN (R 4.3.0)
 urlchecker    1.0.1   2021-11-30 [1] CRAN (R 4.3.1)
 usethis       2.2.2   2023-07-06 [1] CRAN (R 4.3.1)
 utf8          1.2.3   2023-01-31 [1] CRAN (R 4.3.1)
 vctrs         0.6.3   2023-06-14 [1] CRAN (R 4.3.0)
 withr         2.5.0   2022-03-03 [2] CRAN (R 4.2.0)
 xfun          0.39    2023-04-20 [1] CRAN (R 4.3.0)
 xtable        1.8-4   2019-04-21 [1] CRAN (R 4.3.1)
 yaml          2.3.5   2022-02-21 [2] CRAN (R 4.2.0)

 [1] /home/jan/R/x86_64-pc-linux-gnu-library/4.3
 [2] /usr/local/lib/R/site-library
 [3] /usr/lib/R/site-library
 [4] /usr/lib/R/library

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>assumptions</category>
  <category>R</category>
  <category>tutorial</category>
  <category>graphs</category>
  <guid>https://janhove.github.io/posts/2018-04-25-graphical-model-checking/index.html</guid>
  <pubDate>Tue, 24 Apr 2018 22:00:00 GMT</pubDate>
</item>
</channel>
</rss>
